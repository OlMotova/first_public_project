<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="0" failures="41" skipped="171" tests="10799" time="149.096" timestamp="2024-08-03T18:57:30.901289+03:00" hostname="DESKTOP-1OENQTM"><testcase classname="" name="tests.arrays.masked.test_arrow_compat" time="0.000"><skipped message="collection skipped">('C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\pandas\\tests\\arrays\\masked\\test_arrow_compat.py', 11, "Skipped: could not import 'pyarrow': No module named 'pyarrow'")</skipped></testcase><testcase classname="" name="tests.arrays.period.test_arrow_compat" time="0.000"><skipped message="collection skipped">('C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\pandas\\tests\\arrays\\period\\test_arrow_compat.py', 19, "Skipped: could not import 'pyarrow': No module named 'pyarrow'")</skipped></testcase><testcase classname="" name="tests.extension.test_arrow" time="0.000"><skipped message="collection skipped">('C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\pandas\\tests\\extension\\test_arrow.py', 65, "Skipped: could not import 'pyarrow': No module named 'pyarrow'")</skipped></testcase><testcase classname="" name="tests.frame.test_arrow_interface" time="0.000"><skipped message="collection skipped">('C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\pandas\\tests\\frame\\test_arrow_interface.py', 9, "Skipped: could not import 'pyarrow': No module named 'pyarrow'")</skipped></testcase><testcase classname="" name="tests.generic.test_to_xarray" time="0.000"><skipped message="collection skipped">('C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\pandas\\tests\\generic\\test_to_xarray.py', 13, "Skipped: could not import 'xarray': No module named 'xarray'")</skipped></testcase><testcase classname="" name="tests.groupby.test_numba" time="0.000"><skipped message="collection skipped">('C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\pandas\\tests\\groupby\\test_numba.py', 12, "Skipped: could not import 'numba': No module named 'numba'")</skipped></testcase><testcase classname="" name="tests.io.excel.test_odf" time="0.000"><skipped message="collection skipped">('C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\pandas\\tests\\io\\excel\\test_odf.py', 11, "Skipped: could not import 'odf': No module named 'odf'")</skipped></testcase><testcase classname="" name="tests.io.excel.test_odswriter" time="0.000"><skipped message="collection skipped">('C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\pandas\\tests\\io\\excel\\test_odswriter.py', 16, "Skipped: could not import 'odf': No module named 'odf'")</skipped></testcase><testcase classname="" name="tests.io.excel.test_openpyxl" time="0.000"><skipped message="collection skipped">('C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\pandas\\tests\\io\\excel\\test_openpyxl.py', 20, "Skipped: could not import 'openpyxl': No module named 'openpyxl'")</skipped></testcase><testcase classname="" name="tests.io.excel.test_style" time="0.000"><skipped message="collection skipped">('C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\pandas\\tests\\io\\excel\\test_style.py', 19, "Skipped: could not import 'jinja2': No module named 'jinja2'")</skipped></testcase><testcase classname="" name="tests.io.excel.test_xlrd" time="0.000"><skipped message="collection skipped">('C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\pandas\\tests\\io\\excel\\test_xlrd.py', 14, "Skipped: could not import 'xlrd': No module named 'xlrd'")</skipped></testcase><testcase classname="" name="tests.io.excel.test_xlsxwriter" time="0.000"><skipped message="collection skipped">('C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\pandas\\tests\\io\\excel\\test_xlsxwriter.py', 12, "Skipped: could not import 'xlsxwriter': No module named 'xlsxwriter'")</skipped></testcase><testcase classname="" name="tests.io.formats.style.test_bar" time="0.000"><skipped message="collection skipped">('C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\pandas\\tests\\io\\formats\\style\\test_bar.py', 12, "Skipped: could not import 'jinja2': No module named 'jinja2'")</skipped></testcase><testcase classname="" name="tests.io.formats.style.test_exceptions" time="0.000"><skipped message="collection skipped">('C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\pandas\\tests\\io\\formats\\style\\test_exceptions.py', 3, "Skipped: could not import 'jinja2': No module named 'jinja2'")</skipped></testcase><testcase classname="" name="tests.io.formats.style.test_format" time="0.000"><skipped message="collection skipped">('C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\pandas\\tests\\io\\formats\\style\\test_format.py', 14, "Skipped: could not import 'jinja2': No module named 'jinja2'")</skipped></testcase><testcase classname="" name="tests.io.formats.style.test_highlight" time="0.000"><skipped message="collection skipped">('C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\pandas\\tests\\io\\formats\\style\\test_highlight.py', 10, "Skipped: could not import 'jinja2': No module named 'jinja2'")</skipped></testcase><testcase classname="" name="tests.io.formats.style.test_html" time="0.000"><skipped message="collection skipped">('C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\pandas\\tests\\io\\formats\\style\\test_html.py', 15, "Skipped: could not import 'jinja2': No module named 'jinja2'")</skipped></testcase><testcase classname="" name="tests.io.formats.style.test_matplotlib" time="0.000"><skipped message="collection skipped">('C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\pandas\\tests\\io\\formats\\style\\test_matplotlib.py', 12, "Skipped: could not import 'matplotlib': No module named 'matplotlib'")</skipped></testcase><testcase classname="" name="tests.io.formats.style.test_non_unique" time="0.000"><skipped message="collection skipped">('C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\pandas\\tests\\io\\formats\\style\\test_non_unique.py', 10, "Skipped: could not import 'jinja2': No module named 'jinja2'")</skipped></testcase><testcase classname="" name="tests.io.formats.style.test_style" time="0.000"><skipped message="collection skipped">('C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\pandas\\tests\\io\\formats\\style\\test_style.py', 18, "Skipped: could not import 'jinja2': No module named 'jinja2'")</skipped></testcase><testcase classname="" name="tests.io.formats.style.test_to_latex" time="0.000"><skipped message="collection skipped">('C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\pandas\\tests\\io\\formats\\style\\test_to_latex.py', 13, "Skipped: could not import 'jinja2': No module named 'jinja2'")</skipped></testcase><testcase classname="" name="tests.io.formats.style.test_to_string" time="0.000"><skipped message="collection skipped">('C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\pandas\\tests\\io\\formats\\style\\test_to_string.py', 10, "Skipped: could not import 'jinja2': No module named 'jinja2'")</skipped></testcase><testcase classname="" name="tests.io.formats.style.test_tooltip" time="0.000"><skipped message="collection skipped">('C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\pandas\\tests\\io\\formats\\style\\test_tooltip.py', 6, "Skipped: could not import 'jinja2': No module named 'jinja2'")</skipped></testcase><testcase classname="" name="tests.io.formats.test_to_latex" time="0.000"><skipped message="collection skipped">('C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\pandas\\tests\\io\\formats\\test_to_latex.py', 14, "Skipped: could not import 'jinja2': No module named 'jinja2'")</skipped></testcase><testcase classname="" name="tests.io.formats.test_to_markdown" time="0.000"><skipped message="collection skipped">('C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\pandas\\tests\\io\\formats\\test_to_markdown.py', 11, "Skipped: could not import 'tabulate': No module named 'tabulate'")</skipped></testcase><testcase classname="" name="tests.io.pytables.test_append" time="0.000"><skipped message="collection skipped">('C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\pandas\\tests\\io\\pytables\\common.py', 10, "Skipped: could not import 'tables': No module named 'tables'")</skipped></testcase><testcase classname="" name="tests.io.pytables.test_categorical" time="0.000"><skipped message="collection skipped">('C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\pandas\\tests\\io\\pytables\\common.py', 10, "Skipped: could not import 'tables': No module named 'tables'")</skipped></testcase><testcase classname="" name="tests.io.pytables.test_compat" time="0.000"><skipped message="collection skipped">('C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\pandas\\tests\\io\\pytables\\test_compat.py', 6, "Skipped: could not import 'tables': No module named 'tables'")</skipped></testcase><testcase classname="" name="tests.io.pytables.test_complex" time="0.000"><skipped message="collection skipped">('C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\pandas\\tests\\io\\pytables\\common.py', 10, "Skipped: could not import 'tables': No module named 'tables'")</skipped></testcase><testcase classname="" name="tests.io.pytables.test_errors" time="0.000"><skipped message="collection skipped">('C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\pandas\\tests\\io\\pytables\\common.py', 10, "Skipped: could not import 'tables': No module named 'tables'")</skipped></testcase><testcase classname="" name="tests.io.pytables.test_file_handling" time="0.000"><skipped message="collection skipped">('C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\pandas\\tests\\io\\pytables\\common.py', 10, "Skipped: could not import 'tables': No module named 'tables'")</skipped></testcase><testcase classname="" name="tests.io.pytables.test_keys" time="0.000"><skipped message="collection skipped">('C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\pandas\\tests\\io\\pytables\\common.py', 10, "Skipped: could not import 'tables': No module named 'tables'")</skipped></testcase><testcase classname="" name="tests.io.pytables.test_put" time="0.000"><skipped message="collection skipped">('C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\pandas\\tests\\io\\pytables\\common.py', 10, "Skipped: could not import 'tables': No module named 'tables'")</skipped></testcase><testcase classname="" name="tests.io.pytables.test_read" time="0.000"><skipped message="collection skipped">('C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\pandas\\tests\\io\\pytables\\common.py', 10, "Skipped: could not import 'tables': No module named 'tables'")</skipped></testcase><testcase classname="" name="tests.io.pytables.test_retain_attributes" time="0.000"><skipped message="collection skipped">('C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\pandas\\tests\\io\\pytables\\common.py', 10, "Skipped: could not import 'tables': No module named 'tables'")</skipped></testcase><testcase classname="" name="tests.io.pytables.test_round_trip" time="0.000"><skipped message="collection skipped">('C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\pandas\\tests\\io\\pytables\\common.py', 10, "Skipped: could not import 'tables': No module named 'tables'")</skipped></testcase><testcase classname="" name="tests.io.pytables.test_select" time="0.000"><skipped message="collection skipped">('C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\pandas\\tests\\io\\pytables\\common.py', 10, "Skipped: could not import 'tables': No module named 'tables'")</skipped></testcase><testcase classname="" name="tests.io.pytables.test_store" time="0.000"><skipped message="collection skipped">('C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\pandas\\tests\\io\\pytables\\common.py', 10, "Skipped: could not import 'tables': No module named 'tables'")</skipped></testcase><testcase classname="" name="tests.io.pytables.test_subclass" time="0.000"><skipped message="collection skipped">('C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\pandas\\tests\\io\\pytables\\test_subclass.py', 15, "Skipped: could not import 'tables': No module named 'tables'")</skipped></testcase><testcase classname="" name="tests.io.pytables.test_time_series" time="0.000"><skipped message="collection skipped">('C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\pandas\\tests\\io\\pytables\\common.py', 10, "Skipped: could not import 'tables': No module named 'tables'")</skipped></testcase><testcase classname="" name="tests.io.pytables.test_timezones" time="0.000"><skipped message="collection skipped">('C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\pandas\\tests\\io\\pytables\\common.py', 10, "Skipped: could not import 'tables': No module named 'tables'")</skipped></testcase><testcase classname="" name="tests.io.test_feather" time="0.000"><skipped message="collection skipped">('C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\pandas\\tests\\io\\test_feather.py', 18, "Skipped: could not import 'pyarrow': No module named 'pyarrow'")</skipped></testcase><testcase classname="" name="tests.io.test_orc" time="0.000"><skipped message="collection skipped">('C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\pandas\\tests\\io\\test_orc.py', 16, "Skipped: could not import 'pyarrow.orc': No module named 'pyarrow'")</skipped></testcase><testcase classname="" name="tests.io.test_spss" time="0.000"><skipped message="collection skipped">('C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\pandas\\tests\\io\\test_spss.py', 11, "Skipped: could not import 'pyreadstat': No module named 'pyreadstat'")</skipped></testcase><testcase classname="" name="tests.plotting.frame.test_frame" time="0.000"><skipped message="collection skipped">('C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\pandas\\tests\\plotting\\frame\\test_frame.py', 50, "Skipped: could not import 'matplotlib': No module named 'matplotlib'")</skipped></testcase><testcase classname="" name="tests.plotting.frame.test_frame_color" time="0.000"><skipped message="collection skipped">('C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\pandas\\tests\\plotting\\frame\\test_frame_color.py', 17, "Skipped: could not import 'matplotlib': No module named 'matplotlib'")</skipped></testcase><testcase classname="" name="tests.plotting.frame.test_frame_groupby" time="0.000"><skipped message="collection skipped">('C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\pandas\\tests\\plotting\\frame\\test_frame_groupby.py', 8, "Skipped: could not import 'matplotlib': No module named 'matplotlib'")</skipped></testcase><testcase classname="" name="tests.plotting.frame.test_frame_legend" time="0.000"><skipped message="collection skipped">('C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\pandas\\tests\\plotting\\frame\\test_frame_legend.py', 17, "Skipped: could not import 'matplotlib': No module named 'matplotlib'")</skipped></testcase><testcase classname="" name="tests.plotting.frame.test_frame_subplots" time="0.000"><skipped message="collection skipped">('C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\pandas\\tests\\plotting\\frame\\test_frame_subplots.py', 29, "Skipped: could not import 'matplotlib': No module named 'matplotlib'")</skipped></testcase><testcase classname="" name="tests.plotting.frame.test_hist_box_by" time="0.000"><skipped message="collection skipped">('C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\pandas\\tests\\plotting\\frame\\test_hist_box_by.py', 15, "Skipped: could not import 'matplotlib': No module named 'matplotlib'")</skipped></testcase><testcase classname="" name="tests.plotting.test_boxplot_method" time="0.000"><skipped message="collection skipped">('C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\pandas\\tests\\plotting\\test_boxplot_method.py', 28, "Skipped: could not import 'matplotlib': No module named 'matplotlib'")</skipped></testcase><testcase classname="" name="tests.plotting.test_common" time="0.000"><skipped message="collection skipped">('C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\pandas\\tests\\plotting\\test_common.py', 10, "Skipped: could not import 'matplotlib.pyplot': No module named 'matplotlib'")</skipped></testcase><testcase classname="" name="tests.plotting.test_converter" time="0.000"><skipped message="collection skipped">('C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\pandas\\tests\\plotting\\test_converter.py', 44, "Skipped: could not import 'matplotlib.pyplot': No module named 'matplotlib'")</skipped></testcase><testcase classname="" name="tests.plotting.test_datetimelike" time="0.000"><skipped message="collection skipped">('C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\pandas\\tests\\plotting\\test_datetimelike.py', 44, "Skipped: could not import 'matplotlib': No module named 'matplotlib'")</skipped></testcase><testcase classname="" name="tests.plotting.test_groupby" time="0.000"><skipped message="collection skipped">('C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\pandas\\tests\\plotting\\test_groupby.py', 17, "Skipped: could not import 'matplotlib': No module named 'matplotlib'")</skipped></testcase><testcase classname="" name="tests.plotting.test_hist_method" time="0.000"><skipped message="collection skipped">('C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\pandas\\tests\\plotting\\test_hist_method.py', 28, "Skipped: could not import 'matplotlib': No module named 'matplotlib'")</skipped></testcase><testcase classname="" name="tests.plotting.test_misc" time="0.000"><skipped message="collection skipped">('C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\pandas\\tests\\plotting\\test_misc.py', 29, "Skipped: could not import 'matplotlib': No module named 'matplotlib'")</skipped></testcase><testcase classname="" name="tests.plotting.test_series" time="0.000"><skipped message="collection skipped">('C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\pandas\\tests\\plotting\\test_series.py', 35, "Skipped: could not import 'matplotlib': No module named 'matplotlib'")</skipped></testcase><testcase classname="" name="tests.plotting.test_style" time="0.000"><skipped message="collection skipped">('C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\pandas\\tests\\plotting\\test_style.py', 5, "Skipped: could not import 'matplotlib': No module named 'matplotlib'")</skipped></testcase><testcase classname="" name="tests.series.accessors.test_list_accessor" time="0.000"><skipped message="collection skipped">('C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\pandas\\tests\\series\\accessors\\test_list_accessor.py', 11, "Skipped: could not import 'pyarrow': No module named 'pyarrow'")</skipped></testcase><testcase classname="" name="tests.series.accessors.test_struct_accessor" time="0.000"><skipped message="collection skipped">('C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\pandas\\tests\\series\\accessors\\test_struct_accessor.py', 18, "Skipped: could not import 'pyarrow': No module named 'pyarrow'")</skipped></testcase><testcase classname="" name="tests.window.test_online" time="0.000"><skipped message="collection skipped">('C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\pandas\\tests\\window\\test_online.py', 12, "Skipped: could not import 'numba': No module named 'numba'")</skipped></testcase><testcase classname="tests.api.test_api.TestPDApi" name="test_api" time="0.004" /><testcase classname="tests.api.test_api.TestPDApi" name="test_api_all" time="0.001" /><testcase classname="tests.api.test_api.TestPDApi" name="test_depr" time="0.001" /><testcase classname="tests.api.test_api.TestApi" name="test_api" time="0.001" /><testcase classname="tests.api.test_api.TestApi" name="test_api_typing" time="0.001" /><testcase classname="tests.api.test_api.TestApi" name="test_api_types" time="0.001" /><testcase classname="tests.api.test_api.TestApi" name="test_api_interchange" time="0.001" /><testcase classname="tests.api.test_api.TestApi" name="test_api_indexers" time="0.001" /><testcase classname="tests.api.test_api.TestApi" name="test_api_extensions" time="0.001" /><testcase classname="tests.api.test_api.TestTesting" name="test_testing" time="0.001" /><testcase classname="tests.api.test_api.TestTesting" name="test_util_in_top_level" time="0.001" /><testcase classname="tests.api.test_api" name="test_pandas_array_alias" time="0.001" /><testcase classname="tests.api.test_types.TestTypes" name="test_types" time="0.001" /><testcase classname="tests.api.test_types.TestTypes" name="test_deprecated_from_api_types" time="0.001" /><testcase classname="tests.apply.test_frame_apply" name="test_apply[python]" time="0.006" /><testcase classname="tests.apply.test_frame_apply" name="test_apply[numba]" time="0.002"><skipped type="pytest.skip" message="could not import 'numba': No module named 'numba'">C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\apply\test_frame_apply.py:42: could not import 'numba': No module named 'numba'</skipped></testcase><testcase classname="tests.apply.test_frame_apply" name="test_apply_args[python-True-0]" time="0.002" /><testcase classname="tests.apply.test_frame_apply" name="test_apply_args[python-True-1]" time="0.003" /><testcase classname="tests.apply.test_frame_apply" name="test_apply_args[python-False-0]" time="0.003" /><testcase classname="tests.apply.test_frame_apply" name="test_apply_args[python-False-1]" time="0.006" /><testcase classname="tests.apply.test_frame_apply" name="test_apply_args[numba-True-0]" time="0.002"><skipped type="pytest.skip" message="could not import 'numba': No module named 'numba'">C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\apply\test_frame_apply.py:64: could not import 'numba': No module named 'numba'</skipped></testcase><testcase classname="tests.apply.test_frame_apply" name="test_apply_args[numba-True-1]" time="0.002"><skipped type="pytest.skip" message="could not import 'numba': No module named 'numba'">C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\apply\test_frame_apply.py:64: could not import 'numba': No module named 'numba'</skipped></testcase><testcase classname="tests.apply.test_frame_apply" name="test_apply_args[numba-False-0]" time="0.002"><skipped type="pytest.skip" message="could not import 'numba': No module named 'numba'">C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\apply\test_frame_apply.py:64: could not import 'numba': No module named 'numba'</skipped></testcase><testcase classname="tests.apply.test_frame_apply" name="test_apply_args[numba-False-1]" time="0.002"><skipped type="pytest.skip" message="could not import 'numba': No module named 'numba'">C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\apply\test_frame_apply.py:64: could not import 'numba': No module named 'numba'</skipped></testcase><testcase classname="tests.apply.test_frame_apply" name="test_apply_categorical_func" time="0.003" /><testcase classname="tests.apply.test_frame_apply" name="test_apply_axis1_with_ea" time="0.002" /><testcase classname="tests.apply.test_frame_apply" name="test_agg_axis1_duplicate_index[1-None]" time="0.002" /><testcase classname="tests.apply.test_frame_apply" name="test_agg_axis1_duplicate_index[1-dtype1]" time="0.004" /><testcase classname="tests.apply.test_frame_apply" name="test_agg_axis1_duplicate_index[data2-None]" time="0.003" /><testcase classname="tests.apply.test_frame_apply" name="test_apply_mixed_datetimelike" time="0.005" /><testcase classname="tests.apply.test_frame_apply" name="test_apply_empty[python-sqrt]" time="0.002" /><testcase classname="tests.apply.test_frame_apply" name="test_apply_empty[python-mean]" time="0.001" /><testcase classname="tests.apply.test_frame_apply" name="test_apply_empty[numba-sqrt]" time="0.002"><skipped type="pytest.skip" message="could not import 'numba': No module named 'numba'">C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\apply\test_frame_apply.py:118: could not import 'numba': No module named 'numba'</skipped></testcase><testcase classname="tests.apply.test_frame_apply" name="test_apply_empty[numba-mean]" time="0.002"><skipped type="pytest.skip" message="could not import 'numba': No module named 'numba'">C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\apply\test_frame_apply.py:118: could not import 'numba': No module named 'numba'</skipped></testcase><testcase classname="tests.apply.test_frame_apply" name="test_apply_float_frame[python]" time="0.003" /><testcase classname="tests.apply.test_frame_apply" name="test_apply_float_frame[numba]" time="0.002"><skipped type="pytest.skip" message="could not import 'numba': No module named 'numba'">C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\apply\test_frame_apply.py:127: could not import 'numba': No module named 'numba'</skipped></testcase><testcase classname="tests.apply.test_frame_apply" name="test_apply_empty_except_index[python]" time="0.002" /><testcase classname="tests.apply.test_frame_apply" name="test_apply_empty_except_index[numba]" time="0.002"><skipped type="pytest.skip" message="could not import 'numba': No module named 'numba'">C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\apply\test_frame_apply.py:139: could not import 'numba': No module named 'numba'</skipped></testcase><testcase classname="tests.apply.test_frame_apply" name="test_apply_with_reduce_empty" time="0.003" /><testcase classname="tests.apply.test_frame_apply" name="test_apply_funcs_over_empty[sum]" time="0.003" /><testcase classname="tests.apply.test_frame_apply" name="test_apply_funcs_over_empty[prod]" time="0.003" /><testcase classname="tests.apply.test_frame_apply" name="test_apply_funcs_over_empty[any]" time="0.004" /><testcase classname="tests.apply.test_frame_apply" name="test_apply_funcs_over_empty[all]" time="0.002" /><testcase classname="tests.apply.test_frame_apply" name="test_nunique_empty" time="0.002" /><testcase classname="tests.apply.test_frame_apply" name="test_apply_standard_nonunique" time="0.003" /><testcase classname="tests.apply.test_frame_apply" name="test_apply_broadcast_scalars" time="0.004" /><testcase classname="tests.apply.test_frame_apply" name="test_apply_broadcast_scalars_axis1" time="0.005" /><testcase classname="tests.apply.test_frame_apply" name="test_apply_broadcast_lists_columns" time="0.003" /><testcase classname="tests.apply.test_frame_apply" name="test_apply_broadcast_lists_index" time="0.002" /><testcase classname="tests.apply.test_frame_apply" name="test_apply_broadcast_list_lambda_func" time="0.002" /><testcase classname="tests.apply.test_frame_apply" name="test_apply_broadcast_series_lambda_func" time="0.003" /><testcase classname="tests.apply.test_frame_apply" name="test_apply_raw_float_frame[python-0]" time="0.001" /><testcase classname="tests.apply.test_frame_apply" name="test_apply_raw_float_frame[python-1]" time="0.001" /><testcase classname="tests.apply.test_frame_apply" name="test_apply_raw_float_frame[numba-0]" time="0.002"><skipped type="pytest.skip" message="could not import 'numba': No module named 'numba'">C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\apply\test_frame_apply.py:266: could not import 'numba': No module named 'numba'</skipped></testcase><testcase classname="tests.apply.test_frame_apply" name="test_apply_raw_float_frame[numba-1]" time="0.002"><skipped type="pytest.skip" message="could not import 'numba': No module named 'numba'">C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\apply\test_frame_apply.py:266: could not import 'numba': No module named 'numba'</skipped></testcase><testcase classname="tests.apply.test_frame_apply" name="test_apply_raw_float_frame_lambda[python-0]" time="0.002" /><testcase classname="tests.apply.test_frame_apply" name="test_apply_raw_float_frame_lambda[python-1]" time="0.003" /><testcase classname="tests.apply.test_frame_apply" name="test_apply_raw_float_frame_lambda[numba-0]" time="0.002"><skipped type="pytest.skip" message="could not import 'numba': No module named 'numba'">C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\apply\test_frame_apply.py:278: could not import 'numba': No module named 'numba'</skipped></testcase><testcase classname="tests.apply.test_frame_apply" name="test_apply_raw_float_frame_lambda[numba-1]" time="0.002"><skipped type="pytest.skip" message="could not import 'numba': No module named 'numba'">C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\apply\test_frame_apply.py:278: could not import 'numba': No module named 'numba'</skipped></testcase><testcase classname="tests.apply.test_frame_apply" name="test_apply_raw_float_frame_no_reduction[python]" time="0.003" /><testcase classname="tests.apply.test_frame_apply" name="test_apply_raw_float_frame_no_reduction[numba]" time="0.003"><skipped type="pytest.skip" message="could not import 'numba': No module named 'numba'">C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\apply\test_frame_apply.py:285: could not import 'numba': No module named 'numba'</skipped></testcase><testcase classname="tests.apply.test_frame_apply" name="test_apply_raw_mixed_type_frame[python-0]" time="0.003" /><testcase classname="tests.apply.test_frame_apply" name="test_apply_raw_mixed_type_frame[python-1]" time="0.002" /><testcase classname="tests.apply.test_frame_apply" name="test_apply_raw_mixed_type_frame[numba-0]" time="0.002"><skipped type="pytest.skip" message="could not import 'numba': No module named 'numba'">C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\apply\test_frame_apply.py:292: could not import 'numba': No module named 'numba'</skipped></testcase><testcase classname="tests.apply.test_frame_apply" name="test_apply_raw_mixed_type_frame[numba-1]" time="0.002"><skipped type="pytest.skip" message="could not import 'numba': No module named 'numba'">C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\apply\test_frame_apply.py:292: could not import 'numba': No module named 'numba'</skipped></testcase><testcase classname="tests.apply.test_frame_apply" name="test_apply_axis1" time="0.003" /><testcase classname="tests.apply.test_frame_apply" name="test_apply_mixed_dtype_corner" time="0.002" /><testcase classname="tests.apply.test_frame_apply" name="test_apply_mixed_dtype_corner_indexing" time="0.002" /><testcase classname="tests.apply.test_frame_apply" name="test_apply_empty_infer_type[python-0-True-identity-index]" time="0.001" /><testcase classname="tests.apply.test_frame_apply" name="test_apply_empty_infer_type[python-0-True-identity-columns]" time="0.002" /><testcase classname="tests.apply.test_frame_apply" name="test_apply_empty_infer_type[python-0-True-mean-index]" time="0.002" /><testcase classname="tests.apply.test_frame_apply" name="test_apply_empty_infer_type[python-0-True-mean-columns]" time="0.002" /><testcase classname="tests.apply.test_frame_apply" name="test_apply_empty_infer_type[python-0-False-identity-index]" time="0.001" /><testcase classname="tests.apply.test_frame_apply" name="test_apply_empty_infer_type[python-0-False-identity-columns]" time="0.002" /><testcase classname="tests.apply.test_frame_apply" name="test_apply_empty_infer_type[python-0-False-mean-index]" time="0.002" /><testcase classname="tests.apply.test_frame_apply" name="test_apply_empty_infer_type[python-0-False-mean-columns]" time="0.002" /><testcase classname="tests.apply.test_frame_apply" name="test_apply_empty_infer_type[python-1-True-identity-index]" time="0.002" /><testcase classname="tests.apply.test_frame_apply" name="test_apply_empty_infer_type[python-1-True-identity-columns]" time="0.002" /><testcase classname="tests.apply.test_frame_apply" name="test_apply_empty_infer_type[python-1-True-mean-index]" time="0.002" /><testcase classname="tests.apply.test_frame_apply" name="test_apply_empty_infer_type[python-1-True-mean-columns]" time="0.003" /><testcase classname="tests.apply.test_frame_apply" name="test_apply_empty_infer_type[python-1-False-identity-index]" time="0.002" /><testcase classname="tests.apply.test_frame_apply" name="test_apply_empty_infer_type[python-1-False-identity-columns]" time="0.003" /><testcase classname="tests.apply.test_frame_apply" name="test_apply_empty_infer_type[python-1-False-mean-index]" time="0.002" /><testcase classname="tests.apply.test_frame_apply" name="test_apply_empty_infer_type[python-1-False-mean-columns]" time="0.003" /><testcase classname="tests.apply.test_frame_apply" name="test_apply_empty_infer_type[numba-0-True-identity-index]" time="0.002"><skipped type="pytest.skip" message="could not import 'numba': No module named 'numba'">C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\apply\test_frame_apply.py:342: could not import 'numba': No module named 'numba'</skipped></testcase><testcase classname="tests.apply.test_frame_apply" name="test_apply_empty_infer_type[numba-0-True-identity-columns]" time="0.002"><skipped type="pytest.skip" message="could not import 'numba': No module named 'numba'">C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\apply\test_frame_apply.py:342: could not import 'numba': No module named 'numba'</skipped></testcase><testcase classname="tests.apply.test_frame_apply" name="test_apply_empty_infer_type[numba-0-True-mean-index]" time="0.002"><skipped type="pytest.skip" message="could not import 'numba': No module named 'numba'">C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\apply\test_frame_apply.py:342: could not import 'numba': No module named 'numba'</skipped></testcase><testcase classname="tests.apply.test_frame_apply" name="test_apply_empty_infer_type[numba-0-True-mean-columns]" time="0.002"><skipped type="pytest.skip" message="could not import 'numba': No module named 'numba'">C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\apply\test_frame_apply.py:342: could not import 'numba': No module named 'numba'</skipped></testcase><testcase classname="tests.apply.test_frame_apply" name="test_apply_empty_infer_type[numba-0-False-identity-index]" time="0.002"><skipped type="pytest.skip" message="could not import 'numba': No module named 'numba'">C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\apply\test_frame_apply.py:342: could not import 'numba': No module named 'numba'</skipped></testcase><testcase classname="tests.apply.test_frame_apply" name="test_apply_empty_infer_type[numba-0-False-identity-columns]" time="0.002"><skipped type="pytest.skip" message="could not import 'numba': No module named 'numba'">C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\apply\test_frame_apply.py:342: could not import 'numba': No module named 'numba'</skipped></testcase><testcase classname="tests.apply.test_frame_apply" name="test_apply_empty_infer_type[numba-0-False-mean-index]" time="0.002"><skipped type="pytest.skip" message="could not import 'numba': No module named 'numba'">C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\apply\test_frame_apply.py:342: could not import 'numba': No module named 'numba'</skipped></testcase><testcase classname="tests.apply.test_frame_apply" name="test_apply_empty_infer_type[numba-0-False-mean-columns]" time="0.002"><skipped type="pytest.skip" message="could not import 'numba': No module named 'numba'">C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\apply\test_frame_apply.py:342: could not import 'numba': No module named 'numba'</skipped></testcase><testcase classname="tests.apply.test_frame_apply" name="test_apply_empty_infer_type[numba-1-True-identity-index]" time="0.002"><skipped type="pytest.skip" message="could not import 'numba': No module named 'numba'">C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\apply\test_frame_apply.py:342: could not import 'numba': No module named 'numba'</skipped></testcase><testcase classname="tests.apply.test_frame_apply" name="test_apply_empty_infer_type[numba-1-True-identity-columns]" time="0.002"><skipped type="pytest.skip" message="could not import 'numba': No module named 'numba'">C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\apply\test_frame_apply.py:342: could not import 'numba': No module named 'numba'</skipped></testcase><testcase classname="tests.apply.test_frame_apply" name="test_apply_empty_infer_type[numba-1-True-mean-index]" time="0.002"><skipped type="pytest.skip" message="could not import 'numba': No module named 'numba'">C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\apply\test_frame_apply.py:342: could not import 'numba': No module named 'numba'</skipped></testcase><testcase classname="tests.apply.test_frame_apply" name="test_apply_empty_infer_type[numba-1-True-mean-columns]" time="0.002"><skipped type="pytest.skip" message="could not import 'numba': No module named 'numba'">C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\apply\test_frame_apply.py:342: could not import 'numba': No module named 'numba'</skipped></testcase><testcase classname="tests.apply.test_frame_apply" name="test_apply_empty_infer_type[numba-1-False-identity-index]" time="0.002"><skipped type="pytest.skip" message="could not import 'numba': No module named 'numba'">C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\apply\test_frame_apply.py:342: could not import 'numba': No module named 'numba'</skipped></testcase><testcase classname="tests.apply.test_frame_apply" name="test_apply_empty_infer_type[numba-1-False-identity-columns]" time="0.002"><skipped type="pytest.skip" message="could not import 'numba': No module named 'numba'">C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\apply\test_frame_apply.py:342: could not import 'numba': No module named 'numba'</skipped></testcase><testcase classname="tests.apply.test_frame_apply" name="test_apply_empty_infer_type[numba-1-False-mean-index]" time="0.002"><skipped type="pytest.skip" message="could not import 'numba': No module named 'numba'">C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\apply\test_frame_apply.py:342: could not import 'numba': No module named 'numba'</skipped></testcase><testcase classname="tests.apply.test_frame_apply" name="test_apply_empty_infer_type[numba-1-False-mean-columns]" time="0.002"><skipped type="pytest.skip" message="could not import 'numba': No module named 'numba'">C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\apply\test_frame_apply.py:342: could not import 'numba': No module named 'numba'</skipped></testcase><testcase classname="tests.apply.test_frame_apply" name="test_apply_empty_infer_type_broadcast" time="0.002" /><testcase classname="tests.apply.test_frame_apply" name="test_apply_with_args_kwds_add_some" time="0.004" /><testcase classname="tests.apply.test_frame_apply" name="test_apply_with_args_kwds_agg_and_add" time="0.003" /><testcase classname="tests.apply.test_frame_apply" name="test_apply_with_args_kwds_subtract_and_divide" time="0.007" /><testcase classname="tests.apply.test_frame_apply" name="test_apply_yield_list" time="0.003" /><testcase classname="tests.apply.test_frame_apply" name="test_apply_reduce_Series" time="0.007" /><testcase classname="tests.apply.test_frame_apply" name="test_apply_reduce_to_dict" time="0.004" /><testcase classname="tests.apply.test_frame_apply" name="test_apply_differently_indexed" time="0.146" /><testcase classname="tests.apply.test_frame_apply" name="test_apply_bug" time="0.003" /><testcase classname="tests.apply.test_frame_apply" name="test_apply_convert_objects" time="0.003" /><testcase classname="tests.apply.test_frame_apply" name="test_apply_attach_name" time="0.003" /><testcase classname="tests.apply.test_frame_apply" name="test_apply_attach_name_axis1" time="0.002" /><testcase classname="tests.apply.test_frame_apply" name="test_apply_attach_name_non_reduction" time="0.002" /><testcase classname="tests.apply.test_frame_apply" name="test_apply_attach_name_non_reduction_axis1" time="0.003" /><testcase classname="tests.apply.test_frame_apply" name="test_apply_multi_index" time="0.007" /><testcase classname="tests.apply.test_frame_apply" name="test_apply_dict[df0-dicts0]" time="0.005" /><testcase classname="tests.apply.test_frame_apply" name="test_apply_dict[df1-dicts1]" time="0.004" /><testcase classname="tests.apply.test_frame_apply" name="test_apply_non_numpy_dtype" time="0.005" /><testcase classname="tests.apply.test_frame_apply" name="test_apply_non_numpy_dtype_category" time="0.002" /><testcase classname="tests.apply.test_frame_apply" name="test_apply_dup_names_multi_agg" time="0.004" /><testcase classname="tests.apply.test_frame_apply" name="test_apply_nested_result_axis_1[apply]" time="0.002" /><testcase classname="tests.apply.test_frame_apply" name="test_apply_nested_result_axis_1[agg]" time="0.002" /><testcase classname="tests.apply.test_frame_apply" name="test_apply_noreduction_tzaware_object" time="0.003" /><testcase classname="tests.apply.test_frame_apply" name="test_apply_function_runs_once" time="0.002" /><testcase classname="tests.apply.test_frame_apply" name="test_apply_raw_function_runs_once[python]" time="0.004" /><testcase classname="tests.apply.test_frame_apply" name="test_apply_raw_function_runs_once[numba]" time="0.002"><skipped type="pytest.skip" message="could not import 'numba': No module named 'numba'">C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\apply\test_frame_apply.py:656: could not import 'numba': No module named 'numba'</skipped></testcase><testcase classname="tests.apply.test_frame_apply" name="test_apply_with_byte_string" time="0.003" /><testcase classname="tests.apply.test_frame_apply" name="test_apply_category_equalness[asd]" time="0.009" /><testcase classname="tests.apply.test_frame_apply" name="test_apply_category_equalness[12]" time="0.003" /><testcase classname="tests.apply.test_frame_apply" name="test_apply_category_equalness[None]" time="0.003" /><testcase classname="tests.apply.test_frame_apply" name="test_apply_category_equalness[nan]" time="0.004" /><testcase classname="tests.apply.test_frame_apply" name="test_infer_row_shape" time="0.012" /><testcase classname="tests.apply.test_frame_apply" name="test_dictlike_lambda[ops0-compat-expected0]" time="0.003" /><testcase classname="tests.apply.test_frame_apply" name="test_dictlike_lambda[ops1-False-expected1]" time="0.004" /><testcase classname="tests.apply.test_frame_apply" name="test_dictlike_lambda[ops2-compat-expected2]" time="0.002" /><testcase classname="tests.apply.test_frame_apply" name="test_dictlike_lambda[ops3-False-expected3]" time="0.002" /><testcase classname="tests.apply.test_frame_apply" name="test_dictlike_lambda[ops4-compat-expected4]" time="0.004" /><testcase classname="tests.apply.test_frame_apply" name="test_dictlike_lambda[ops5-False-expected5]" time="0.006" /><testcase classname="tests.apply.test_frame_apply" name="test_dictlike_lambda[ops6-compat-expected6]" time="0.004" /><testcase classname="tests.apply.test_frame_apply" name="test_dictlike_lambda[ops7-False-expected7]" time="0.002" /><testcase classname="tests.apply.test_frame_apply" name="test_dictlike_lambda_raises[ops0]" time="0.001" /><testcase classname="tests.apply.test_frame_apply" name="test_dictlike_lambda_raises[ops1]" time="0.001" /><testcase classname="tests.apply.test_frame_apply" name="test_dictlike_lambda_raises[ops2]" time="0.001" /><testcase classname="tests.apply.test_frame_apply" name="test_dictlike_lambda_raises[ops3]" time="0.001" /><testcase classname="tests.apply.test_frame_apply" name="test_with_dictlike_columns" time="0.005" /><testcase classname="tests.apply.test_frame_apply" name="test_with_dictlike_columns_with_datetime" time="0.005" /><testcase classname="tests.apply.test_frame_apply" name="test_with_dictlike_columns_with_infer" time="0.006" /><testcase classname="tests.apply.test_frame_apply" name="test_listlike_lambda[ops0-compat-expected0]" time="0.003" /><testcase classname="tests.apply.test_frame_apply" name="test_listlike_lambda[ops1-False-expected1]" time="0.006" /><testcase classname="tests.apply.test_frame_apply" name="test_listlike_lambda[ops2-compat-expected2]" time="0.006" /><testcase classname="tests.apply.test_frame_apply" name="test_listlike_lambda[ops3-False-expected3]" time="0.006" /><testcase classname="tests.apply.test_frame_apply" name="test_listlike_lambda[ops4-compat-expected4]" time="0.004" /><testcase classname="tests.apply.test_frame_apply" name="test_listlike_lambda[ops5-False-expected5]" time="0.004" /><testcase classname="tests.apply.test_frame_apply" name="test_listlike_lambda[ops6-compat-expected6]" time="0.009" /><testcase classname="tests.apply.test_frame_apply" name="test_listlike_lambda[ops7-False-expected7]" time="0.005" /><testcase classname="tests.apply.test_frame_apply" name="test_listlike_lambda_raises[ops0]" time="0.001" /><testcase classname="tests.apply.test_frame_apply" name="test_listlike_lambda_raises[ops1]" time="0.003" /><testcase classname="tests.apply.test_frame_apply" name="test_listlike_lambda_raises[ops2]" time="0.001" /><testcase classname="tests.apply.test_frame_apply" name="test_listlike_lambda_raises[ops3]" time="0.001" /><testcase classname="tests.apply.test_frame_apply" name="test_with_listlike_columns" time="0.009" /><testcase classname="tests.apply.test_frame_apply" name="test_with_listlike_columns_returning_list" time="0.003" /><testcase classname="tests.apply.test_frame_apply" name="test_infer_output_shape_columns" time="0.005" /><testcase classname="tests.apply.test_frame_apply" name="test_infer_output_shape_listlike_columns" time="0.004" /><testcase classname="tests.apply.test_frame_apply" name="test_infer_output_shape_listlike_columns_np_func[1]" time="0.002" /><testcase classname="tests.apply.test_frame_apply" name="test_infer_output_shape_listlike_columns_np_func[2]" time="0.002" /><testcase classname="tests.apply.test_frame_apply" name="test_infer_output_shape_listlike_columns_with_timestamp" time="0.004" /><testcase classname="tests.apply.test_frame_apply" name="test_consistent_coerce_for_shapes[lst0]" time="0.002" /><testcase classname="tests.apply.test_frame_apply" name="test_consistent_coerce_for_shapes[lst1]" time="0.002" /><testcase classname="tests.apply.test_frame_apply" name="test_consistent_names" time="0.007" /><testcase classname="tests.apply.test_frame_apply" name="test_result_type" time="0.002" /><testcase classname="tests.apply.test_frame_apply" name="test_result_type_shorter_list" time="0.003" /><testcase classname="tests.apply.test_frame_apply" name="test_result_type_broadcast[python]" time="0.002" /><testcase classname="tests.apply.test_frame_apply" name="test_result_type_broadcast[numba]" time="0.003"><skipped type="pytest.skip" message="could not import 'numba': No module named 'numba'">C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\apply\test_frame_apply.py:1010: could not import 'numba': No module named 'numba'</skipped></testcase><testcase classname="tests.apply.test_frame_apply" name="test_result_type_broadcast_series_func[python]" time="0.004" /><testcase classname="tests.apply.test_frame_apply" name="test_result_type_broadcast_series_func[numba]" time="0.002"><skipped type="pytest.skip" message="could not import 'numba': No module named 'numba'">C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\apply\test_frame_apply.py:1025: could not import 'numba': No module named 'numba'</skipped></testcase><testcase classname="tests.apply.test_frame_apply" name="test_result_type_series_result[python]" time="0.003" /><testcase classname="tests.apply.test_frame_apply" name="test_result_type_series_result[numba]" time="0.002"><skipped type="pytest.skip" message="could not import 'numba': No module named 'numba'">C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\apply\test_frame_apply.py:1045: could not import 'numba': No module named 'numba'</skipped></testcase><testcase classname="tests.apply.test_frame_apply" name="test_result_type_series_result_other_index[python]" time="0.004" /><testcase classname="tests.apply.test_frame_apply" name="test_result_type_series_result_other_index[numba]" time="0.002"><skipped type="pytest.skip" message="could not import 'numba': No module named 'numba'">C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\apply\test_frame_apply.py:1060: could not import 'numba': No module named 'numba'</skipped></testcase><testcase classname="tests.apply.test_frame_apply" name="test_consistency_for_boxed[list]" time="0.005" /><testcase classname="tests.apply.test_frame_apply" name="test_consistency_for_boxed[tuple]" time="0.004" /><testcase classname="tests.apply.test_frame_apply" name="test_consistency_for_boxed[array]" time="0.005" /><testcase classname="tests.apply.test_frame_apply" name="test_agg_transform[axis=0]" time="0.016" /><testcase classname="tests.apply.test_frame_apply" name="test_agg_transform[axis=1]" time="0.066" /><testcase classname="tests.apply.test_frame_apply" name="test_agg_transform[axis='index']" time="0.016" /><testcase classname="tests.apply.test_frame_apply" name="test_agg_transform[axis='columns']" time="0.096" /><testcase classname="tests.apply.test_frame_apply" name="test_demo" time="0.010" /><testcase classname="tests.apply.test_frame_apply" name="test_demo_dict_agg" time="0.012" /><testcase classname="tests.apply.test_frame_apply" name="test_agg_with_name_as_column_name" time="0.007" /><testcase classname="tests.apply.test_frame_apply" name="test_agg_multiple_mixed" time="0.019" /><testcase classname="tests.apply.test_frame_apply" name="test_agg_multiple_mixed_raises" time="0.011" /><testcase classname="tests.apply.test_frame_apply" name="test_agg_reduce[axis=0]" time="0.020" /><testcase classname="tests.apply.test_frame_apply" name="test_agg_reduce[axis=1]" time="0.072" /><testcase classname="tests.apply.test_frame_apply" name="test_agg_reduce[axis='index']" time="0.034" /><testcase classname="tests.apply.test_frame_apply" name="test_agg_reduce[axis='columns']" time="0.054" /><testcase classname="tests.apply.test_frame_apply" name="test_nuiscance_columns" time="0.013" /><testcase classname="tests.apply.test_frame_apply" name="test_non_callable_aggregates[agg]" time="0.012" /><testcase classname="tests.apply.test_frame_apply" name="test_non_callable_aggregates[apply]" time="0.013" /><testcase classname="tests.apply.test_frame_apply" name="test_size_as_str[axis=0-agg]" time="0.001" /><testcase classname="tests.apply.test_frame_apply" name="test_size_as_str[axis=0-apply]" time="0.001" /><testcase classname="tests.apply.test_frame_apply" name="test_size_as_str[axis=1-agg]" time="0.002" /><testcase classname="tests.apply.test_frame_apply" name="test_size_as_str[axis=1-apply]" time="0.003" /><testcase classname="tests.apply.test_frame_apply" name="test_size_as_str[axis='index'-agg]" time="0.002" /><testcase classname="tests.apply.test_frame_apply" name="test_size_as_str[axis='index'-apply]" time="0.001" /><testcase classname="tests.apply.test_frame_apply" name="test_size_as_str[axis='columns'-agg]" time="0.002" /><testcase classname="tests.apply.test_frame_apply" name="test_size_as_str[axis='columns'-apply]" time="0.001" /><testcase classname="tests.apply.test_frame_apply" name="test_agg_listlike_result" time="0.008" /><testcase classname="tests.apply.test_frame_apply" name="test_agg_args_kwargs[args0-kwargs0-0]" time="0.002" /><testcase classname="tests.apply.test_frame_apply" name="test_agg_args_kwargs[args0-kwargs0-1]" time="0.003" /><testcase classname="tests.apply.test_frame_apply" name="test_agg_args_kwargs[args1-kwargs1-0]" time="0.002" /><testcase classname="tests.apply.test_frame_apply" name="test_agg_args_kwargs[args1-kwargs1-1]" time="0.002" /><testcase classname="tests.apply.test_frame_apply" name="test_agg_args_kwargs[args2-kwargs2-0]" time="0.002" /><testcase classname="tests.apply.test_frame_apply" name="test_agg_args_kwargs[args2-kwargs2-1]" time="0.002" /><testcase classname="tests.apply.test_frame_apply" name="test_agg_args_kwargs[args3-kwargs3-0]" time="0.002" /><testcase classname="tests.apply.test_frame_apply" name="test_agg_args_kwargs[args3-kwargs3-1]" time="0.002" /><testcase classname="tests.apply.test_frame_apply" name="test_agg_args_kwargs[args4-kwargs4-0]" time="0.002" /><testcase classname="tests.apply.test_frame_apply" name="test_agg_args_kwargs[args4-kwargs4-1]" time="0.002" /><testcase classname="tests.apply.test_frame_apply" name="test_agg_args_kwargs[args5-kwargs5-0]" time="0.002" /><testcase classname="tests.apply.test_frame_apply" name="test_agg_args_kwargs[args5-kwargs5-1]" time="0.002" /><testcase classname="tests.apply.test_frame_apply" name="test_agg_args_kwargs[args6-kwargs6-0]" time="0.002" /><testcase classname="tests.apply.test_frame_apply" name="test_agg_args_kwargs[args6-kwargs6-1]" time="0.002" /><testcase classname="tests.apply.test_frame_apply" name="test_frequency_is_original[python-2]" time="0.002" /><testcase classname="tests.apply.test_frame_apply" name="test_frequency_is_original[python-3]" time="0.002" /><testcase classname="tests.apply.test_frame_apply" name="test_frequency_is_original[python-5]" time="0.002" /><testcase classname="tests.apply.test_frame_apply" name="test_frequency_is_original[numba-2]" time="0.002"><skipped type="pytest.skip" message="could not import 'numba': No module named 'numba'">C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\apply\test_frame_apply.py:1431: could not import 'numba': No module named 'numba'</skipped></testcase><testcase classname="tests.apply.test_frame_apply" name="test_frequency_is_original[numba-3]" time="0.002"><skipped type="pytest.skip" message="could not import 'numba': No module named 'numba'">C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\apply\test_frame_apply.py:1431: could not import 'numba': No module named 'numba'</skipped></testcase><testcase classname="tests.apply.test_frame_apply" name="test_frequency_is_original[numba-5]" time="0.002"><skipped type="pytest.skip" message="could not import 'numba': No module named 'numba'">C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\apply\test_frame_apply.py:1431: could not import 'numba': No module named 'numba'</skipped></testcase><testcase classname="tests.apply.test_frame_apply" name="test_apply_datetime_tz_issue[python]" time="0.002" /><testcase classname="tests.apply.test_frame_apply" name="test_apply_datetime_tz_issue[numba]" time="0.002"><skipped type="pytest.skip" message="could not import 'numba': No module named 'numba'">C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\apply\test_frame_apply.py:1444: could not import 'numba': No module named 'numba'</skipped></testcase><testcase classname="tests.apply.test_frame_apply" name="test_mixed_column_raises[min-df0]" time="0.001" /><testcase classname="tests.apply.test_frame_apply" name="test_mixed_column_raises[max-df0]" time="0.001" /><testcase classname="tests.apply.test_frame_apply" name="test_mixed_column_raises[sum-df0]" time="0.001" /><testcase classname="tests.apply.test_frame_apply" name="test_apply_dtype[1]" time="0.002" /><testcase classname="tests.apply.test_frame_apply" name="test_apply_dtype[1.0]" time="0.002" /><testcase classname="tests.apply.test_frame_apply" name="test_apply_dtype[True]" time="0.002" /><testcase classname="tests.apply.test_frame_apply" name="test_apply_dtype[a]" time="0.002" /><testcase classname="tests.apply.test_frame_apply" name="test_apply_dtype[nan]" time="0.001" /><testcase classname="tests.apply.test_frame_apply" name="test_apply_mutating" time="0.013" /><testcase classname="tests.apply.test_frame_apply" name="test_apply_empty_list_reduce" time="0.002" /><testcase classname="tests.apply.test_frame_apply" name="test_apply_no_suffix_index[python]" time="0.003" /><testcase classname="tests.apply.test_frame_apply" name="test_apply_no_suffix_index[numba]" time="0.001"><skipped type="pytest.skip" message="could not import 'numba': No module named 'numba'">C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\apply\test_frame_apply.py:1526: could not import 'numba': No module named 'numba'</skipped></testcase><testcase classname="tests.apply.test_frame_apply" name="test_apply_raw_returns_string[python]" time="0.002" /><testcase classname="tests.apply.test_frame_apply" name="test_apply_raw_returns_string[numba]" time="0.002"><skipped type="pytest.skip" message="could not import 'numba': No module named 'numba'">C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\apply\test_frame_apply.py:1542: could not import 'numba': No module named 'numba'</skipped></testcase><testcase classname="tests.apply.test_frame_apply" name="test_aggregation_func_column_order" time="0.005" /><testcase classname="tests.apply.test_frame_apply" name="test_apply_getitem_axis_1[python]" time="0.002" /><testcase classname="tests.apply.test_frame_apply" name="test_apply_getitem_axis_1[numba]" time="0.002"><skipped type="pytest.skip" message="could not import 'numba': No module named 'numba'">C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\apply\test_frame_apply.py:1583: could not import 'numba': No module named 'numba'</skipped></testcase><testcase classname="tests.apply.test_frame_apply" name="test_nuisance_depr_passes_through_warnings" time="0.002" /><testcase classname="tests.apply.test_frame_apply" name="test_apply_type" time="0.002" /><testcase classname="tests.apply.test_frame_apply" name="test_apply_on_empty_dataframe[python]" time="0.001" /><testcase classname="tests.apply.test_frame_apply" name="test_apply_on_empty_dataframe[numba]" time="0.002"><skipped type="pytest.skip" message="could not import 'numba': No module named 'numba'">C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\apply\test_frame_apply.py:1633: could not import 'numba': No module named 'numba'</skipped></testcase><testcase classname="tests.apply.test_frame_apply" name="test_apply_return_list" time="0.002" /><testcase classname="tests.apply.test_frame_apply" name="test_unique_agg_type_is_series[test0-constant0]" time="0.002" /><testcase classname="tests.apply.test_frame_apply" name="test_unique_agg_type_is_series[test1-constant1]" time="0.003" /><testcase classname="tests.apply.test_frame_apply" name="test_any_apply_keyword_non_zero_axis_regression" time="0.003" /><testcase classname="tests.apply.test_frame_apply" name="test_agg_mapping_func_deprecated" time="0.006" /><testcase classname="tests.apply.test_frame_apply" name="test_agg_std" time="0.004" /><testcase classname="tests.apply.test_frame_apply" name="test_agg_dist_like_and_nonunique_columns" time="0.004" /><testcase classname="tests.apply.test_frame_apply_relabeling" name="test_agg_relabel" time="0.015" /><testcase classname="tests.apply.test_frame_apply_relabeling" name="test_agg_relabel_multi_columns_multi_methods" time="0.010" /><testcase classname="tests.apply.test_frame_apply_relabeling" name="test_agg_relabel_partial_functions" time="0.013"><skipped type="pytest.xfail" message="name of min now equals name of np.min" /></testcase><testcase classname="tests.apply.test_frame_apply_relabeling" name="test_agg_namedtuple" time="0.013" /><testcase classname="tests.apply.test_frame_apply_relabeling" name="test_reconstruct_func" time="0.001" /><testcase classname="tests.apply.test_frame_transform" name="test_transform_ufunc[axis=0-DataFrame]" time="0.002" /><testcase classname="tests.apply.test_frame_transform" name="test_transform_ufunc[axis=0-Series]" time="0.002" /><testcase classname="tests.apply.test_frame_transform" name="test_transform_ufunc[axis=1-DataFrame]" time="0.002" /><testcase classname="tests.apply.test_frame_transform" name="test_transform_ufunc[axis=1-Series]" time="0.001"><skipped type="pytest.skip" message="Test is only for DataFrame with axis=1">C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\apply\test_frame_transform.py:22: Test is only for DataFrame with axis=1</skipped></testcase><testcase classname="tests.apply.test_frame_transform" name="test_transform_ufunc[axis='index'-DataFrame]" time="0.002" /><testcase classname="tests.apply.test_frame_transform" name="test_transform_ufunc[axis='index'-Series]" time="0.001"><skipped type="pytest.skip" message="Test is only for DataFrame with axis=index">C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\apply\test_frame_transform.py:22: Test is only for DataFrame with axis=index</skipped></testcase><testcase classname="tests.apply.test_frame_transform" name="test_transform_ufunc[axis='columns'-DataFrame]" time="0.003" /><testcase classname="tests.apply.test_frame_transform" name="test_transform_ufunc[axis='columns'-Series]" time="0.001"><skipped type="pytest.skip" message="Test is only for DataFrame with axis=columns">C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\apply\test_frame_transform.py:22: Test is only for DataFrame with axis=columns</skipped></testcase><testcase classname="tests.apply.test_frame_transform" name="test_transform_listlike[axis=0-ops0-names0]" time="0.008" /><testcase classname="tests.apply.test_frame_transform" name="test_transform_listlike[axis=0-ops1-names1]" time="0.008" /><testcase classname="tests.apply.test_frame_transform" name="test_transform_listlike[axis=0-ops2-names2]" time="0.006" /><testcase classname="tests.apply.test_frame_transform" name="test_transform_listlike[axis=0-ops3-names3]" time="0.009" /><testcase classname="tests.apply.test_frame_transform" name="test_transform_listlike[axis=1-ops0-names0]" time="0.027" /><testcase classname="tests.apply.test_frame_transform" name="test_transform_listlike[axis=1-ops1-names1]" time="0.043" /><testcase classname="tests.apply.test_frame_transform" name="test_transform_listlike[axis=1-ops2-names2]" time="0.047" /><testcase classname="tests.apply.test_frame_transform" name="test_transform_listlike[axis=1-ops3-names3]" time="0.038" /><testcase classname="tests.apply.test_frame_transform" name="test_transform_listlike[axis='index'-ops0-names0]" time="0.008" /><testcase classname="tests.apply.test_frame_transform" name="test_transform_listlike[axis='index'-ops1-names1]" time="0.009" /><testcase classname="tests.apply.test_frame_transform" name="test_transform_listlike[axis='index'-ops2-names2]" time="0.008" /><testcase classname="tests.apply.test_frame_transform" name="test_transform_listlike[axis='index'-ops3-names3]" time="0.009" /><testcase classname="tests.apply.test_frame_transform" name="test_transform_listlike[axis='columns'-ops0-names0]" time="0.026" /><testcase classname="tests.apply.test_frame_transform" name="test_transform_listlike[axis='columns'-ops1-names1]" time="0.038" /><testcase classname="tests.apply.test_frame_transform" name="test_transform_listlike[axis='columns'-ops2-names2]" time="0.023" /><testcase classname="tests.apply.test_frame_transform" name="test_transform_listlike[axis='columns'-ops3-names3]" time="0.028" /><testcase classname="tests.apply.test_frame_transform" name="test_transform_empty_listlike[DataFrame-ops0]" time="0.002" /><testcase classname="tests.apply.test_frame_transform" name="test_transform_empty_listlike[DataFrame-ops1]" time="0.001" /><testcase classname="tests.apply.test_frame_transform" name="test_transform_empty_listlike[Series-ops0]" time="0.001" /><testcase classname="tests.apply.test_frame_transform" name="test_transform_empty_listlike[Series-ops1]" time="0.001" /><testcase classname="tests.apply.test_frame_transform" name="test_transform_listlike_func_with_args" time="0.004" /><testcase classname="tests.apply.test_frame_transform" name="test_transform_dictlike[axis=0-dict]" time="0.003" /><testcase classname="tests.apply.test_frame_transform" name="test_transform_dictlike[axis=0-Series]" time="0.003" /><testcase classname="tests.apply.test_frame_transform" name="test_transform_dictlike[axis=1-dict]" time="0.003" /><testcase classname="tests.apply.test_frame_transform" name="test_transform_dictlike[axis=1-Series]" time="0.003" /><testcase classname="tests.apply.test_frame_transform" name="test_transform_dictlike[axis='index'-dict]" time="0.003" /><testcase classname="tests.apply.test_frame_transform" name="test_transform_dictlike[axis='index'-Series]" time="0.003" /><testcase classname="tests.apply.test_frame_transform" name="test_transform_dictlike[axis='columns'-dict]" time="0.003" /><testcase classname="tests.apply.test_frame_transform" name="test_transform_dictlike[axis='columns'-Series]" time="0.003" /><testcase classname="tests.apply.test_frame_transform" name="test_transform_dictlike_mixed" time="0.005" /><testcase classname="tests.apply.test_frame_transform" name="test_transform_empty_dictlike[DataFrame-ops0]" time="0.001" /><testcase classname="tests.apply.test_frame_transform" name="test_transform_empty_dictlike[DataFrame-ops1]" time="0.002" /><testcase classname="tests.apply.test_frame_transform" name="test_transform_empty_dictlike[DataFrame-ops2]" time="0.002" /><testcase classname="tests.apply.test_frame_transform" name="test_transform_empty_dictlike[DataFrame-ops3]" time="0.002" /><testcase classname="tests.apply.test_frame_transform" name="test_transform_empty_dictlike[DataFrame-ops4]" time="0.002" /><testcase classname="tests.apply.test_frame_transform" name="test_transform_empty_dictlike[DataFrame-ops5]" time="0.002" /><testcase classname="tests.apply.test_frame_transform" name="test_transform_empty_dictlike[Series-ops0]" time="0.001" /><testcase classname="tests.apply.test_frame_transform" name="test_transform_empty_dictlike[Series-ops1]" time="0.001" /><testcase classname="tests.apply.test_frame_transform" name="test_transform_empty_dictlike[Series-ops2]" time="0.001" /><testcase classname="tests.apply.test_frame_transform" name="test_transform_empty_dictlike[Series-ops3]" time="0.002" /><testcase classname="tests.apply.test_frame_transform" name="test_transform_empty_dictlike[Series-ops4]" time="0.001" /><testcase classname="tests.apply.test_frame_transform" name="test_transform_empty_dictlike[Series-ops5]" time="0.002" /><testcase classname="tests.apply.test_frame_transform" name="test_transform_udf[axis=0-DataFrame-True]" time="0.003" /><testcase classname="tests.apply.test_frame_transform" name="test_transform_udf[axis=0-DataFrame-False]" time="0.002" /><testcase classname="tests.apply.test_frame_transform" name="test_transform_udf[axis=0-Series-True]" time="0.002" /><testcase classname="tests.apply.test_frame_transform" name="test_transform_udf[axis=0-Series-False]" time="0.002" /><testcase classname="tests.apply.test_frame_transform" name="test_transform_udf[axis=1-DataFrame-True]" time="0.006" /><testcase classname="tests.apply.test_frame_transform" name="test_transform_udf[axis=1-DataFrame-False]" time="0.003" /><testcase classname="tests.apply.test_frame_transform" name="test_transform_udf[axis=1-Series-True]" time="0.001"><skipped type="pytest.skip" message="Test is only for DataFrame with axis=1">C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\apply\test_frame_transform.py:22: Test is only for DataFrame with axis=1</skipped></testcase><testcase classname="tests.apply.test_frame_transform" name="test_transform_udf[axis=1-Series-False]" time="0.001"><skipped type="pytest.skip" message="Test is only for DataFrame with axis=1">C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\apply\test_frame_transform.py:22: Test is only for DataFrame with axis=1</skipped></testcase><testcase classname="tests.apply.test_frame_transform" name="test_transform_udf[axis='index'-DataFrame-True]" time="0.002" /><testcase classname="tests.apply.test_frame_transform" name="test_transform_udf[axis='index'-DataFrame-False]" time="0.002" /><testcase classname="tests.apply.test_frame_transform" name="test_transform_udf[axis='index'-Series-True]" time="0.001"><skipped type="pytest.skip" message="Test is only for DataFrame with axis=index">C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\apply\test_frame_transform.py:22: Test is only for DataFrame with axis=index</skipped></testcase><testcase classname="tests.apply.test_frame_transform" name="test_transform_udf[axis='index'-Series-False]" time="0.001"><skipped type="pytest.skip" message="Test is only for DataFrame with axis=index">C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\apply\test_frame_transform.py:22: Test is only for DataFrame with axis=index</skipped></testcase><testcase classname="tests.apply.test_frame_transform" name="test_transform_udf[axis='columns'-DataFrame-True]" time="0.006" /><testcase classname="tests.apply.test_frame_transform" name="test_transform_udf[axis='columns'-DataFrame-False]" time="0.002" /><testcase classname="tests.apply.test_frame_transform" name="test_transform_udf[axis='columns'-Series-True]" time="0.001"><skipped type="pytest.skip" message="Test is only for DataFrame with axis=columns">C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\apply\test_frame_transform.py:22: Test is only for DataFrame with axis=columns</skipped></testcase><testcase classname="tests.apply.test_frame_transform" name="test_transform_udf[axis='columns'-Series-False]" time="0.001"><skipped type="pytest.skip" message="Test is only for DataFrame with axis=columns">C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\apply\test_frame_transform.py:22: Test is only for DataFrame with axis=columns</skipped></testcase><testcase classname="tests.apply.test_frame_transform" name="test_transform_bad_dtype[DataFrame-cummax]" time="0.002" /><testcase classname="tests.apply.test_frame_transform" name="test_transform_bad_dtype[DataFrame-cummin]" time="0.002" /><testcase classname="tests.apply.test_frame_transform" name="test_transform_bad_dtype[DataFrame-cumprod]" time="0.002" /><testcase classname="tests.apply.test_frame_transform" name="test_transform_bad_dtype[DataFrame-cumsum]" time="0.002" /><testcase classname="tests.apply.test_frame_transform" name="test_transform_bad_dtype[DataFrame-diff]" time="0.002" /><testcase classname="tests.apply.test_frame_transform" name="test_transform_bad_dtype[DataFrame-ngroup]" time="0.001"><skipped type="pytest.xfail" message="ngroup not valid for NDFrame" /></testcase><testcase classname="tests.apply.test_frame_transform" name="test_transform_bad_dtype[DataFrame-pct_change]" time="0.007" /><testcase classname="tests.apply.test_frame_transform" name="test_transform_bad_dtype[DataFrame-rank]" time="0.005" /><testcase classname="tests.apply.test_frame_transform" name="test_transform_bad_dtype[DataFrame-&lt;lambda&gt;]" time="0.004" /><testcase classname="tests.apply.test_frame_transform" name="test_transform_bad_dtype[Series-cummax]" time="0.002" /><testcase classname="tests.apply.test_frame_transform" name="test_transform_bad_dtype[Series-cummin]" time="0.002" /><testcase classname="tests.apply.test_frame_transform" name="test_transform_bad_dtype[Series-cumprod]" time="0.002" /><testcase classname="tests.apply.test_frame_transform" name="test_transform_bad_dtype[Series-cumsum]" time="0.002" /><testcase classname="tests.apply.test_frame_transform" name="test_transform_bad_dtype[Series-diff]" time="0.002" /><testcase classname="tests.apply.test_frame_transform" name="test_transform_bad_dtype[Series-ngroup]" time="0.002"><skipped type="pytest.xfail" message="ngroup not valid for NDFrame" /></testcase><testcase classname="tests.apply.test_frame_transform" name="test_transform_bad_dtype[Series-pct_change]" time="0.006" /><testcase classname="tests.apply.test_frame_transform" name="test_transform_bad_dtype[Series-rank]" time="0.003" /><testcase classname="tests.apply.test_frame_transform" name="test_transform_bad_dtype[Series-&lt;lambda&gt;]" time="0.003" /><testcase classname="tests.apply.test_frame_transform" name="test_transform_failure_typeerror[cummax]" time="0.004" /><testcase classname="tests.apply.test_frame_transform" name="test_transform_failure_typeerror[cummin]" time="0.005" /><testcase classname="tests.apply.test_frame_transform" name="test_transform_failure_typeerror[cumprod]" time="0.006" /><testcase classname="tests.apply.test_frame_transform" name="test_transform_failure_typeerror[cumsum]" time="0.005" /><testcase classname="tests.apply.test_frame_transform" name="test_transform_failure_typeerror[diff]" time="0.006" /><testcase classname="tests.apply.test_frame_transform" name="test_transform_failure_typeerror[ngroup]" time="0.004"><skipped type="pytest.xfail" message="ngroup not valid for NDFrame" /></testcase><testcase classname="tests.apply.test_frame_transform" name="test_transform_failure_typeerror[pct_change]" time="0.006" /><testcase classname="tests.apply.test_frame_transform" name="test_transform_failure_typeerror[rank]" time="0.003" /><testcase classname="tests.apply.test_frame_transform" name="test_transform_failure_valueerror" time="0.005" /><testcase classname="tests.apply.test_frame_transform" name="test_transform_passes_args[DataFrame-True]" time="0.002" /><testcase classname="tests.apply.test_frame_transform" name="test_transform_passes_args[DataFrame-False]" time="0.002" /><testcase classname="tests.apply.test_frame_transform" name="test_transform_passes_args[Series-True]" time="0.002" /><testcase classname="tests.apply.test_frame_transform" name="test_transform_passes_args[Series-False]" time="0.002" /><testcase classname="tests.apply.test_frame_transform" name="test_transform_empty_dataframe" time="0.005" /><testcase classname="tests.apply.test_invalid_arg" name="test_result_type_error[foo]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_result_type_error[1]" time="0.003" /><testcase classname="tests.apply.test_invalid_arg" name="test_apply_invalid_axis_value" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_agg_raises" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_map_with_invalid_na_action_raises" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_map_arg_is_dict_with_invalid_na_action_raises[____]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_map_arg_is_dict_with_invalid_na_action_raises[True]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_nested_renamer[DataFrame-func0-apply]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_nested_renamer[DataFrame-func0-agg]" time="0.001" /><testcase classname="tests.apply.test_invalid_arg" name="test_nested_renamer[DataFrame-func0-transform]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_nested_renamer[DataFrame-func1-apply]" time="0.001" /><testcase classname="tests.apply.test_invalid_arg" name="test_nested_renamer[DataFrame-func1-agg]" time="0.001" /><testcase classname="tests.apply.test_invalid_arg" name="test_nested_renamer[DataFrame-func1-transform]" time="0.001" /><testcase classname="tests.apply.test_invalid_arg" name="test_nested_renamer[Series-func0-apply]" time="0.001" /><testcase classname="tests.apply.test_invalid_arg" name="test_nested_renamer[Series-func0-agg]" time="0.001" /><testcase classname="tests.apply.test_invalid_arg" name="test_nested_renamer[Series-func0-transform]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_nested_renamer[Series-func1-apply]" time="0.001" /><testcase classname="tests.apply.test_invalid_arg" name="test_nested_renamer[Series-func1-agg]" time="0.001" /><testcase classname="tests.apply.test_invalid_arg" name="test_nested_renamer[Series-func1-transform]" time="0.001" /><testcase classname="tests.apply.test_invalid_arg" name="test_series_nested_renamer[renamer0]" time="0.001" /><testcase classname="tests.apply.test_invalid_arg" name="test_series_nested_renamer[renamer1]" time="0.001" /><testcase classname="tests.apply.test_invalid_arg" name="test_apply_dict_depr" time="0.003" /><testcase classname="tests.apply.test_invalid_arg" name="test_dict_nested_renaming_depr[agg]" time="0.001" /><testcase classname="tests.apply.test_invalid_arg" name="test_dict_nested_renaming_depr[transform]" time="0.001" /><testcase classname="tests.apply.test_invalid_arg" name="test_missing_column[func0-apply]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_missing_column[func0-agg]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_missing_column[func0-transform]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_missing_column[func1-apply]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_missing_column[func1-agg]" time="0.001" /><testcase classname="tests.apply.test_invalid_arg" name="test_missing_column[func1-transform]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_mixed_column_name_dtypes" time="0.001" /><testcase classname="tests.apply.test_invalid_arg" name="test_apply_str_axis_1_raises[pct_change-args0]" time="0.001" /><testcase classname="tests.apply.test_invalid_arg" name="test_apply_str_axis_1_raises[nsmallest-args1]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_apply_str_axis_1_raises[tail-1]" time="0.003" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_axis_1_raises" time="0.001" /><testcase classname="tests.apply.test_invalid_arg" name="test_apply_modify_traceback" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_agg_cython_table_raises_frame[axis=0-df0-cumprod-TypeError]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_agg_cython_table_raises_frame[axis=0-df1-cumprod-TypeError]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_agg_cython_table_raises_frame[axis=0-df2-nancumprod-TypeError]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_agg_cython_table_raises_frame[axis=1-df0-cumprod-TypeError]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_agg_cython_table_raises_frame[axis=1-df1-cumprod-TypeError]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_agg_cython_table_raises_frame[axis=1-df2-nancumprod-TypeError]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_agg_cython_table_raises_frame[axis='index'-df0-cumprod-TypeError]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_agg_cython_table_raises_frame[axis='index'-df1-cumprod-TypeError]" time="0.001" /><testcase classname="tests.apply.test_invalid_arg" name="test_agg_cython_table_raises_frame[axis='index'-df2-nancumprod-TypeError]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_agg_cython_table_raises_frame[axis='columns'-df0-cumprod-TypeError]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_agg_cython_table_raises_frame[axis='columns'-df1-cumprod-TypeError]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_agg_cython_table_raises_frame[axis='columns'-df2-nancumprod-TypeError]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_agg_cython_table_raises_series[series0-mean-TypeError]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_agg_cython_table_raises_series[series1-mean-TypeError]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_agg_cython_table_raises_series[series2-nanmean-TypeError]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_agg_cython_table_raises_series[series3-prod-TypeError]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_agg_cython_table_raises_series[series4-prod-TypeError]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_agg_cython_table_raises_series[series5-nanprod-TypeError]" time="0.004" /><testcase classname="tests.apply.test_invalid_arg" name="test_agg_cython_table_raises_series[series6-std-TypeError]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_agg_cython_table_raises_series[series7-std-TypeError]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_agg_cython_table_raises_series[series8-nanstd-TypeError]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_agg_cython_table_raises_series[series9-var-TypeError]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_agg_cython_table_raises_series[series10-var-TypeError]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_agg_cython_table_raises_series[series11-nanvar-TypeError]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_agg_cython_table_raises_series[series12-median-TypeError]" time="0.004" /><testcase classname="tests.apply.test_invalid_arg" name="test_agg_cython_table_raises_series[series13-median-TypeError]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_agg_cython_table_raises_series[series14-nanmedian-TypeError]" time="0.003" /><testcase classname="tests.apply.test_invalid_arg" name="test_agg_cython_table_raises_series[series15-cumprod-TypeError]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_agg_cython_table_raises_series[series16-cumprod-TypeError]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_agg_cython_table_raises_series[series17-nancumprod-TypeError]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_agg_none_to_type" time="0.003" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_none_to_type" time="0.003" /><testcase classname="tests.apply.test_invalid_arg" name="test_apply_broadcast_error[&lt;lambda&gt;0]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_apply_broadcast_error[&lt;lambda&gt;1]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_apply_broadcast_error[&lt;lambda&gt;2]" time="0.003" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_and_agg_err_agg[axis=0]" time="0.005" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_and_agg_err_agg[axis=1]" time="0.004" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_and_agg_err_agg[axis='index']" time="0.005" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_and_agg_err_agg[axis='columns']" time="0.005" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_and_agg_err_series[func0-cannot combine transform and aggregation]" time="0.005" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_and_agg_err_series[func1-cannot perform both aggregation and transformation]" time="0.003" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_wont_agg_frame[axis=0-func0]" time="0.004" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_wont_agg_frame[axis=0-func1]" time="0.003" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_wont_agg_frame[axis=1-func0]" time="0.003" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_wont_agg_frame[axis=1-func1]" time="0.005" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_wont_agg_frame[axis='index'-func0]" time="0.003" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_wont_agg_frame[axis='index'-func1]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_wont_agg_frame[axis='columns'-func0]" time="0.003" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_wont_agg_frame[axis='columns'-func1]" time="0.003" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_wont_agg_series[func0]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_wont_agg_series[func1]" time="0.001" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[count-DataFrame-&lt;lambda&gt;0]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[count-DataFrame-&lt;lambda&gt;1]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[count-DataFrame-&lt;lambda&gt;2]" time="0.004" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[count-DataFrame-&lt;lambda&gt;3]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[count-Series-&lt;lambda&gt;0]" time="0.001" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[count-Series-&lt;lambda&gt;1]" time="0.001" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[count-Series-&lt;lambda&gt;2]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[count-Series-&lt;lambda&gt;3]" time="0.001" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[sum-DataFrame-&lt;lambda&gt;0]" time="0.001" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[sum-DataFrame-&lt;lambda&gt;1]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[sum-DataFrame-&lt;lambda&gt;2]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[sum-DataFrame-&lt;lambda&gt;3]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[sum-Series-&lt;lambda&gt;0]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[sum-Series-&lt;lambda&gt;1]" time="0.001" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[sum-Series-&lt;lambda&gt;2]" time="0.001" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[sum-Series-&lt;lambda&gt;3]" time="0.001" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[max-DataFrame-&lt;lambda&gt;0]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[max-DataFrame-&lt;lambda&gt;1]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[max-DataFrame-&lt;lambda&gt;2]" time="0.003" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[max-DataFrame-&lt;lambda&gt;3]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[max-Series-&lt;lambda&gt;0]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[max-Series-&lt;lambda&gt;1]" time="0.001" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[max-Series-&lt;lambda&gt;2]" time="0.001" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[max-Series-&lt;lambda&gt;3]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[min-DataFrame-&lt;lambda&gt;0]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[min-DataFrame-&lt;lambda&gt;1]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[min-DataFrame-&lt;lambda&gt;2]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[min-DataFrame-&lt;lambda&gt;3]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[min-Series-&lt;lambda&gt;0]" time="0.001" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[min-Series-&lt;lambda&gt;1]" time="0.001" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[min-Series-&lt;lambda&gt;2]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[min-Series-&lt;lambda&gt;3]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[mean-DataFrame-&lt;lambda&gt;0]" time="0.001" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[mean-DataFrame-&lt;lambda&gt;1]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[mean-DataFrame-&lt;lambda&gt;2]" time="0.001" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[mean-DataFrame-&lt;lambda&gt;3]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[mean-Series-&lt;lambda&gt;0]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[mean-Series-&lt;lambda&gt;1]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[mean-Series-&lt;lambda&gt;2]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[mean-Series-&lt;lambda&gt;3]" time="0.001" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[prod-DataFrame-&lt;lambda&gt;0]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[prod-DataFrame-&lt;lambda&gt;1]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[prod-DataFrame-&lt;lambda&gt;2]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[prod-DataFrame-&lt;lambda&gt;3]" time="0.001" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[prod-Series-&lt;lambda&gt;0]" time="0.001" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[prod-Series-&lt;lambda&gt;1]" time="0.001" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[prod-Series-&lt;lambda&gt;2]" time="0.001" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[prod-Series-&lt;lambda&gt;3]" time="0.001" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[std-DataFrame-&lt;lambda&gt;0]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[std-DataFrame-&lt;lambda&gt;1]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[std-DataFrame-&lt;lambda&gt;2]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[std-DataFrame-&lt;lambda&gt;3]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[std-Series-&lt;lambda&gt;0]" time="0.001" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[std-Series-&lt;lambda&gt;1]" time="0.001" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[std-Series-&lt;lambda&gt;2]" time="0.001" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[std-Series-&lt;lambda&gt;3]" time="0.001" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[var-DataFrame-&lt;lambda&gt;0]" time="0.001" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[var-DataFrame-&lt;lambda&gt;1]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[var-DataFrame-&lt;lambda&gt;2]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[var-DataFrame-&lt;lambda&gt;3]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[var-Series-&lt;lambda&gt;0]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[var-Series-&lt;lambda&gt;1]" time="0.001" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[var-Series-&lt;lambda&gt;2]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[var-Series-&lt;lambda&gt;3]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[median-DataFrame-&lt;lambda&gt;0]" time="0.003" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[median-DataFrame-&lt;lambda&gt;1]" time="0.003" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[median-DataFrame-&lt;lambda&gt;2]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[median-DataFrame-&lt;lambda&gt;3]" time="0.004" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[median-Series-&lt;lambda&gt;0]" time="0.003" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[median-Series-&lt;lambda&gt;1]" time="0.003" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[median-Series-&lt;lambda&gt;2]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[median-Series-&lt;lambda&gt;3]" time="0.004" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[kurt-DataFrame-&lt;lambda&gt;0]" time="0.009" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[kurt-DataFrame-&lt;lambda&gt;1]" time="0.004" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[kurt-DataFrame-&lt;lambda&gt;2]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[kurt-DataFrame-&lt;lambda&gt;3]" time="0.003" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[kurt-Series-&lt;lambda&gt;0]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[kurt-Series-&lt;lambda&gt;1]" time="0.003" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[kurt-Series-&lt;lambda&gt;2]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[kurt-Series-&lt;lambda&gt;3]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[skew-DataFrame-&lt;lambda&gt;0]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[skew-DataFrame-&lt;lambda&gt;1]" time="0.003" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[skew-DataFrame-&lt;lambda&gt;2]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[skew-DataFrame-&lt;lambda&gt;3]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[skew-Series-&lt;lambda&gt;0]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[skew-Series-&lt;lambda&gt;1]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[skew-Series-&lt;lambda&gt;2]" time="0.003" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[skew-Series-&lt;lambda&gt;3]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[sem-DataFrame-&lt;lambda&gt;0]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[sem-DataFrame-&lt;lambda&gt;1]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[sem-DataFrame-&lt;lambda&gt;2]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[sem-DataFrame-&lt;lambda&gt;3]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[sem-Series-&lt;lambda&gt;0]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[sem-Series-&lt;lambda&gt;1]" time="0.001" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[sem-Series-&lt;lambda&gt;2]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[sem-Series-&lt;lambda&gt;3]" time="0.001" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[all-DataFrame-&lt;lambda&gt;0]" time="0.001" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[all-DataFrame-&lt;lambda&gt;1]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[all-DataFrame-&lt;lambda&gt;2]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[all-DataFrame-&lt;lambda&gt;3]" time="0.001" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[all-Series-&lt;lambda&gt;0]" time="0.001" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[all-Series-&lt;lambda&gt;1]" time="0.001" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[all-Series-&lt;lambda&gt;2]" time="0.001" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[all-Series-&lt;lambda&gt;3]" time="0.001" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[any-DataFrame-&lt;lambda&gt;0]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[any-DataFrame-&lt;lambda&gt;1]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[any-DataFrame-&lt;lambda&gt;2]" time="0.001" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[any-DataFrame-&lt;lambda&gt;3]" time="0.002" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[any-Series-&lt;lambda&gt;0]" time="0.001" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[any-Series-&lt;lambda&gt;1]" time="0.001" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[any-Series-&lt;lambda&gt;2]" time="0.001" /><testcase classname="tests.apply.test_invalid_arg" name="test_transform_reducer_raises[any-Series-&lt;lambda&gt;3]" time="0.002" /><testcase classname="tests.apply.test_numba" name="test_numba_vs_python_noop[0]" time="0.000"><skipped type="pytest.skip" message="Could not import 'numba'">C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\apply\test_numba.py:20: Could not import 'numba'</skipped></testcase><testcase classname="tests.apply.test_numba" name="test_numba_vs_python_noop[1]" time="0.000"><skipped type="pytest.skip" message="Could not import 'numba'">C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\apply\test_numba.py:20: Could not import 'numba'</skipped></testcase><testcase classname="tests.apply.test_numba" name="test_numba_vs_python_string_index" time="0.000"><skipped type="pytest.skip" message="Could not import 'numba'">C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\apply\test_numba.py:27: Could not import 'numba'</skipped></testcase><testcase classname="tests.apply.test_numba" name="test_numba_vs_python_indexing" time="0.000"><skipped type="pytest.skip" message="Could not import 'numba'">C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\apply\test_numba.py:43: Could not import 'numba'</skipped></testcase><testcase classname="tests.apply.test_numba" name="test_numba_vs_python_reductions[0-&lt;lambda&gt;0]" time="0.000"><skipped type="pytest.skip" message="Could not import 'numba'">C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\apply\test_numba.py:59: Could not import 'numba'</skipped></testcase><testcase classname="tests.apply.test_numba" name="test_numba_vs_python_reductions[0-&lt;lambda&gt;1]" time="0.000"><skipped type="pytest.skip" message="Could not import 'numba'">C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\apply\test_numba.py:59: Could not import 'numba'</skipped></testcase><testcase classname="tests.apply.test_numba" name="test_numba_vs_python_reductions[0-&lt;lambda&gt;2]" time="0.000"><skipped type="pytest.skip" message="Could not import 'numba'">C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\apply\test_numba.py:59: Could not import 'numba'</skipped></testcase><testcase classname="tests.apply.test_numba" name="test_numba_vs_python_reductions[0-&lt;lambda&gt;3]" time="0.000"><skipped type="pytest.skip" message="Could not import 'numba'">C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\apply\test_numba.py:59: Could not import 'numba'</skipped></testcase><testcase classname="tests.apply.test_numba" name="test_numba_vs_python_reductions[1-&lt;lambda&gt;0]" time="0.000"><skipped type="pytest.skip" message="Could not import 'numba'">C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\apply\test_numba.py:59: Could not import 'numba'</skipped></testcase><testcase classname="tests.apply.test_numba" name="test_numba_vs_python_reductions[1-&lt;lambda&gt;1]" time="0.000"><skipped type="pytest.skip" message="Could not import 'numba'">C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\apply\test_numba.py:59: Could not import 'numba'</skipped></testcase><testcase classname="tests.apply.test_numba" name="test_numba_vs_python_reductions[1-&lt;lambda&gt;2]" time="0.000"><skipped type="pytest.skip" message="Could not import 'numba'">C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\apply\test_numba.py:59: Could not import 'numba'</skipped></testcase><testcase classname="tests.apply.test_numba" name="test_numba_vs_python_reductions[1-&lt;lambda&gt;3]" time="0.000"><skipped type="pytest.skip" message="Could not import 'numba'">C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\apply\test_numba.py:59: Could not import 'numba'</skipped></testcase><testcase classname="tests.apply.test_numba" name="test_numba_numeric_colnames[colnames0]" time="0.000"><skipped type="pytest.skip" message="Could not import 'numba'">C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\apply\test_numba.py:70: Could not import 'numba'</skipped></testcase><testcase classname="tests.apply.test_numba" name="test_numba_numeric_colnames[colnames1]" time="0.000"><skipped type="pytest.skip" message="Could not import 'numba'">C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\apply\test_numba.py:70: Could not import 'numba'</skipped></testcase><testcase classname="tests.apply.test_numba" name="test_numba_parallel_unsupported" time="0.000"><skipped type="pytest.skip" message="Could not import 'numba'">C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\apply\test_numba.py:83: Could not import 'numba'</skipped></testcase><testcase classname="tests.apply.test_numba" name="test_numba_nonunique_unsupported[0]" time="0.000"><skipped type="pytest.skip" message="Could not import 'numba'">C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\apply\test_numba.py:92: Could not import 'numba'</skipped></testcase><testcase classname="tests.apply.test_numba" name="test_numba_nonunique_unsupported[1]" time="0.000"><skipped type="pytest.skip" message="Could not import 'numba'">C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\apply\test_numba.py:92: Could not import 'numba'</skipped></testcase><testcase classname="tests.apply.test_numba" name="test_numba_unsupported_dtypes[0]" time="0.000"><skipped type="pytest.skip" message="Could not import 'numba'">C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\apply\test_numba.py:102: Could not import 'numba'</skipped></testcase><testcase classname="tests.apply.test_numba" name="test_numba_unsupported_dtypes[1]" time="0.000"><skipped type="pytest.skip" message="Could not import 'numba'">C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\apply\test_numba.py:102: Could not import 'numba'</skipped></testcase><testcase classname="tests.apply.test_series_apply" name="test_series_map_box_timedelta[False]" time="0.002" /><testcase classname="tests.apply.test_series_apply" name="test_series_map_box_timedelta[compat]" time="0.002" /><testcase classname="tests.apply.test_series_apply" name="test_apply[False]" time="0.003" /><testcase classname="tests.apply.test_series_apply" name="test_apply[compat]" time="0.003" /><testcase classname="tests.apply.test_series_apply" name="test_apply_map_same_length_inference_bug" time="0.001" /><testcase classname="tests.apply.test_series_apply" name="test_apply_convert_dtype_deprecated[True]" time="0.001" /><testcase classname="tests.apply.test_series_apply" name="test_apply_convert_dtype_deprecated[False]" time="0.001" /><testcase classname="tests.apply.test_series_apply" name="test_apply_args" time="0.001" /><testcase classname="tests.apply.test_series_apply" name="test_agg_args[args0-kwargs0-0]" time="0.002" /><testcase classname="tests.apply.test_series_apply" name="test_agg_args[args1-kwargs1-1]" time="0.001" /><testcase classname="tests.apply.test_series_apply" name="test_agg_args[args2-kwargs2-32]" time="0.001" /><testcase classname="tests.apply.test_series_apply" name="test_agg_args[args3-kwargs3-201]" time="0.001" /><testcase classname="tests.apply.test_series_apply" name="test_agg_mapping_func_deprecated" time="0.002" /><testcase classname="tests.apply.test_series_apply" name="test_series_apply_map_box_timestamps[False]" time="0.002" /><testcase classname="tests.apply.test_series_apply" name="test_series_apply_map_box_timestamps[compat]" time="0.002" /><testcase classname="tests.apply.test_series_apply" name="test_apply_box_dt64" time="0.001" /><testcase classname="tests.apply.test_series_apply" name="test_apply_box_dt64tz" time="0.002" /><testcase classname="tests.apply.test_series_apply" name="test_apply_box_td64" time="0.001" /><testcase classname="tests.apply.test_series_apply" name="test_apply_box_period" time="0.001" /><testcase classname="tests.apply.test_series_apply" name="test_apply_datetimetz[False]" time="0.003" /><testcase classname="tests.apply.test_series_apply" name="test_apply_datetimetz[compat]" time="0.003" /><testcase classname="tests.apply.test_series_apply" name="test_apply_categorical[False]" time="0.002" /><testcase classname="tests.apply.test_series_apply" name="test_apply_categorical[compat]" time="0.003" /><testcase classname="tests.apply.test_series_apply" name="test_apply_categorical_with_nan_values[False-series0]" time="0.002" /><testcase classname="tests.apply.test_series_apply" name="test_apply_categorical_with_nan_values[False-series1]" time="0.002" /><testcase classname="tests.apply.test_series_apply" name="test_apply_categorical_with_nan_values[compat-series0]" time="0.003" /><testcase classname="tests.apply.test_series_apply" name="test_apply_categorical_with_nan_values[compat-series1]" time="0.003" /><testcase classname="tests.apply.test_series_apply" name="test_apply_empty_integer_series_with_datetime_index[False]" time="0.002" /><testcase classname="tests.apply.test_series_apply" name="test_apply_empty_integer_series_with_datetime_index[compat]" time="0.002" /><testcase classname="tests.apply.test_series_apply" name="test_apply_dataframe_iloc" time="0.002" /><testcase classname="tests.apply.test_series_apply" name="test_transform[False]" time="0.036" /><testcase classname="tests.apply.test_series_apply" name="test_transform[compat]" time="0.034" /><testcase classname="tests.apply.test_series_apply" name="test_transform_partial_failure[bfill]" time="0.014"><skipped type="pytest.xfail" message="bfill is successful on any dtype" /></testcase><testcase classname="tests.apply.test_series_apply" name="test_transform_partial_failure[cummax]" time="0.001" /><testcase classname="tests.apply.test_series_apply" name="test_transform_partial_failure[cummin]" time="0.001" /><testcase classname="tests.apply.test_series_apply" name="test_transform_partial_failure[cumprod]" time="0.001" /><testcase classname="tests.apply.test_series_apply" name="test_transform_partial_failure[cumsum]" time="0.001" /><testcase classname="tests.apply.test_series_apply" name="test_transform_partial_failure[diff]" time="0.001" /><testcase classname="tests.apply.test_series_apply" name="test_transform_partial_failure[ffill]" time="0.002"><skipped type="pytest.xfail" message="ffill is successful on any dtype" /></testcase><testcase classname="tests.apply.test_series_apply" name="test_transform_partial_failure[fillna]" time="0.002" /><testcase classname="tests.apply.test_series_apply" name="test_transform_partial_failure[ngroup]" time="0.002" /><testcase classname="tests.apply.test_series_apply" name="test_transform_partial_failure[pct_change]" time="0.004" /><testcase classname="tests.apply.test_series_apply" name="test_transform_partial_failure[rank]" time="0.002" /><testcase classname="tests.apply.test_series_apply" name="test_transform_partial_failure[shift]" time="0.002"><skipped type="pytest.xfail" message="shift is successful on any dtype" /></testcase><testcase classname="tests.apply.test_series_apply" name="test_transform_partial_failure_valueerror" time="0.002" /><testcase classname="tests.apply.test_series_apply" name="test_demo" time="0.002" /><testcase classname="tests.apply.test_series_apply" name="test_apply_map_evaluate_lambdas_the_same[False-str]" time="0.004" /><testcase classname="tests.apply.test_series_apply" name="test_apply_map_evaluate_lambdas_the_same[False-&lt;lambda&gt;]" time="0.004" /><testcase classname="tests.apply.test_series_apply" name="test_apply_map_evaluate_lambdas_the_same[compat-str]" time="0.002" /><testcase classname="tests.apply.test_series_apply" name="test_apply_map_evaluate_lambdas_the_same[compat-&lt;lambda&gt;]" time="0.002" /><testcase classname="tests.apply.test_series_apply" name="test_agg_evaluate_lambdas" time="0.001" /><testcase classname="tests.apply.test_series_apply" name="test_with_nested_series[agg]" time="0.014" /><testcase classname="tests.apply.test_series_apply" name="test_with_nested_series[apply]" time="0.014" /><testcase classname="tests.apply.test_series_apply" name="test_replicate_describe" time="0.005" /><testcase classname="tests.apply.test_series_apply" name="test_reduce" time="0.002" /><testcase classname="tests.apply.test_series_apply" name="test_non_callable_aggregates[agg-kwds0]" time="0.002" /><testcase classname="tests.apply.test_series_apply" name="test_non_callable_aggregates[apply-kwds1]" time="0.002" /><testcase classname="tests.apply.test_series_apply" name="test_non_callable_aggregates[apply-kwds2]" time="0.002" /><testcase classname="tests.apply.test_series_apply" name="test_series_apply_no_suffix_index[False]" time="0.002" /><testcase classname="tests.apply.test_series_apply" name="test_series_apply_no_suffix_index[compat]" time="0.002" /><testcase classname="tests.apply.test_series_apply" name="test_apply_series_on_date_time_index_aware_series[True-dti0-exp0]" time="0.002" /><testcase classname="tests.apply.test_series_apply" name="test_apply_series_on_date_time_index_aware_series[True-dti1-exp1]" time="0.003" /><testcase classname="tests.apply.test_series_apply" name="test_apply_series_on_date_time_index_aware_series[False-dti0-exp0]" time="0.002" /><testcase classname="tests.apply.test_series_apply" name="test_apply_series_on_date_time_index_aware_series[False-dti1-exp1]" time="0.004" /><testcase classname="tests.apply.test_series_apply" name="test_apply_scalar_on_date_time_index_aware_series[compat-expected0]" time="0.002" /><testcase classname="tests.apply.test_series_apply" name="test_apply_scalar_on_date_time_index_aware_series[False-1]" time="0.002" /><testcase classname="tests.apply.test_series_apply" name="test_apply_to_timedelta[False]" time="0.002" /><testcase classname="tests.apply.test_series_apply" name="test_apply_to_timedelta[compat]" time="0.003" /><testcase classname="tests.apply.test_series_apply" name="test_apply_listlike_reducer[agg-kwargs0-ops0-names0]" time="0.003" /><testcase classname="tests.apply.test_series_apply" name="test_apply_listlike_reducer[agg-kwargs0-ops1-names1]" time="0.003" /><testcase classname="tests.apply.test_series_apply" name="test_apply_listlike_reducer[agg-kwargs0-ops2-names2]" time="0.002" /><testcase classname="tests.apply.test_series_apply" name="test_apply_listlike_reducer[agg-kwargs0-ops3-names3]" time="0.002" /><testcase classname="tests.apply.test_series_apply" name="test_apply_listlike_reducer[apply-kwargs1-ops0-names0]" time="0.003" /><testcase classname="tests.apply.test_series_apply" name="test_apply_listlike_reducer[apply-kwargs1-ops1-names1]" time="0.002" /><testcase classname="tests.apply.test_series_apply" name="test_apply_listlike_reducer[apply-kwargs1-ops2-names2]" time="0.002" /><testcase classname="tests.apply.test_series_apply" name="test_apply_listlike_reducer[apply-kwargs1-ops3-names3]" time="0.002" /><testcase classname="tests.apply.test_series_apply" name="test_apply_listlike_reducer[apply-kwargs2-ops0-names0]" time="0.002" /><testcase classname="tests.apply.test_series_apply" name="test_apply_listlike_reducer[apply-kwargs2-ops1-names1]" time="0.002" /><testcase classname="tests.apply.test_series_apply" name="test_apply_listlike_reducer[apply-kwargs2-ops2-names2]" time="0.002" /><testcase classname="tests.apply.test_series_apply" name="test_apply_listlike_reducer[apply-kwargs2-ops3-names3]" time="0.003" /><testcase classname="tests.apply.test_series_apply" name="test_apply_dictlike_reducer[False-agg-kwargs0-ops0]" time="0.002" /><testcase classname="tests.apply.test_series_apply" name="test_apply_dictlike_reducer[False-agg-kwargs0-ops1]" time="0.003" /><testcase classname="tests.apply.test_series_apply" name="test_apply_dictlike_reducer[False-agg-kwargs0-ops2]" time="0.002" /><testcase classname="tests.apply.test_series_apply" name="test_apply_dictlike_reducer[False-agg-kwargs0-ops3]" time="0.003" /><testcase classname="tests.apply.test_series_apply" name="test_apply_dictlike_reducer[False-apply-kwargs1-ops0]" time="0.002" /><testcase classname="tests.apply.test_series_apply" name="test_apply_dictlike_reducer[False-apply-kwargs1-ops1]" time="0.003" /><testcase classname="tests.apply.test_series_apply" name="test_apply_dictlike_reducer[False-apply-kwargs1-ops2]" time="0.002" /><testcase classname="tests.apply.test_series_apply" name="test_apply_dictlike_reducer[False-apply-kwargs1-ops3]" time="0.002" /><testcase classname="tests.apply.test_series_apply" name="test_apply_dictlike_reducer[False-apply-kwargs2-ops0]" time="0.002" /><testcase classname="tests.apply.test_series_apply" name="test_apply_dictlike_reducer[False-apply-kwargs2-ops1]" time="0.003" /><testcase classname="tests.apply.test_series_apply" name="test_apply_dictlike_reducer[False-apply-kwargs2-ops2]" time="0.002" /><testcase classname="tests.apply.test_series_apply" name="test_apply_dictlike_reducer[False-apply-kwargs2-ops3]" time="0.002" /><testcase classname="tests.apply.test_series_apply" name="test_apply_dictlike_reducer[compat-agg-kwargs0-ops0]" time="0.002" /><testcase classname="tests.apply.test_series_apply" name="test_apply_dictlike_reducer[compat-agg-kwargs0-ops1]" time="0.002" /><testcase classname="tests.apply.test_series_apply" name="test_apply_dictlike_reducer[compat-agg-kwargs0-ops2]" time="0.003" /><testcase classname="tests.apply.test_series_apply" name="test_apply_dictlike_reducer[compat-agg-kwargs0-ops3]" time="0.002" /><testcase classname="tests.apply.test_series_apply" name="test_apply_dictlike_reducer[compat-apply-kwargs1-ops0]" time="0.002" /><testcase classname="tests.apply.test_series_apply" name="test_apply_dictlike_reducer[compat-apply-kwargs1-ops1]" time="0.002" /><testcase classname="tests.apply.test_series_apply" name="test_apply_dictlike_reducer[compat-apply-kwargs1-ops2]" time="0.002" /><testcase classname="tests.apply.test_series_apply" name="test_apply_dictlike_reducer[compat-apply-kwargs1-ops3]" time="0.003" /><testcase classname="tests.apply.test_series_apply" name="test_apply_dictlike_reducer[compat-apply-kwargs2-ops0]" time="0.002" /><testcase classname="tests.apply.test_series_apply" name="test_apply_dictlike_reducer[compat-apply-kwargs2-ops1]" time="0.002" /><testcase classname="tests.apply.test_series_apply" name="test_apply_dictlike_reducer[compat-apply-kwargs2-ops2]" time="0.002" /><testcase classname="tests.apply.test_series_apply" name="test_apply_dictlike_reducer[compat-apply-kwargs2-ops3]" time="0.004" /><testcase classname="tests.apply.test_series_apply" name="test_apply_listlike_transformer[False-ops0-names0]" time="0.003" /><testcase classname="tests.apply.test_series_apply" name="test_apply_listlike_transformer[False-ops1-names1]" time="0.003" /><testcase classname="tests.apply.test_series_apply" name="test_apply_listlike_transformer[False-ops2-names2]" time="0.003" /><testcase classname="tests.apply.test_series_apply" name="test_apply_listlike_transformer[False-ops3-names3]" time="0.004" /><testcase classname="tests.apply.test_series_apply" name="test_apply_listlike_transformer[compat-ops0-names0]" time="0.003" /><testcase classname="tests.apply.test_series_apply" name="test_apply_listlike_transformer[compat-ops1-names1]" time="0.003" /><testcase classname="tests.apply.test_series_apply" name="test_apply_listlike_transformer[compat-ops2-names2]" time="0.003" /><testcase classname="tests.apply.test_series_apply" name="test_apply_listlike_transformer[compat-ops3-names3]" time="0.003" /><testcase classname="tests.apply.test_series_apply" name="test_apply_listlike_lambda[False-ops0-expected0]" time="0.002" /><testcase classname="tests.apply.test_series_apply" name="test_apply_listlike_lambda[False-ops1-expected1]" time="0.003" /><testcase classname="tests.apply.test_series_apply" name="test_apply_listlike_lambda[compat-ops0-expected0]" time="0.004" /><testcase classname="tests.apply.test_series_apply" name="test_apply_listlike_lambda[compat-ops1-expected1]" time="0.003" /><testcase classname="tests.apply.test_series_apply" name="test_apply_dictlike_transformer[False-ops0]" time="0.004" /><testcase classname="tests.apply.test_series_apply" name="test_apply_dictlike_transformer[False-ops1]" time="0.005" /><testcase classname="tests.apply.test_series_apply" name="test_apply_dictlike_transformer[False-ops2]" time="0.004" /><testcase classname="tests.apply.test_series_apply" name="test_apply_dictlike_transformer[False-ops3]" time="0.004" /><testcase classname="tests.apply.test_series_apply" name="test_apply_dictlike_transformer[compat-ops0]" time="0.003" /><testcase classname="tests.apply.test_series_apply" name="test_apply_dictlike_transformer[compat-ops1]" time="0.003" /><testcase classname="tests.apply.test_series_apply" name="test_apply_dictlike_transformer[compat-ops2]" time="0.003" /><testcase classname="tests.apply.test_series_apply" name="test_apply_dictlike_transformer[compat-ops3]" time="0.004" /><testcase classname="tests.apply.test_series_apply" name="test_apply_dictlike_lambda[False-ops0-expected0]" time="0.002" /><testcase classname="tests.apply.test_series_apply" name="test_apply_dictlike_lambda[False-ops1-expected1]" time="0.004" /><testcase classname="tests.apply.test_series_apply" name="test_apply_dictlike_lambda[compat-ops0-expected0]" time="0.002" /><testcase classname="tests.apply.test_series_apply" name="test_apply_dictlike_lambda[compat-ops1-expected1]" time="0.002" /><testcase classname="tests.apply.test_series_apply" name="test_apply_retains_column_name[False]" time="0.003" /><testcase classname="tests.apply.test_series_apply" name="test_apply_retains_column_name[compat]" time="0.004" /><testcase classname="tests.apply.test_series_apply" name="test_apply_type" time="0.002" /><testcase classname="tests.apply.test_series_apply" name="test_series_apply_unpack_nested_data" time="0.004" /><testcase classname="tests.apply.test_series_apply_relabeling" name="test_relabel_no_duplicated_method" time="0.011" /><testcase classname="tests.apply.test_series_apply_relabeling" name="test_relabel_duplicated_method" time="0.006" /><testcase classname="tests.apply.test_series_transform" name="test_agg_args[args0-kwargs0-0]" time="0.002" /><testcase classname="tests.apply.test_series_transform" name="test_agg_args[args1-kwargs1-1]" time="0.003" /><testcase classname="tests.apply.test_series_transform" name="test_agg_args[args2-kwargs2-32]" time="0.003" /><testcase classname="tests.apply.test_series_transform" name="test_agg_args[args3-kwargs3-201]" time="0.003" /><testcase classname="tests.apply.test_series_transform" name="test_transform_listlike[ops0-names0]" time="0.006" /><testcase classname="tests.apply.test_series_transform" name="test_transform_listlike[ops1-names1]" time="0.005" /><testcase classname="tests.apply.test_series_transform" name="test_transform_listlike[ops2-names2]" time="0.004" /><testcase classname="tests.apply.test_series_transform" name="test_transform_listlike[ops3-names3]" time="0.004" /><testcase classname="tests.apply.test_series_transform" name="test_transform_listlike_func_with_args" time="0.003" /><testcase classname="tests.apply.test_series_transform" name="test_transform_dictlike[dict]" time="0.005" /><testcase classname="tests.apply.test_series_transform" name="test_transform_dictlike[Series]" time="0.003" /><testcase classname="tests.apply.test_series_transform" name="test_transform_dictlike_mixed" time="0.004" /><testcase classname="tests.apply.test_str" name="test_apply_with_string_funcs[agg-no_args_or_kwds-sum]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_apply_with_string_funcs[agg-no_args_or_kwds-mean]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_apply_with_string_funcs[agg-no_args_or_kwds-min]" time="0.021" /><testcase classname="tests.apply.test_str" name="test_apply_with_string_funcs[agg-no_args_or_kwds-max]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_apply_with_string_funcs[agg-no_args_or_kwds-std]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_apply_with_string_funcs[agg-axis_from_args-sum]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_apply_with_string_funcs[agg-axis_from_args-mean]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_apply_with_string_funcs[agg-axis_from_args-min]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_apply_with_string_funcs[agg-axis_from_args-max]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_apply_with_string_funcs[agg-axis_from_args-std]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_apply_with_string_funcs[agg-axis_from_kwds-sum]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_apply_with_string_funcs[agg-axis_from_kwds-mean]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_apply_with_string_funcs[agg-axis_from_kwds-min]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_apply_with_string_funcs[agg-axis_from_kwds-max]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_apply_with_string_funcs[agg-axis_from_kwds-std]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_apply_with_string_funcs[agg-optional_kwds-sum]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_apply_with_string_funcs[agg-optional_kwds-mean]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_apply_with_string_funcs[agg-optional_kwds-min]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_apply_with_string_funcs[agg-optional_kwds-max]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_apply_with_string_funcs[agg-optional_kwds-std]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_apply_with_string_funcs[agg-args_and_kwds-sum]" time="0.002"><skipped type="pytest.xfail" message="agg/apply signature mismatch - agg passes 2nd argument to func" /></testcase><testcase classname="tests.apply.test_str" name="test_apply_with_string_funcs[agg-args_and_kwds-mean]" time="0.007"><skipped type="pytest.xfail" message="agg/apply signature mismatch - agg passes 2nd argument to func" /></testcase><testcase classname="tests.apply.test_str" name="test_apply_with_string_funcs[agg-args_and_kwds-min]" time="0.002"><skipped type="pytest.xfail" message="agg/apply signature mismatch - agg passes 2nd argument to func" /></testcase><testcase classname="tests.apply.test_str" name="test_apply_with_string_funcs[agg-args_and_kwds-max]" time="0.002"><skipped type="pytest.xfail" message="agg/apply signature mismatch - agg passes 2nd argument to func" /></testcase><testcase classname="tests.apply.test_str" name="test_apply_with_string_funcs[agg-args_and_kwds-std]" time="0.002"><skipped type="pytest.xfail" message="agg/apply signature mismatch - agg passes 2nd argument to func" /></testcase><testcase classname="tests.apply.test_str" name="test_apply_with_string_funcs[apply-no_args_or_kwds-sum]" time="0.003" /><testcase classname="tests.apply.test_str" name="test_apply_with_string_funcs[apply-no_args_or_kwds-mean]" time="0.003" /><testcase classname="tests.apply.test_str" name="test_apply_with_string_funcs[apply-no_args_or_kwds-min]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_apply_with_string_funcs[apply-no_args_or_kwds-max]" time="0.003" /><testcase classname="tests.apply.test_str" name="test_apply_with_string_funcs[apply-no_args_or_kwds-std]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_apply_with_string_funcs[apply-axis_from_args-sum]" time="0.003" /><testcase classname="tests.apply.test_str" name="test_apply_with_string_funcs[apply-axis_from_args-mean]" time="0.003" /><testcase classname="tests.apply.test_str" name="test_apply_with_string_funcs[apply-axis_from_args-min]" time="0.003" /><testcase classname="tests.apply.test_str" name="test_apply_with_string_funcs[apply-axis_from_args-max]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_apply_with_string_funcs[apply-axis_from_args-std]" time="0.003" /><testcase classname="tests.apply.test_str" name="test_apply_with_string_funcs[apply-axis_from_kwds-sum]" time="0.003" /><testcase classname="tests.apply.test_str" name="test_apply_with_string_funcs[apply-axis_from_kwds-mean]" time="0.003" /><testcase classname="tests.apply.test_str" name="test_apply_with_string_funcs[apply-axis_from_kwds-min]" time="0.003" /><testcase classname="tests.apply.test_str" name="test_apply_with_string_funcs[apply-axis_from_kwds-max]" time="0.003" /><testcase classname="tests.apply.test_str" name="test_apply_with_string_funcs[apply-axis_from_kwds-std]" time="0.003" /><testcase classname="tests.apply.test_str" name="test_apply_with_string_funcs[apply-optional_kwds-sum]" time="0.003" /><testcase classname="tests.apply.test_str" name="test_apply_with_string_funcs[apply-optional_kwds-mean]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_apply_with_string_funcs[apply-optional_kwds-min]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_apply_with_string_funcs[apply-optional_kwds-max]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_apply_with_string_funcs[apply-optional_kwds-std]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_apply_with_string_funcs[apply-args_and_kwds-sum]" time="0.003" /><testcase classname="tests.apply.test_str" name="test_apply_with_string_funcs[apply-args_and_kwds-mean]" time="0.003" /><testcase classname="tests.apply.test_str" name="test_apply_with_string_funcs[apply-args_and_kwds-min]" time="0.003" /><testcase classname="tests.apply.test_str" name="test_apply_with_string_funcs[apply-args_and_kwds-max]" time="0.003" /><testcase classname="tests.apply.test_str" name="test_apply_with_string_funcs[apply-args_and_kwds-std]" time="0.004" /><testcase classname="tests.apply.test_str" name="test_with_string_args[sum]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_with_string_args[mean]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_with_string_args[min]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_with_string_args[max]" time="0.003" /><testcase classname="tests.apply.test_str" name="test_with_string_args[std]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_apply_np_reducer[agg-mean]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_apply_np_reducer[agg-median]" time="0.003" /><testcase classname="tests.apply.test_str" name="test_apply_np_reducer[agg-std]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_apply_np_reducer[agg-var]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_apply_np_reducer[apply-mean]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_apply_np_reducer[apply-median]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_apply_np_reducer[apply-std]" time="0.003" /><testcase classname="tests.apply.test_str" name="test_apply_np_reducer[apply-var]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_apply_np_transformer[transform-abs]" time="0.003" /><testcase classname="tests.apply.test_str" name="test_apply_np_transformer[transform-ceil]" time="0.003" /><testcase classname="tests.apply.test_str" name="test_apply_np_transformer[transform-cos]" time="0.003" /><testcase classname="tests.apply.test_str" name="test_apply_np_transformer[transform-cumsum]" time="0.003" /><testcase classname="tests.apply.test_str" name="test_apply_np_transformer[transform-exp]" time="0.003" /><testcase classname="tests.apply.test_str" name="test_apply_np_transformer[transform-log]" time="0.003" /><testcase classname="tests.apply.test_str" name="test_apply_np_transformer[transform-sqrt]" time="0.005" /><testcase classname="tests.apply.test_str" name="test_apply_np_transformer[transform-square]" time="0.005" /><testcase classname="tests.apply.test_str" name="test_apply_np_transformer[apply-abs]" time="0.005" /><testcase classname="tests.apply.test_str" name="test_apply_np_transformer[apply-ceil]" time="0.004" /><testcase classname="tests.apply.test_str" name="test_apply_np_transformer[apply-cos]" time="0.006" /><testcase classname="tests.apply.test_str" name="test_apply_np_transformer[apply-cumsum]" time="0.005" /><testcase classname="tests.apply.test_str" name="test_apply_np_transformer[apply-exp]" time="0.004" /><testcase classname="tests.apply.test_str" name="test_apply_np_transformer[apply-log]" time="0.005" /><testcase classname="tests.apply.test_str" name="test_apply_np_transformer[apply-sqrt]" time="0.005" /><testcase classname="tests.apply.test_str" name="test_apply_np_transformer[apply-square]" time="0.005" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_series[series0-sum-0]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_series[series1-sum-0]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_series[series2-sum-0]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_series[series3-nansum-0]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_series[series4-max-nan]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_series[series5-max-nan]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_series[series6-max-nan]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_series[series7-nanmax-nan]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_series[series8-min-nan]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_series[series9-min-nan]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_series[series10-min-nan]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_series[series11-nanmin-nan]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_series[series12-all-True]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_series[series13-all-True]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_series[series14-any-False]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_series[series15-any-False]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_series[series16-mean-nan]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_series[series17-mean-nan]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_series[series18-nanmean-nan]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_series[series19-prod-1]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_series[series20-prod-1]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_series[series21-nanprod-1]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_series[series22-std-nan]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_series[series23-std-nan]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_series[series24-nanstd-nan]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_series[series25-var-nan]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_series[series26-var-nan]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_series[series27-nanvar-nan]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_series[series28-median-nan]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_series[series29-median-nan]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_series[series30-nanmedian-nan]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_series[series31-sum-6]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_series[series32-sum-6]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_series[series33-sum-6]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_series[series34-nansum-6]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_series[series35-max-3]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_series[series36-max-3]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_series[series37-max-3]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_series[series38-nanmax-3]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_series[series39-min-1]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_series[series40-min-1]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_series[series41-min-1]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_series[series42-nanmin-1]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_series[series43-all-True]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_series[series44-all-True]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_series[series45-any-True]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_series[series46-any-True]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_series[series47-mean-2]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_series[series48-mean-2]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_series[series49-nanmean-2]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_series[series50-prod-6]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_series[series51-prod-6]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_series[series52-nanprod-6]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_series[series53-std-1]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_series[series54-std-1]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_series[series55-nanstd-1]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_series[series56-var-1]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_series[series57-var-1]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_series[series58-nanvar-1]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_series[series59-median-2]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_series[series60-median-2]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_series[series61-nanmedian-2]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_series[series62-sum-abc]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_series[series63-sum-abc]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_series[series64-sum-abc]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_series[series65-nansum-abc]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_series[series66-max-c]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_series[series67-max-c]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_series[series68-max-c]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_series[series69-nanmax-c]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_series[series70-min-a]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_series[series71-min-a]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_series[series72-min-a]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_series[series73-nanmin-a]" time="0.003" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_series[series74-all-True]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_series[series75-all-True]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_series[series76-any-True]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_series[series77-any-True]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_transform_series[series0-cumprod-expected0]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_transform_series[series1-cumprod-expected1]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_transform_series[series2-nancumprod-expected2]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_transform_series[series3-cumsum-expected3]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_transform_series[series4-cumsum-expected4]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_transform_series[series5-nancumsum-expected5]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_transform_series[series6-cumprod-expected6]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_transform_series[series7-cumprod-expected7]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_transform_series[series8-nancumprod-expected8]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_transform_series[series9-cumsum-expected9]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_transform_series[series10-cumsum-expected10]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_transform_series[series11-nancumsum-expected11]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_transform_series[series12-cumsum-expected12]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_transform_series[series13-cumsum-expected13]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_transform_series[series14-nancumsum-expected14]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=0-df0-sum-expected0]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=0-df1-sum-expected1]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=0-df2-sum-expected2]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=0-df3-nansum-expected3]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=0-df4-max-expected4]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=0-df5-max-expected5]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=0-df6-max-expected6]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=0-df7-nanmax-expected7]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=0-df8-min-expected8]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=0-df9-min-expected9]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=0-df10-min-expected10]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=0-df11-nanmin-expected11]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=0-df12-all-expected12]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=0-df13-all-expected13]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=0-df14-any-expected14]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=0-df15-any-expected15]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=0-df16-mean-expected16]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=0-df17-mean-expected17]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=0-df18-nanmean-expected18]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=0-df19-prod-expected19]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=0-df20-prod-expected20]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=0-df21-nanprod-expected21]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=0-df22-std-expected22]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=0-df23-std-expected23]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=0-df24-nanstd-expected24]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=0-df25-var-expected25]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=0-df26-var-expected26]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=0-df27-nanvar-expected27]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=0-df28-median-expected28]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=0-df29-median-expected29]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=0-df30-nanmedian-expected30]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=0-df31-sum-expected31]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=0-df32-sum-expected32]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=0-df33-sum-expected33]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=0-df34-nansum-expected34]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=0-df35-max-expected35]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=0-df36-max-expected36]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=0-df37-max-expected37]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=0-df38-nanmax-expected38]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=0-df39-min-expected39]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=0-df40-min-expected40]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=0-df41-min-expected41]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=0-df42-nanmin-expected42]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=0-df43-all-expected43]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=0-df44-all-expected44]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=0-df45-any-expected45]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=0-df46-any-expected46]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=0-df47-mean-expected47]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=0-df48-mean-expected48]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=0-df49-nanmean-expected49]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=0-df50-prod-expected50]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=0-df51-prod-expected51]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=0-df52-nanprod-expected52]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=0-df53-std-expected53]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=0-df54-std-expected54]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=0-df55-nanstd-expected55]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=0-df56-var-expected56]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=0-df57-var-expected57]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=0-df58-nanvar-expected58]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=0-df59-median-expected59]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=0-df60-median-expected60]" time="0.003" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=0-df61-nanmedian-expected61]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=1-df0-sum-expected0]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=1-df1-sum-expected1]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=1-df2-sum-expected2]" time="0.003" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=1-df3-nansum-expected3]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=1-df4-max-expected4]" time="0.003" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=1-df5-max-expected5]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=1-df6-max-expected6]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=1-df7-nanmax-expected7]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=1-df8-min-expected8]" time="0.003" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=1-df9-min-expected9]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=1-df10-min-expected10]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=1-df11-nanmin-expected11]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=1-df12-all-expected12]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=1-df13-all-expected13]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=1-df14-any-expected14]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=1-df15-any-expected15]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=1-df16-mean-expected16]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=1-df17-mean-expected17]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=1-df18-nanmean-expected18]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=1-df19-prod-expected19]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=1-df20-prod-expected20]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=1-df21-nanprod-expected21]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=1-df22-std-expected22]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=1-df23-std-expected23]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=1-df24-nanstd-expected24]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=1-df25-var-expected25]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=1-df26-var-expected26]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=1-df27-nanvar-expected27]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=1-df28-median-expected28]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=1-df29-median-expected29]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=1-df30-nanmedian-expected30]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=1-df31-sum-expected31]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=1-df32-sum-expected32]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=1-df33-sum-expected33]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=1-df34-nansum-expected34]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=1-df35-max-expected35]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=1-df36-max-expected36]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=1-df37-max-expected37]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=1-df38-nanmax-expected38]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=1-df39-min-expected39]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=1-df40-min-expected40]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=1-df41-min-expected41]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=1-df42-nanmin-expected42]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=1-df43-all-expected43]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=1-df44-all-expected44]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=1-df45-any-expected45]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=1-df46-any-expected46]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=1-df47-mean-expected47]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=1-df48-mean-expected48]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=1-df49-nanmean-expected49]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=1-df50-prod-expected50]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=1-df51-prod-expected51]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=1-df52-nanprod-expected52]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=1-df53-std-expected53]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=1-df54-std-expected54]" time="0.003" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=1-df55-nanstd-expected55]" time="0.003" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=1-df56-var-expected56]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=1-df57-var-expected57]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=1-df58-nanvar-expected58]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=1-df59-median-expected59]" time="0.003" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=1-df60-median-expected60]" time="0.003" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis=1-df61-nanmedian-expected61]" time="0.003" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='index'-df0-sum-expected0]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='index'-df1-sum-expected1]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='index'-df2-sum-expected2]" time="0.003" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='index'-df3-nansum-expected3]" time="0.004" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='index'-df4-max-expected4]" time="0.003" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='index'-df5-max-expected5]" time="0.003" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='index'-df6-max-expected6]" time="0.003" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='index'-df7-nanmax-expected7]" time="0.003" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='index'-df8-min-expected8]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='index'-df9-min-expected9]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='index'-df10-min-expected10]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='index'-df11-nanmin-expected11]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='index'-df12-all-expected12]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='index'-df13-all-expected13]" time="0.003" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='index'-df14-any-expected14]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='index'-df15-any-expected15]" time="0.003" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='index'-df16-mean-expected16]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='index'-df17-mean-expected17]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='index'-df18-nanmean-expected18]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='index'-df19-prod-expected19]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='index'-df20-prod-expected20]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='index'-df21-nanprod-expected21]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='index'-df22-std-expected22]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='index'-df23-std-expected23]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='index'-df24-nanstd-expected24]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='index'-df25-var-expected25]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='index'-df26-var-expected26]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='index'-df27-nanvar-expected27]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='index'-df28-median-expected28]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='index'-df29-median-expected29]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='index'-df30-nanmedian-expected30]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='index'-df31-sum-expected31]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='index'-df32-sum-expected32]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='index'-df33-sum-expected33]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='index'-df34-nansum-expected34]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='index'-df35-max-expected35]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='index'-df36-max-expected36]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='index'-df37-max-expected37]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='index'-df38-nanmax-expected38]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='index'-df39-min-expected39]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='index'-df40-min-expected40]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='index'-df41-min-expected41]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='index'-df42-nanmin-expected42]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='index'-df43-all-expected43]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='index'-df44-all-expected44]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='index'-df45-any-expected45]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='index'-df46-any-expected46]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='index'-df47-mean-expected47]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='index'-df48-mean-expected48]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='index'-df49-nanmean-expected49]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='index'-df50-prod-expected50]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='index'-df51-prod-expected51]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='index'-df52-nanprod-expected52]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='index'-df53-std-expected53]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='index'-df54-std-expected54]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='index'-df55-nanstd-expected55]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='index'-df56-var-expected56]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='index'-df57-var-expected57]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='index'-df58-nanvar-expected58]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='index'-df59-median-expected59]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='index'-df60-median-expected60]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='index'-df61-nanmedian-expected61]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='columns'-df0-sum-expected0]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='columns'-df1-sum-expected1]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='columns'-df2-sum-expected2]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='columns'-df3-nansum-expected3]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='columns'-df4-max-expected4]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='columns'-df5-max-expected5]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='columns'-df6-max-expected6]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='columns'-df7-nanmax-expected7]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='columns'-df8-min-expected8]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='columns'-df9-min-expected9]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='columns'-df10-min-expected10]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='columns'-df11-nanmin-expected11]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='columns'-df12-all-expected12]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='columns'-df13-all-expected13]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='columns'-df14-any-expected14]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='columns'-df15-any-expected15]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='columns'-df16-mean-expected16]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='columns'-df17-mean-expected17]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='columns'-df18-nanmean-expected18]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='columns'-df19-prod-expected19]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='columns'-df20-prod-expected20]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='columns'-df21-nanprod-expected21]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='columns'-df22-std-expected22]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='columns'-df23-std-expected23]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='columns'-df24-nanstd-expected24]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='columns'-df25-var-expected25]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='columns'-df26-var-expected26]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='columns'-df27-nanvar-expected27]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='columns'-df28-median-expected28]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='columns'-df29-median-expected29]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='columns'-df30-nanmedian-expected30]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='columns'-df31-sum-expected31]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='columns'-df32-sum-expected32]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='columns'-df33-sum-expected33]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='columns'-df34-nansum-expected34]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='columns'-df35-max-expected35]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='columns'-df36-max-expected36]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='columns'-df37-max-expected37]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='columns'-df38-nanmax-expected38]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='columns'-df39-min-expected39]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='columns'-df40-min-expected40]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='columns'-df41-min-expected41]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='columns'-df42-nanmin-expected42]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='columns'-df43-all-expected43]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='columns'-df44-all-expected44]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='columns'-df45-any-expected45]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='columns'-df46-any-expected46]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='columns'-df47-mean-expected47]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='columns'-df48-mean-expected48]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='columns'-df49-nanmean-expected49]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='columns'-df50-prod-expected50]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='columns'-df51-prod-expected51]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='columns'-df52-nanprod-expected52]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='columns'-df53-std-expected53]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='columns'-df54-std-expected54]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='columns'-df55-nanstd-expected55]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='columns'-df56-var-expected56]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='columns'-df57-var-expected57]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='columns'-df58-nanvar-expected58]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='columns'-df59-median-expected59]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='columns'-df60-median-expected60]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_frame[axis='columns'-df61-nanmedian-expected61]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_transform_frame[axis=0-df0-cumprod-expected0]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_transform_frame[axis=0-df1-cumprod-expected1]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_transform_frame[axis=0-df2-nancumprod-expected2]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_transform_frame[axis=0-df3-cumsum-expected3]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_transform_frame[axis=0-df4-cumsum-expected4]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_transform_frame[axis=0-df5-nancumsum-expected5]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_transform_frame[axis=0-df6-cumprod-expected6]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_transform_frame[axis=0-df7-cumprod-expected7]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_transform_frame[axis=0-df8-nancumprod-expected8]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_transform_frame[axis=0-df9-cumsum-expected9]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_transform_frame[axis=0-df10-cumsum-expected10]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_transform_frame[axis=0-df11-nancumsum-expected11]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_transform_frame[axis=1-df0-cumprod-expected0]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_transform_frame[axis=1-df1-cumprod-expected1]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_transform_frame[axis=1-df2-nancumprod-expected2]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_transform_frame[axis=1-df3-cumsum-expected3]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_transform_frame[axis=1-df4-cumsum-expected4]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_transform_frame[axis=1-df5-nancumsum-expected5]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_transform_frame[axis=1-df6-cumprod-expected6]" time="0.003" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_transform_frame[axis=1-df7-cumprod-expected7]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_transform_frame[axis=1-df8-nancumprod-expected8]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_transform_frame[axis=1-df9-cumsum-expected9]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_transform_frame[axis=1-df10-cumsum-expected10]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_transform_frame[axis=1-df11-nancumsum-expected11]" time="0.003" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_transform_frame[axis='index'-df0-cumprod-expected0]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_transform_frame[axis='index'-df1-cumprod-expected1]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_transform_frame[axis='index'-df2-nancumprod-expected2]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_transform_frame[axis='index'-df3-cumsum-expected3]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_transform_frame[axis='index'-df4-cumsum-expected4]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_transform_frame[axis='index'-df5-nancumsum-expected5]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_transform_frame[axis='index'-df6-cumprod-expected6]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_transform_frame[axis='index'-df7-cumprod-expected7]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_transform_frame[axis='index'-df8-nancumprod-expected8]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_transform_frame[axis='index'-df9-cumsum-expected9]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_transform_frame[axis='index'-df10-cumsum-expected10]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_transform_frame[axis='index'-df11-nancumsum-expected11]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_transform_frame[axis='columns'-df0-cumprod-expected0]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_transform_frame[axis='columns'-df1-cumprod-expected1]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_transform_frame[axis='columns'-df2-nancumprod-expected2]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_transform_frame[axis='columns'-df3-cumsum-expected3]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_transform_frame[axis='columns'-df4-cumsum-expected4]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_transform_frame[axis='columns'-df5-nancumsum-expected5]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_transform_frame[axis='columns'-df6-cumprod-expected6]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_transform_frame[axis='columns'-df7-cumprod-expected7]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_transform_frame[axis='columns'-df8-nancumprod-expected8]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_transform_frame[axis='columns'-df9-cumsum-expected9]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_transform_frame[axis='columns'-df10-cumsum-expected10]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_agg_cython_table_transform_frame[axis='columns'-df11-nancumsum-expected11]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_transform_groupby_kernel_series[bfill]" time="0.024" /><testcase classname="tests.apply.test_str" name="test_transform_groupby_kernel_series[cummax]" time="0.006" /><testcase classname="tests.apply.test_str" name="test_transform_groupby_kernel_series[cummin]" time="0.005" /><testcase classname="tests.apply.test_str" name="test_transform_groupby_kernel_series[cumprod]" time="0.004" /><testcase classname="tests.apply.test_str" name="test_transform_groupby_kernel_series[cumsum]" time="0.004" /><testcase classname="tests.apply.test_str" name="test_transform_groupby_kernel_series[diff]" time="0.005" /><testcase classname="tests.apply.test_str" name="test_transform_groupby_kernel_series[ffill]" time="0.003" /><testcase classname="tests.apply.test_str" name="test_transform_groupby_kernel_series[fillna]" time="0.006" /><testcase classname="tests.apply.test_str" name="test_transform_groupby_kernel_series[ngroup]" time="0.003"><skipped type="pytest.xfail" message="ngroup not valid for NDFrame" /></testcase><testcase classname="tests.apply.test_str" name="test_transform_groupby_kernel_series[pct_change]" time="0.006" /><testcase classname="tests.apply.test_str" name="test_transform_groupby_kernel_series[rank]" time="0.022" /><testcase classname="tests.apply.test_str" name="test_transform_groupby_kernel_series[shift]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_transform_groupby_kernel_frame[axis=0-bfill]" time="0.006" /><testcase classname="tests.apply.test_str" name="test_transform_groupby_kernel_frame[axis=0-cummax]" time="0.006" /><testcase classname="tests.apply.test_str" name="test_transform_groupby_kernel_frame[axis=0-cummin]" time="0.005" /><testcase classname="tests.apply.test_str" name="test_transform_groupby_kernel_frame[axis=0-cumprod]" time="0.005" /><testcase classname="tests.apply.test_str" name="test_transform_groupby_kernel_frame[axis=0-cumsum]" time="0.007" /><testcase classname="tests.apply.test_str" name="test_transform_groupby_kernel_frame[axis=0-diff]" time="0.009" /><testcase classname="tests.apply.test_str" name="test_transform_groupby_kernel_frame[axis=0-ffill]" time="0.009" /><testcase classname="tests.apply.test_str" name="test_transform_groupby_kernel_frame[axis=0-fillna]" time="0.008" /><testcase classname="tests.apply.test_str" name="test_transform_groupby_kernel_frame[axis=0-ngroup]" time="0.003"><skipped type="pytest.xfail" message="ngroup not valid for NDFrame" /></testcase><testcase classname="tests.apply.test_str" name="test_transform_groupby_kernel_frame[axis=0-pct_change]" time="0.011" /><testcase classname="tests.apply.test_str" name="test_transform_groupby_kernel_frame[axis=0-rank]" time="0.010" /><testcase classname="tests.apply.test_str" name="test_transform_groupby_kernel_frame[axis=0-shift]" time="0.007" /><testcase classname="tests.apply.test_str" name="test_transform_groupby_kernel_frame[axis=1-bfill]" time="0.010" /><testcase classname="tests.apply.test_str" name="test_transform_groupby_kernel_frame[axis=1-cummax]" time="0.009" /><testcase classname="tests.apply.test_str" name="test_transform_groupby_kernel_frame[axis=1-cummin]" time="0.008" /><testcase classname="tests.apply.test_str" name="test_transform_groupby_kernel_frame[axis=1-cumprod]" time="0.007" /><testcase classname="tests.apply.test_str" name="test_transform_groupby_kernel_frame[axis=1-cumsum]" time="0.009" /><testcase classname="tests.apply.test_str" name="test_transform_groupby_kernel_frame[axis=1-diff]" time="0.011" /><testcase classname="tests.apply.test_str" name="test_transform_groupby_kernel_frame[axis=1-ffill]" time="0.012" /><testcase classname="tests.apply.test_str" name="test_transform_groupby_kernel_frame[axis=1-fillna]" time="0.015" /><testcase classname="tests.apply.test_str" name="test_transform_groupby_kernel_frame[axis=1-ngroup]" time="0.004"><skipped type="pytest.xfail" message="ngroup not valid for NDFrame" /></testcase><testcase classname="tests.apply.test_str" name="test_transform_groupby_kernel_frame[axis=1-pct_change]" time="0.017" /><testcase classname="tests.apply.test_str" name="test_transform_groupby_kernel_frame[axis=1-rank]" time="0.008" /><testcase classname="tests.apply.test_str" name="test_transform_groupby_kernel_frame[axis=1-shift]" time="0.006" /><testcase classname="tests.apply.test_str" name="test_transform_groupby_kernel_frame[axis='index'-bfill]" time="0.005" /><testcase classname="tests.apply.test_str" name="test_transform_groupby_kernel_frame[axis='index'-cummax]" time="0.005" /><testcase classname="tests.apply.test_str" name="test_transform_groupby_kernel_frame[axis='index'-cummin]" time="0.006" /><testcase classname="tests.apply.test_str" name="test_transform_groupby_kernel_frame[axis='index'-cumprod]" time="0.006" /><testcase classname="tests.apply.test_str" name="test_transform_groupby_kernel_frame[axis='index'-cumsum]" time="0.008" /><testcase classname="tests.apply.test_str" name="test_transform_groupby_kernel_frame[axis='index'-diff]" time="0.007" /><testcase classname="tests.apply.test_str" name="test_transform_groupby_kernel_frame[axis='index'-ffill]" time="0.007" /><testcase classname="tests.apply.test_str" name="test_transform_groupby_kernel_frame[axis='index'-fillna]" time="0.009" /><testcase classname="tests.apply.test_str" name="test_transform_groupby_kernel_frame[axis='index'-ngroup]" time="0.003"><skipped type="pytest.xfail" message="ngroup not valid for NDFrame" /></testcase><testcase classname="tests.apply.test_str" name="test_transform_groupby_kernel_frame[axis='index'-pct_change]" time="0.020" /><testcase classname="tests.apply.test_str" name="test_transform_groupby_kernel_frame[axis='index'-rank]" time="0.011" /><testcase classname="tests.apply.test_str" name="test_transform_groupby_kernel_frame[axis='index'-shift]" time="0.012" /><testcase classname="tests.apply.test_str" name="test_transform_groupby_kernel_frame[axis='columns'-bfill]" time="0.012" /><testcase classname="tests.apply.test_str" name="test_transform_groupby_kernel_frame[axis='columns'-cummax]" time="0.011" /><testcase classname="tests.apply.test_str" name="test_transform_groupby_kernel_frame[axis='columns'-cummin]" time="0.008" /><testcase classname="tests.apply.test_str" name="test_transform_groupby_kernel_frame[axis='columns'-cumprod]" time="0.009" /><testcase classname="tests.apply.test_str" name="test_transform_groupby_kernel_frame[axis='columns'-cumsum]" time="0.009" /><testcase classname="tests.apply.test_str" name="test_transform_groupby_kernel_frame[axis='columns'-diff]" time="0.007" /><testcase classname="tests.apply.test_str" name="test_transform_groupby_kernel_frame[axis='columns'-ffill]" time="0.011" /><testcase classname="tests.apply.test_str" name="test_transform_groupby_kernel_frame[axis='columns'-fillna]" time="0.014" /><testcase classname="tests.apply.test_str" name="test_transform_groupby_kernel_frame[axis='columns'-ngroup]" time="0.004"><skipped type="pytest.xfail" message="ngroup not valid for NDFrame" /></testcase><testcase classname="tests.apply.test_str" name="test_transform_groupby_kernel_frame[axis='columns'-pct_change]" time="0.017" /><testcase classname="tests.apply.test_str" name="test_transform_groupby_kernel_frame[axis='columns'-rank]" time="0.007" /><testcase classname="tests.apply.test_str" name="test_transform_groupby_kernel_frame[axis='columns'-shift]" time="0.005" /><testcase classname="tests.apply.test_str" name="test_transform_method_name[abs]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_transform_method_name[shift]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_transform_method_name[pct_change]" time="0.002" /><testcase classname="tests.apply.test_str" name="test_transform_method_name[cumsum]" time="0.001" /><testcase classname="tests.apply.test_str" name="test_transform_method_name[rank]" time="0.003" /><testcase classname="tests.arithmetic.test_array_ops" name="test_na_logical_op_2d" time="0.003" /><testcase classname="tests.arithmetic.test_array_ops" name="test_object_comparison_2d" time="0.001" /><testcase classname="tests.arithmetic.test_categorical.TestCategoricalComparisons" name="test_categorical_nan_equality" time="0.004" /><testcase classname="tests.arithmetic.test_categorical.TestCategoricalComparisons" name="test_categorical_tuple_equality" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_compare_zerodim[None-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_compare_zerodim[None-Series]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_compare_zerodim[None-DataFrame]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_compare_zerodim[None-array]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_compare_zerodim['UTC'-Index]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_compare_zerodim['UTC'-Series]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_compare_zerodim['UTC'-DataFrame]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_compare_zerodim['UTC'-array]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_compare_zerodim['US/Eastern'-Index]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_compare_zerodim['US/Eastern'-Series]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_compare_zerodim['US/Eastern'-DataFrame]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_compare_zerodim['US/Eastern'-array]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_compare_zerodim['Asia/Tokyo'-Index]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_compare_zerodim['Asia/Tokyo'-Series]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_compare_zerodim['Asia/Tokyo'-DataFrame]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_compare_zerodim['Asia/Tokyo'-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_compare_zerodim['dateutil/US/Pacific'-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_compare_zerodim['dateutil/US/Pacific'-Series]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_compare_zerodim['dateutil/US/Pacific'-DataFrame]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_compare_zerodim['dateutil/US/Pacific'-array]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_compare_zerodim['dateutil/Asia/Singapore'-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_compare_zerodim['dateutil/Asia/Singapore'-Series]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_compare_zerodim['dateutil/Asia/Singapore'-DataFrame]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_compare_zerodim['dateutil/Asia/Singapore'-array]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_compare_zerodim['+01:15'-Index]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_compare_zerodim['+01:15'-Series]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_compare_zerodim['+01:15'-DataFrame]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_compare_zerodim['+01:15'-array]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_compare_zerodim['-02:15'-Index]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_compare_zerodim['-02:15'-Series]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_compare_zerodim['-02:15'-DataFrame]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_compare_zerodim['-02:15'-array]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_compare_zerodim['UTC+01:15'-Index]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_compare_zerodim['UTC+01:15'-Series]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_compare_zerodim['UTC+01:15'-DataFrame]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_compare_zerodim['UTC+01:15'-array]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_compare_zerodim['UTC-02:15'-Index]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_compare_zerodim['UTC-02:15'-Series]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_compare_zerodim['UTC-02:15'-DataFrame]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_compare_zerodim['UTC-02:15'-array]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_compare_zerodim[tzutc()-Index]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_compare_zerodim[tzutc()-Series]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_compare_zerodim[tzutc()-DataFrame]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_compare_zerodim[tzutc()-array]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_compare_zerodim[tzlocal()-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_compare_zerodim[tzlocal()-Series]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_compare_zerodim[tzlocal()-DataFrame]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_compare_zerodim[tzlocal()-array]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_compare_zerodim[pytz.FixedOffset(300)-Index]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_compare_zerodim[pytz.FixedOffset(300)-Series]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_compare_zerodim[pytz.FixedOffset(300)-DataFrame]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_compare_zerodim[pytz.FixedOffset(300)-array]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_compare_zerodim[&lt;UTC&gt;-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_compare_zerodim[&lt;UTC&gt;-Series]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_compare_zerodim[&lt;UTC&gt;-DataFrame]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_compare_zerodim[&lt;UTC&gt;-array]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_compare_zerodim[pytz.FixedOffset(-300)-Index]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_compare_zerodim[pytz.FixedOffset(-300)-Series]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_compare_zerodim[pytz.FixedOffset(-300)-DataFrame]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_compare_zerodim[pytz.FixedOffset(-300)-array]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_compare_zerodim[datetime.timezone.utc-Index]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_compare_zerodim[datetime.timezone.utc-Series]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_compare_zerodim[datetime.timezone.utc-DataFrame]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_compare_zerodim[datetime.timezone.utc-array]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_compare_zerodim[datetime.timezone(datetime.timedelta(seconds=3600))-Index]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_compare_zerodim[datetime.timezone(datetime.timedelta(seconds=3600))-Series]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_compare_zerodim[datetime.timezone(datetime.timedelta(seconds=3600))-DataFrame]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_compare_zerodim[datetime.timezone(datetime.timedelta(seconds=3600))-array]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_compare_zerodim[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Index]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_compare_zerodim[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Series]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_compare_zerodim[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-DataFrame]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_compare_zerodim[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-array]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_compare_zerodim[zoneinfo.ZoneInfo(key='US/Pacific')-Index]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_compare_zerodim[zoneinfo.ZoneInfo(key='US/Pacific')-Series]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_compare_zerodim[zoneinfo.ZoneInfo(key='US/Pacific')-DataFrame]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_compare_zerodim[zoneinfo.ZoneInfo(key='US/Pacific')-array]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_compare_zerodim[zoneinfo.ZoneInfo(key='UTC')-Index]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_compare_zerodim[zoneinfo.ZoneInfo(key='UTC')-Series]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_compare_zerodim[zoneinfo.ZoneInfo(key='UTC')-DataFrame]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_compare_zerodim[zoneinfo.ZoneInfo(key='UTC')-array]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[None-Index-foo]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[None-Index--1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[None-Index-99]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[None-Index-4.0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[None-Index-other4]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[None-Index-other5]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[None-Index-other6]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[None-Index-None]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[None-Index-nan]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[None-Series-foo]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[None-Series--1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[None-Series-99]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[None-Series-4.0]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[None-Series-other4]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[None-Series-other5]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[None-Series-other6]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[None-Series-None]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[None-Series-nan]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[None-DataFrame-foo]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[None-DataFrame--1]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[None-DataFrame-99]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[None-DataFrame-4.0]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[None-DataFrame-other4]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[None-DataFrame-other5]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[None-DataFrame-other6]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[None-DataFrame-None]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[None-DataFrame-nan]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[None-array-foo]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[None-array--1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[None-array-99]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[None-array-4.0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[None-array-other4]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[None-array-other5]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[None-array-other6]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[None-array-None]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[None-array-nan]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC'-Index-foo]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC'-Index--1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC'-Index-99]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC'-Index-4.0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC'-Index-other4]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC'-Index-other5]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC'-Index-other6]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC'-Index-None]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC'-Index-nan]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC'-Series-foo]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC'-Series--1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC'-Series-99]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC'-Series-4.0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC'-Series-other4]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC'-Series-other5]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC'-Series-other6]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC'-Series-None]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC'-Series-nan]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC'-DataFrame-foo]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC'-DataFrame--1]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC'-DataFrame-99]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC'-DataFrame-4.0]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC'-DataFrame-other4]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC'-DataFrame-other5]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC'-DataFrame-other6]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC'-DataFrame-None]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC'-DataFrame-nan]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC'-array-foo]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC'-array--1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC'-array-99]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC'-array-4.0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC'-array-other4]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC'-array-other5]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC'-array-other6]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC'-array-None]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC'-array-nan]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['US/Eastern'-Index-foo]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['US/Eastern'-Index--1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['US/Eastern'-Index-99]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['US/Eastern'-Index-4.0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['US/Eastern'-Index-other4]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['US/Eastern'-Index-other5]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['US/Eastern'-Index-other6]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['US/Eastern'-Index-None]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['US/Eastern'-Index-nan]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['US/Eastern'-Series-foo]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['US/Eastern'-Series--1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['US/Eastern'-Series-99]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['US/Eastern'-Series-4.0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['US/Eastern'-Series-other4]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['US/Eastern'-Series-other5]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['US/Eastern'-Series-other6]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['US/Eastern'-Series-None]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['US/Eastern'-Series-nan]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['US/Eastern'-DataFrame-foo]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['US/Eastern'-DataFrame--1]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['US/Eastern'-DataFrame-99]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['US/Eastern'-DataFrame-4.0]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['US/Eastern'-DataFrame-other4]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['US/Eastern'-DataFrame-other5]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['US/Eastern'-DataFrame-other6]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['US/Eastern'-DataFrame-None]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['US/Eastern'-DataFrame-nan]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['US/Eastern'-array-foo]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['US/Eastern'-array--1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['US/Eastern'-array-99]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['US/Eastern'-array-4.0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['US/Eastern'-array-other4]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['US/Eastern'-array-other5]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['US/Eastern'-array-other6]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['US/Eastern'-array-None]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['US/Eastern'-array-nan]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['Asia/Tokyo'-Index-foo]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['Asia/Tokyo'-Index--1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['Asia/Tokyo'-Index-99]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['Asia/Tokyo'-Index-4.0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['Asia/Tokyo'-Index-other4]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['Asia/Tokyo'-Index-other5]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['Asia/Tokyo'-Index-other6]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['Asia/Tokyo'-Index-None]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['Asia/Tokyo'-Index-nan]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['Asia/Tokyo'-Series-foo]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['Asia/Tokyo'-Series--1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['Asia/Tokyo'-Series-99]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['Asia/Tokyo'-Series-4.0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['Asia/Tokyo'-Series-other4]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['Asia/Tokyo'-Series-other5]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['Asia/Tokyo'-Series-other6]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['Asia/Tokyo'-Series-None]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['Asia/Tokyo'-Series-nan]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['Asia/Tokyo'-DataFrame-foo]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['Asia/Tokyo'-DataFrame--1]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['Asia/Tokyo'-DataFrame-99]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['Asia/Tokyo'-DataFrame-4.0]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['Asia/Tokyo'-DataFrame-other4]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['Asia/Tokyo'-DataFrame-other5]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['Asia/Tokyo'-DataFrame-other6]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['Asia/Tokyo'-DataFrame-None]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['Asia/Tokyo'-DataFrame-nan]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['Asia/Tokyo'-array-foo]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['Asia/Tokyo'-array--1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['Asia/Tokyo'-array-99]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['Asia/Tokyo'-array-4.0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['Asia/Tokyo'-array-other4]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['Asia/Tokyo'-array-other5]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['Asia/Tokyo'-array-other6]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['Asia/Tokyo'-array-None]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['Asia/Tokyo'-array-nan]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['dateutil/US/Pacific'-Index-foo]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['dateutil/US/Pacific'-Index--1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['dateutil/US/Pacific'-Index-99]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['dateutil/US/Pacific'-Index-4.0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['dateutil/US/Pacific'-Index-other4]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['dateutil/US/Pacific'-Index-other5]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['dateutil/US/Pacific'-Index-other6]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['dateutil/US/Pacific'-Index-None]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['dateutil/US/Pacific'-Index-nan]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['dateutil/US/Pacific'-Series-foo]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['dateutil/US/Pacific'-Series--1]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['dateutil/US/Pacific'-Series-99]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['dateutil/US/Pacific'-Series-4.0]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['dateutil/US/Pacific'-Series-other4]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['dateutil/US/Pacific'-Series-other5]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['dateutil/US/Pacific'-Series-other6]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['dateutil/US/Pacific'-Series-None]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['dateutil/US/Pacific'-Series-nan]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['dateutil/US/Pacific'-DataFrame-foo]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['dateutil/US/Pacific'-DataFrame--1]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['dateutil/US/Pacific'-DataFrame-99]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['dateutil/US/Pacific'-DataFrame-4.0]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['dateutil/US/Pacific'-DataFrame-other4]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['dateutil/US/Pacific'-DataFrame-other5]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['dateutil/US/Pacific'-DataFrame-other6]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['dateutil/US/Pacific'-DataFrame-None]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['dateutil/US/Pacific'-DataFrame-nan]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['dateutil/US/Pacific'-array-foo]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['dateutil/US/Pacific'-array--1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['dateutil/US/Pacific'-array-99]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['dateutil/US/Pacific'-array-4.0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['dateutil/US/Pacific'-array-other4]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['dateutil/US/Pacific'-array-other5]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['dateutil/US/Pacific'-array-other6]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['dateutil/US/Pacific'-array-None]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['dateutil/US/Pacific'-array-nan]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['dateutil/Asia/Singapore'-Index-foo]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['dateutil/Asia/Singapore'-Index--1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['dateutil/Asia/Singapore'-Index-99]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['dateutil/Asia/Singapore'-Index-4.0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['dateutil/Asia/Singapore'-Index-other4]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['dateutil/Asia/Singapore'-Index-other5]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['dateutil/Asia/Singapore'-Index-other6]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['dateutil/Asia/Singapore'-Index-None]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['dateutil/Asia/Singapore'-Index-nan]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['dateutil/Asia/Singapore'-Series-foo]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['dateutil/Asia/Singapore'-Series--1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['dateutil/Asia/Singapore'-Series-99]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['dateutil/Asia/Singapore'-Series-4.0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['dateutil/Asia/Singapore'-Series-other4]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['dateutil/Asia/Singapore'-Series-other5]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['dateutil/Asia/Singapore'-Series-other6]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['dateutil/Asia/Singapore'-Series-None]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['dateutil/Asia/Singapore'-Series-nan]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['dateutil/Asia/Singapore'-DataFrame-foo]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['dateutil/Asia/Singapore'-DataFrame--1]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['dateutil/Asia/Singapore'-DataFrame-99]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['dateutil/Asia/Singapore'-DataFrame-4.0]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['dateutil/Asia/Singapore'-DataFrame-other4]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['dateutil/Asia/Singapore'-DataFrame-other5]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['dateutil/Asia/Singapore'-DataFrame-other6]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['dateutil/Asia/Singapore'-DataFrame-None]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['dateutil/Asia/Singapore'-DataFrame-nan]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['dateutil/Asia/Singapore'-array-foo]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['dateutil/Asia/Singapore'-array--1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['dateutil/Asia/Singapore'-array-99]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['dateutil/Asia/Singapore'-array-4.0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['dateutil/Asia/Singapore'-array-other4]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['dateutil/Asia/Singapore'-array-other5]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['dateutil/Asia/Singapore'-array-other6]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['dateutil/Asia/Singapore'-array-None]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['dateutil/Asia/Singapore'-array-nan]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['+01:15'-Index-foo]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['+01:15'-Index--1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['+01:15'-Index-99]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['+01:15'-Index-4.0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['+01:15'-Index-other4]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['+01:15'-Index-other5]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['+01:15'-Index-other6]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['+01:15'-Index-None]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['+01:15'-Index-nan]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['+01:15'-Series-foo]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['+01:15'-Series--1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['+01:15'-Series-99]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['+01:15'-Series-4.0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['+01:15'-Series-other4]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['+01:15'-Series-other5]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['+01:15'-Series-other6]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['+01:15'-Series-None]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['+01:15'-Series-nan]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['+01:15'-DataFrame-foo]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['+01:15'-DataFrame--1]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['+01:15'-DataFrame-99]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['+01:15'-DataFrame-4.0]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['+01:15'-DataFrame-other4]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['+01:15'-DataFrame-other5]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['+01:15'-DataFrame-other6]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['+01:15'-DataFrame-None]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['+01:15'-DataFrame-nan]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['+01:15'-array-foo]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['+01:15'-array--1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['+01:15'-array-99]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['+01:15'-array-4.0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['+01:15'-array-other4]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['+01:15'-array-other5]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['+01:15'-array-other6]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['+01:15'-array-None]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['+01:15'-array-nan]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['-02:15'-Index-foo]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['-02:15'-Index--1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['-02:15'-Index-99]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['-02:15'-Index-4.0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['-02:15'-Index-other4]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['-02:15'-Index-other5]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['-02:15'-Index-other6]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['-02:15'-Index-None]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['-02:15'-Index-nan]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['-02:15'-Series-foo]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['-02:15'-Series--1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['-02:15'-Series-99]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['-02:15'-Series-4.0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['-02:15'-Series-other4]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['-02:15'-Series-other5]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['-02:15'-Series-other6]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['-02:15'-Series-None]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['-02:15'-Series-nan]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['-02:15'-DataFrame-foo]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['-02:15'-DataFrame--1]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['-02:15'-DataFrame-99]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['-02:15'-DataFrame-4.0]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['-02:15'-DataFrame-other4]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['-02:15'-DataFrame-other5]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['-02:15'-DataFrame-other6]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['-02:15'-DataFrame-None]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['-02:15'-DataFrame-nan]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['-02:15'-array-foo]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['-02:15'-array--1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['-02:15'-array-99]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['-02:15'-array-4.0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['-02:15'-array-other4]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['-02:15'-array-other5]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['-02:15'-array-other6]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['-02:15'-array-None]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['-02:15'-array-nan]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC+01:15'-Index-foo]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC+01:15'-Index--1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC+01:15'-Index-99]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC+01:15'-Index-4.0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC+01:15'-Index-other4]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC+01:15'-Index-other5]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC+01:15'-Index-other6]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC+01:15'-Index-None]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC+01:15'-Index-nan]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC+01:15'-Series-foo]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC+01:15'-Series--1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC+01:15'-Series-99]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC+01:15'-Series-4.0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC+01:15'-Series-other4]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC+01:15'-Series-other5]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC+01:15'-Series-other6]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC+01:15'-Series-None]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC+01:15'-Series-nan]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC+01:15'-DataFrame-foo]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC+01:15'-DataFrame--1]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC+01:15'-DataFrame-99]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC+01:15'-DataFrame-4.0]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC+01:15'-DataFrame-other4]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC+01:15'-DataFrame-other5]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC+01:15'-DataFrame-other6]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC+01:15'-DataFrame-None]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC+01:15'-DataFrame-nan]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC+01:15'-array-foo]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC+01:15'-array--1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC+01:15'-array-99]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC+01:15'-array-4.0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC+01:15'-array-other4]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC+01:15'-array-other5]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC+01:15'-array-other6]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC+01:15'-array-None]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC+01:15'-array-nan]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC-02:15'-Index-foo]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC-02:15'-Index--1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC-02:15'-Index-99]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC-02:15'-Index-4.0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC-02:15'-Index-other4]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC-02:15'-Index-other5]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC-02:15'-Index-other6]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC-02:15'-Index-None]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC-02:15'-Index-nan]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC-02:15'-Series-foo]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC-02:15'-Series--1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC-02:15'-Series-99]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC-02:15'-Series-4.0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC-02:15'-Series-other4]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC-02:15'-Series-other5]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC-02:15'-Series-other6]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC-02:15'-Series-None]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC-02:15'-Series-nan]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC-02:15'-DataFrame-foo]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC-02:15'-DataFrame--1]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC-02:15'-DataFrame-99]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC-02:15'-DataFrame-4.0]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC-02:15'-DataFrame-other4]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC-02:15'-DataFrame-other5]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC-02:15'-DataFrame-other6]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC-02:15'-DataFrame-None]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC-02:15'-DataFrame-nan]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC-02:15'-array-foo]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC-02:15'-array--1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC-02:15'-array-99]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC-02:15'-array-4.0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC-02:15'-array-other4]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC-02:15'-array-other5]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC-02:15'-array-other6]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC-02:15'-array-None]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid['UTC-02:15'-array-nan]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[tzutc()-Index-foo]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[tzutc()-Index--1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[tzutc()-Index-99]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[tzutc()-Index-4.0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[tzutc()-Index-other4]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[tzutc()-Index-other5]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[tzutc()-Index-other6]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[tzutc()-Index-None]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[tzutc()-Index-nan]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[tzutc()-Series-foo]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[tzutc()-Series--1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[tzutc()-Series-99]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[tzutc()-Series-4.0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[tzutc()-Series-other4]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[tzutc()-Series-other5]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[tzutc()-Series-other6]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[tzutc()-Series-None]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[tzutc()-Series-nan]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[tzutc()-DataFrame-foo]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[tzutc()-DataFrame--1]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[tzutc()-DataFrame-99]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[tzutc()-DataFrame-4.0]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[tzutc()-DataFrame-other4]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[tzutc()-DataFrame-other5]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[tzutc()-DataFrame-other6]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[tzutc()-DataFrame-None]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[tzutc()-DataFrame-nan]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[tzutc()-array-foo]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[tzutc()-array--1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[tzutc()-array-99]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[tzutc()-array-4.0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[tzutc()-array-other4]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[tzutc()-array-other5]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[tzutc()-array-other6]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[tzutc()-array-None]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[tzutc()-array-nan]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[tzlocal()-Index-foo]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[tzlocal()-Index--1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[tzlocal()-Index-99]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[tzlocal()-Index-4.0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[tzlocal()-Index-other4]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[tzlocal()-Index-other5]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[tzlocal()-Index-other6]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[tzlocal()-Index-None]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[tzlocal()-Index-nan]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[tzlocal()-Series-foo]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[tzlocal()-Series--1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[tzlocal()-Series-99]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[tzlocal()-Series-4.0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[tzlocal()-Series-other4]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[tzlocal()-Series-other5]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[tzlocal()-Series-other6]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[tzlocal()-Series-None]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[tzlocal()-Series-nan]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[tzlocal()-DataFrame-foo]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[tzlocal()-DataFrame--1]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[tzlocal()-DataFrame-99]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[tzlocal()-DataFrame-4.0]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[tzlocal()-DataFrame-other4]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[tzlocal()-DataFrame-other5]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[tzlocal()-DataFrame-other6]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[tzlocal()-DataFrame-None]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[tzlocal()-DataFrame-nan]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[tzlocal()-array-foo]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[tzlocal()-array--1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[tzlocal()-array-99]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[tzlocal()-array-4.0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[tzlocal()-array-other4]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[tzlocal()-array-other5]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[tzlocal()-array-other6]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[tzlocal()-array-None]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[tzlocal()-array-nan]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[pytz.FixedOffset(300)-Index-foo]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[pytz.FixedOffset(300)-Index--1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[pytz.FixedOffset(300)-Index-99]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[pytz.FixedOffset(300)-Index-4.0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[pytz.FixedOffset(300)-Index-other4]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[pytz.FixedOffset(300)-Index-other5]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[pytz.FixedOffset(300)-Index-other6]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[pytz.FixedOffset(300)-Index-None]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[pytz.FixedOffset(300)-Index-nan]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[pytz.FixedOffset(300)-Series-foo]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[pytz.FixedOffset(300)-Series--1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[pytz.FixedOffset(300)-Series-99]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[pytz.FixedOffset(300)-Series-4.0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[pytz.FixedOffset(300)-Series-other4]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[pytz.FixedOffset(300)-Series-other5]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[pytz.FixedOffset(300)-Series-other6]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[pytz.FixedOffset(300)-Series-None]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[pytz.FixedOffset(300)-Series-nan]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[pytz.FixedOffset(300)-DataFrame-foo]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[pytz.FixedOffset(300)-DataFrame--1]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[pytz.FixedOffset(300)-DataFrame-99]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[pytz.FixedOffset(300)-DataFrame-4.0]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[pytz.FixedOffset(300)-DataFrame-other4]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[pytz.FixedOffset(300)-DataFrame-other5]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[pytz.FixedOffset(300)-DataFrame-other6]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[pytz.FixedOffset(300)-DataFrame-None]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[pytz.FixedOffset(300)-DataFrame-nan]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[pytz.FixedOffset(300)-array-foo]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[pytz.FixedOffset(300)-array--1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[pytz.FixedOffset(300)-array-99]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[pytz.FixedOffset(300)-array-4.0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[pytz.FixedOffset(300)-array-other4]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[pytz.FixedOffset(300)-array-other5]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[pytz.FixedOffset(300)-array-other6]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[pytz.FixedOffset(300)-array-None]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[pytz.FixedOffset(300)-array-nan]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[&lt;UTC&gt;-Index-foo]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[&lt;UTC&gt;-Index--1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[&lt;UTC&gt;-Index-99]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[&lt;UTC&gt;-Index-4.0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[&lt;UTC&gt;-Index-other4]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[&lt;UTC&gt;-Index-other5]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[&lt;UTC&gt;-Index-other6]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[&lt;UTC&gt;-Index-None]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[&lt;UTC&gt;-Index-nan]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[&lt;UTC&gt;-Series-foo]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[&lt;UTC&gt;-Series--1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[&lt;UTC&gt;-Series-99]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[&lt;UTC&gt;-Series-4.0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[&lt;UTC&gt;-Series-other4]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[&lt;UTC&gt;-Series-other5]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[&lt;UTC&gt;-Series-other6]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[&lt;UTC&gt;-Series-None]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[&lt;UTC&gt;-Series-nan]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[&lt;UTC&gt;-DataFrame-foo]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[&lt;UTC&gt;-DataFrame--1]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[&lt;UTC&gt;-DataFrame-99]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[&lt;UTC&gt;-DataFrame-4.0]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[&lt;UTC&gt;-DataFrame-other4]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[&lt;UTC&gt;-DataFrame-other5]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[&lt;UTC&gt;-DataFrame-other6]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[&lt;UTC&gt;-DataFrame-None]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[&lt;UTC&gt;-DataFrame-nan]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[&lt;UTC&gt;-array-foo]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[&lt;UTC&gt;-array--1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[&lt;UTC&gt;-array-99]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[&lt;UTC&gt;-array-4.0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[&lt;UTC&gt;-array-other4]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[&lt;UTC&gt;-array-other5]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[&lt;UTC&gt;-array-other6]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[&lt;UTC&gt;-array-None]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[&lt;UTC&gt;-array-nan]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[pytz.FixedOffset(-300)-Index-foo]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[pytz.FixedOffset(-300)-Index--1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[pytz.FixedOffset(-300)-Index-99]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[pytz.FixedOffset(-300)-Index-4.0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[pytz.FixedOffset(-300)-Index-other4]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[pytz.FixedOffset(-300)-Index-other5]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[pytz.FixedOffset(-300)-Index-other6]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[pytz.FixedOffset(-300)-Index-None]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[pytz.FixedOffset(-300)-Index-nan]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[pytz.FixedOffset(-300)-Series-foo]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[pytz.FixedOffset(-300)-Series--1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[pytz.FixedOffset(-300)-Series-99]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[pytz.FixedOffset(-300)-Series-4.0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[pytz.FixedOffset(-300)-Series-other4]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[pytz.FixedOffset(-300)-Series-other5]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[pytz.FixedOffset(-300)-Series-other6]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[pytz.FixedOffset(-300)-Series-None]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[pytz.FixedOffset(-300)-Series-nan]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[pytz.FixedOffset(-300)-DataFrame-foo]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[pytz.FixedOffset(-300)-DataFrame--1]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[pytz.FixedOffset(-300)-DataFrame-99]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[pytz.FixedOffset(-300)-DataFrame-4.0]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[pytz.FixedOffset(-300)-DataFrame-other4]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[pytz.FixedOffset(-300)-DataFrame-other5]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[pytz.FixedOffset(-300)-DataFrame-other6]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[pytz.FixedOffset(-300)-DataFrame-None]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[pytz.FixedOffset(-300)-DataFrame-nan]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[pytz.FixedOffset(-300)-array-foo]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[pytz.FixedOffset(-300)-array--1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[pytz.FixedOffset(-300)-array-99]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[pytz.FixedOffset(-300)-array-4.0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[pytz.FixedOffset(-300)-array-other4]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[pytz.FixedOffset(-300)-array-other5]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[pytz.FixedOffset(-300)-array-other6]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[pytz.FixedOffset(-300)-array-None]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[pytz.FixedOffset(-300)-array-nan]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone.utc-Index-foo]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone.utc-Index--1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone.utc-Index-99]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone.utc-Index-4.0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone.utc-Index-other4]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone.utc-Index-other5]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone.utc-Index-other6]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone.utc-Index-None]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone.utc-Index-nan]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone.utc-Series-foo]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone.utc-Series--1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone.utc-Series-99]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone.utc-Series-4.0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone.utc-Series-other4]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone.utc-Series-other5]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone.utc-Series-other6]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone.utc-Series-None]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone.utc-Series-nan]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone.utc-DataFrame-foo]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone.utc-DataFrame--1]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone.utc-DataFrame-99]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone.utc-DataFrame-4.0]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone.utc-DataFrame-other4]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone.utc-DataFrame-other5]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone.utc-DataFrame-other6]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone.utc-DataFrame-None]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone.utc-DataFrame-nan]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone.utc-array-foo]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone.utc-array--1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone.utc-array-99]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone.utc-array-4.0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone.utc-array-other4]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone.utc-array-other5]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone.utc-array-other6]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone.utc-array-None]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone.utc-array-nan]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone(datetime.timedelta(seconds=3600))-Index-foo]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone(datetime.timedelta(seconds=3600))-Index--1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone(datetime.timedelta(seconds=3600))-Index-99]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone(datetime.timedelta(seconds=3600))-Index-4.0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone(datetime.timedelta(seconds=3600))-Index-other4]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone(datetime.timedelta(seconds=3600))-Index-other5]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone(datetime.timedelta(seconds=3600))-Index-other6]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone(datetime.timedelta(seconds=3600))-Index-None]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone(datetime.timedelta(seconds=3600))-Index-nan]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone(datetime.timedelta(seconds=3600))-Series-foo]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone(datetime.timedelta(seconds=3600))-Series--1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone(datetime.timedelta(seconds=3600))-Series-99]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone(datetime.timedelta(seconds=3600))-Series-4.0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone(datetime.timedelta(seconds=3600))-Series-other4]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone(datetime.timedelta(seconds=3600))-Series-other5]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone(datetime.timedelta(seconds=3600))-Series-other6]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone(datetime.timedelta(seconds=3600))-Series-None]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone(datetime.timedelta(seconds=3600))-Series-nan]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone(datetime.timedelta(seconds=3600))-DataFrame-foo]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone(datetime.timedelta(seconds=3600))-DataFrame--1]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone(datetime.timedelta(seconds=3600))-DataFrame-99]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone(datetime.timedelta(seconds=3600))-DataFrame-4.0]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone(datetime.timedelta(seconds=3600))-DataFrame-other4]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone(datetime.timedelta(seconds=3600))-DataFrame-other5]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone(datetime.timedelta(seconds=3600))-DataFrame-other6]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone(datetime.timedelta(seconds=3600))-DataFrame-None]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone(datetime.timedelta(seconds=3600))-DataFrame-nan]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone(datetime.timedelta(seconds=3600))-array-foo]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone(datetime.timedelta(seconds=3600))-array--1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone(datetime.timedelta(seconds=3600))-array-99]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone(datetime.timedelta(seconds=3600))-array-4.0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone(datetime.timedelta(seconds=3600))-array-other4]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone(datetime.timedelta(seconds=3600))-array-other5]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone(datetime.timedelta(seconds=3600))-array-other6]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone(datetime.timedelta(seconds=3600))-array-None]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone(datetime.timedelta(seconds=3600))-array-nan]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Index-foo]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Index--1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Index-99]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Index-4.0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Index-other4]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Index-other5]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Index-other6]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Index-None]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Index-nan]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Series-foo]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Series--1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Series-99]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Series-4.0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Series-other4]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Series-other5]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Series-other6]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Series-None]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Series-nan]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-DataFrame-foo]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-DataFrame--1]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-DataFrame-99]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-DataFrame-4.0]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-DataFrame-other4]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-DataFrame-other5]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-DataFrame-other6]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-DataFrame-None]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-DataFrame-nan]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-array-foo]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-array--1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-array-99]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-array-4.0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-array-other4]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-array-other5]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-array-other6]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-array-None]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-array-nan]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[zoneinfo.ZoneInfo(key='US/Pacific')-Index-foo]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[zoneinfo.ZoneInfo(key='US/Pacific')-Index--1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[zoneinfo.ZoneInfo(key='US/Pacific')-Index-99]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[zoneinfo.ZoneInfo(key='US/Pacific')-Index-4.0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[zoneinfo.ZoneInfo(key='US/Pacific')-Index-other4]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[zoneinfo.ZoneInfo(key='US/Pacific')-Index-other5]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[zoneinfo.ZoneInfo(key='US/Pacific')-Index-other6]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[zoneinfo.ZoneInfo(key='US/Pacific')-Index-None]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[zoneinfo.ZoneInfo(key='US/Pacific')-Index-nan]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[zoneinfo.ZoneInfo(key='US/Pacific')-Series-foo]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[zoneinfo.ZoneInfo(key='US/Pacific')-Series--1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[zoneinfo.ZoneInfo(key='US/Pacific')-Series-99]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[zoneinfo.ZoneInfo(key='US/Pacific')-Series-4.0]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[zoneinfo.ZoneInfo(key='US/Pacific')-Series-other4]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[zoneinfo.ZoneInfo(key='US/Pacific')-Series-other5]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[zoneinfo.ZoneInfo(key='US/Pacific')-Series-other6]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[zoneinfo.ZoneInfo(key='US/Pacific')-Series-None]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[zoneinfo.ZoneInfo(key='US/Pacific')-Series-nan]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[zoneinfo.ZoneInfo(key='US/Pacific')-DataFrame-foo]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[zoneinfo.ZoneInfo(key='US/Pacific')-DataFrame--1]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[zoneinfo.ZoneInfo(key='US/Pacific')-DataFrame-99]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[zoneinfo.ZoneInfo(key='US/Pacific')-DataFrame-4.0]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[zoneinfo.ZoneInfo(key='US/Pacific')-DataFrame-other4]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[zoneinfo.ZoneInfo(key='US/Pacific')-DataFrame-other5]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[zoneinfo.ZoneInfo(key='US/Pacific')-DataFrame-other6]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[zoneinfo.ZoneInfo(key='US/Pacific')-DataFrame-None]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[zoneinfo.ZoneInfo(key='US/Pacific')-DataFrame-nan]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[zoneinfo.ZoneInfo(key='US/Pacific')-array-foo]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[zoneinfo.ZoneInfo(key='US/Pacific')-array--1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[zoneinfo.ZoneInfo(key='US/Pacific')-array-99]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[zoneinfo.ZoneInfo(key='US/Pacific')-array-4.0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[zoneinfo.ZoneInfo(key='US/Pacific')-array-other4]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[zoneinfo.ZoneInfo(key='US/Pacific')-array-other5]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[zoneinfo.ZoneInfo(key='US/Pacific')-array-other6]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[zoneinfo.ZoneInfo(key='US/Pacific')-array-None]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[zoneinfo.ZoneInfo(key='US/Pacific')-array-nan]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[zoneinfo.ZoneInfo(key='UTC')-Index-foo]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[zoneinfo.ZoneInfo(key='UTC')-Index--1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[zoneinfo.ZoneInfo(key='UTC')-Index-99]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[zoneinfo.ZoneInfo(key='UTC')-Index-4.0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[zoneinfo.ZoneInfo(key='UTC')-Index-other4]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[zoneinfo.ZoneInfo(key='UTC')-Index-other5]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[zoneinfo.ZoneInfo(key='UTC')-Index-other6]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[zoneinfo.ZoneInfo(key='UTC')-Index-None]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[zoneinfo.ZoneInfo(key='UTC')-Index-nan]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[zoneinfo.ZoneInfo(key='UTC')-Series-foo]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[zoneinfo.ZoneInfo(key='UTC')-Series--1]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[zoneinfo.ZoneInfo(key='UTC')-Series-99]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[zoneinfo.ZoneInfo(key='UTC')-Series-4.0]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[zoneinfo.ZoneInfo(key='UTC')-Series-other4]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[zoneinfo.ZoneInfo(key='UTC')-Series-other5]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[zoneinfo.ZoneInfo(key='UTC')-Series-other6]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[zoneinfo.ZoneInfo(key='UTC')-Series-None]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[zoneinfo.ZoneInfo(key='UTC')-Series-nan]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[zoneinfo.ZoneInfo(key='UTC')-DataFrame-foo]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[zoneinfo.ZoneInfo(key='UTC')-DataFrame--1]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[zoneinfo.ZoneInfo(key='UTC')-DataFrame-99]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[zoneinfo.ZoneInfo(key='UTC')-DataFrame-4.0]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[zoneinfo.ZoneInfo(key='UTC')-DataFrame-other4]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[zoneinfo.ZoneInfo(key='UTC')-DataFrame-other5]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[zoneinfo.ZoneInfo(key='UTC')-DataFrame-other6]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[zoneinfo.ZoneInfo(key='UTC')-DataFrame-None]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[zoneinfo.ZoneInfo(key='UTC')-DataFrame-nan]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[zoneinfo.ZoneInfo(key='UTC')-array-foo]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[zoneinfo.ZoneInfo(key='UTC')-array--1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[zoneinfo.ZoneInfo(key='UTC')-array-99]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[zoneinfo.ZoneInfo(key='UTC')-array-4.0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[zoneinfo.ZoneInfo(key='UTC')-array-other4]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[zoneinfo.ZoneInfo(key='UTC')-array-other5]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[zoneinfo.ZoneInfo(key='UTC')-array-other6]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[zoneinfo.ZoneInfo(key='UTC')-array-None]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_scalar_invalid[zoneinfo.ZoneInfo(key='UTC')-array-nan]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[None-Index-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[None-Index-other1]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[None-Index-other2]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[None-Index-other3]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[None-Index-other4]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[None-Index-other5]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[None-Index-other6]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[None-Index-other7]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[None-Index-other8]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[None-Index-other9]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[None-Series-other0]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[None-Series-other1]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[None-Series-other2]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[None-Series-other3]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[None-Series-other4]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[None-Series-other5]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[None-Series-other6]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[None-Series-other7]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[None-Series-other8]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[None-Series-other9]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[None-DataFrame-other0]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[None-DataFrame-other1]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[None-DataFrame-other2]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[None-DataFrame-other3]" time="0.018" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[None-DataFrame-other4]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[None-DataFrame-other5]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[None-DataFrame-other6]" time="0.020" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[None-DataFrame-other7]" time="0.020" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[None-DataFrame-other8]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[None-DataFrame-other9]" time="0.018" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[None-array-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[None-array-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[None-array-other2]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[None-array-other3]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[None-array-other4]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[None-array-other5]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[None-array-other6]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[None-array-other7]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[None-array-other8]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[None-array-other9]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC'-Index-other0]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC'-Index-other1]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC'-Index-other2]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC'-Index-other3]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC'-Index-other4]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC'-Index-other5]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC'-Index-other6]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC'-Index-other7]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC'-Index-other8]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC'-Index-other9]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC'-Series-other0]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC'-Series-other1]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC'-Series-other2]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC'-Series-other3]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC'-Series-other4]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC'-Series-other5]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC'-Series-other6]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC'-Series-other7]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC'-Series-other8]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC'-Series-other9]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC'-DataFrame-other0]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC'-DataFrame-other1]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC'-DataFrame-other2]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC'-DataFrame-other3]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC'-DataFrame-other4]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC'-DataFrame-other5]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC'-DataFrame-other6]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC'-DataFrame-other7]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC'-DataFrame-other8]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC'-DataFrame-other9]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC'-array-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC'-array-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC'-array-other2]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC'-array-other3]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC'-array-other4]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC'-array-other5]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC'-array-other6]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC'-array-other7]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC'-array-other8]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC'-array-other9]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['US/Eastern'-Index-other0]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['US/Eastern'-Index-other1]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['US/Eastern'-Index-other2]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['US/Eastern'-Index-other3]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['US/Eastern'-Index-other4]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['US/Eastern'-Index-other5]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['US/Eastern'-Index-other6]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['US/Eastern'-Index-other7]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['US/Eastern'-Index-other8]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['US/Eastern'-Index-other9]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['US/Eastern'-Series-other0]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['US/Eastern'-Series-other1]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['US/Eastern'-Series-other2]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['US/Eastern'-Series-other3]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['US/Eastern'-Series-other4]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['US/Eastern'-Series-other5]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['US/Eastern'-Series-other6]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['US/Eastern'-Series-other7]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['US/Eastern'-Series-other8]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['US/Eastern'-Series-other9]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['US/Eastern'-DataFrame-other0]" time="0.019" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['US/Eastern'-DataFrame-other1]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['US/Eastern'-DataFrame-other2]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['US/Eastern'-DataFrame-other3]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['US/Eastern'-DataFrame-other4]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['US/Eastern'-DataFrame-other5]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['US/Eastern'-DataFrame-other6]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['US/Eastern'-DataFrame-other7]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['US/Eastern'-DataFrame-other8]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['US/Eastern'-DataFrame-other9]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['US/Eastern'-array-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['US/Eastern'-array-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['US/Eastern'-array-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['US/Eastern'-array-other3]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['US/Eastern'-array-other4]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['US/Eastern'-array-other5]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['US/Eastern'-array-other6]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['US/Eastern'-array-other7]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['US/Eastern'-array-other8]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['US/Eastern'-array-other9]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['Asia/Tokyo'-Index-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['Asia/Tokyo'-Index-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['Asia/Tokyo'-Index-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['Asia/Tokyo'-Index-other3]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['Asia/Tokyo'-Index-other4]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['Asia/Tokyo'-Index-other5]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['Asia/Tokyo'-Index-other6]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['Asia/Tokyo'-Index-other7]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['Asia/Tokyo'-Index-other8]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['Asia/Tokyo'-Index-other9]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['Asia/Tokyo'-Series-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['Asia/Tokyo'-Series-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['Asia/Tokyo'-Series-other2]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['Asia/Tokyo'-Series-other3]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['Asia/Tokyo'-Series-other4]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['Asia/Tokyo'-Series-other5]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['Asia/Tokyo'-Series-other6]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['Asia/Tokyo'-Series-other7]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['Asia/Tokyo'-Series-other8]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['Asia/Tokyo'-Series-other9]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['Asia/Tokyo'-DataFrame-other0]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['Asia/Tokyo'-DataFrame-other1]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['Asia/Tokyo'-DataFrame-other2]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['Asia/Tokyo'-DataFrame-other3]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['Asia/Tokyo'-DataFrame-other4]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['Asia/Tokyo'-DataFrame-other5]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['Asia/Tokyo'-DataFrame-other6]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['Asia/Tokyo'-DataFrame-other7]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['Asia/Tokyo'-DataFrame-other8]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['Asia/Tokyo'-DataFrame-other9]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['Asia/Tokyo'-array-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['Asia/Tokyo'-array-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['Asia/Tokyo'-array-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['Asia/Tokyo'-array-other3]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['Asia/Tokyo'-array-other4]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['Asia/Tokyo'-array-other5]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['Asia/Tokyo'-array-other6]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['Asia/Tokyo'-array-other7]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['Asia/Tokyo'-array-other8]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['Asia/Tokyo'-array-other9]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['dateutil/US/Pacific'-Index-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['dateutil/US/Pacific'-Index-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['dateutil/US/Pacific'-Index-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['dateutil/US/Pacific'-Index-other3]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['dateutil/US/Pacific'-Index-other4]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['dateutil/US/Pacific'-Index-other5]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['dateutil/US/Pacific'-Index-other6]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['dateutil/US/Pacific'-Index-other7]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['dateutil/US/Pacific'-Index-other8]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['dateutil/US/Pacific'-Index-other9]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['dateutil/US/Pacific'-Series-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['dateutil/US/Pacific'-Series-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['dateutil/US/Pacific'-Series-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['dateutil/US/Pacific'-Series-other3]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['dateutil/US/Pacific'-Series-other4]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['dateutil/US/Pacific'-Series-other5]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['dateutil/US/Pacific'-Series-other6]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['dateutil/US/Pacific'-Series-other7]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['dateutil/US/Pacific'-Series-other8]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['dateutil/US/Pacific'-Series-other9]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['dateutil/US/Pacific'-DataFrame-other0]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['dateutil/US/Pacific'-DataFrame-other1]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['dateutil/US/Pacific'-DataFrame-other2]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['dateutil/US/Pacific'-DataFrame-other3]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['dateutil/US/Pacific'-DataFrame-other4]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['dateutil/US/Pacific'-DataFrame-other5]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['dateutil/US/Pacific'-DataFrame-other6]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['dateutil/US/Pacific'-DataFrame-other7]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['dateutil/US/Pacific'-DataFrame-other8]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['dateutil/US/Pacific'-DataFrame-other9]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['dateutil/US/Pacific'-array-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['dateutil/US/Pacific'-array-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['dateutil/US/Pacific'-array-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['dateutil/US/Pacific'-array-other3]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['dateutil/US/Pacific'-array-other4]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['dateutil/US/Pacific'-array-other5]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['dateutil/US/Pacific'-array-other6]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['dateutil/US/Pacific'-array-other7]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['dateutil/US/Pacific'-array-other8]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['dateutil/US/Pacific'-array-other9]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['dateutil/Asia/Singapore'-Index-other0]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['dateutil/Asia/Singapore'-Index-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['dateutil/Asia/Singapore'-Index-other2]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['dateutil/Asia/Singapore'-Index-other3]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['dateutil/Asia/Singapore'-Index-other4]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['dateutil/Asia/Singapore'-Index-other5]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['dateutil/Asia/Singapore'-Index-other6]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['dateutil/Asia/Singapore'-Index-other7]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['dateutil/Asia/Singapore'-Index-other8]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['dateutil/Asia/Singapore'-Index-other9]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['dateutil/Asia/Singapore'-Series-other0]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['dateutil/Asia/Singapore'-Series-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['dateutil/Asia/Singapore'-Series-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['dateutil/Asia/Singapore'-Series-other3]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['dateutil/Asia/Singapore'-Series-other4]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['dateutil/Asia/Singapore'-Series-other5]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['dateutil/Asia/Singapore'-Series-other6]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['dateutil/Asia/Singapore'-Series-other7]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['dateutil/Asia/Singapore'-Series-other8]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['dateutil/Asia/Singapore'-Series-other9]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['dateutil/Asia/Singapore'-DataFrame-other0]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['dateutil/Asia/Singapore'-DataFrame-other1]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['dateutil/Asia/Singapore'-DataFrame-other2]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['dateutil/Asia/Singapore'-DataFrame-other3]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['dateutil/Asia/Singapore'-DataFrame-other4]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['dateutil/Asia/Singapore'-DataFrame-other5]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['dateutil/Asia/Singapore'-DataFrame-other6]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['dateutil/Asia/Singapore'-DataFrame-other7]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['dateutil/Asia/Singapore'-DataFrame-other8]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['dateutil/Asia/Singapore'-DataFrame-other9]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['dateutil/Asia/Singapore'-array-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['dateutil/Asia/Singapore'-array-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['dateutil/Asia/Singapore'-array-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['dateutil/Asia/Singapore'-array-other3]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['dateutil/Asia/Singapore'-array-other4]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['dateutil/Asia/Singapore'-array-other5]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['dateutil/Asia/Singapore'-array-other6]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['dateutil/Asia/Singapore'-array-other7]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['dateutil/Asia/Singapore'-array-other8]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['dateutil/Asia/Singapore'-array-other9]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['+01:15'-Index-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['+01:15'-Index-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['+01:15'-Index-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['+01:15'-Index-other3]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['+01:15'-Index-other4]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['+01:15'-Index-other5]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['+01:15'-Index-other6]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['+01:15'-Index-other7]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['+01:15'-Index-other8]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['+01:15'-Index-other9]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['+01:15'-Series-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['+01:15'-Series-other1]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['+01:15'-Series-other2]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['+01:15'-Series-other3]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['+01:15'-Series-other4]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['+01:15'-Series-other5]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['+01:15'-Series-other6]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['+01:15'-Series-other7]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['+01:15'-Series-other8]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['+01:15'-Series-other9]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['+01:15'-DataFrame-other0]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['+01:15'-DataFrame-other1]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['+01:15'-DataFrame-other2]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['+01:15'-DataFrame-other3]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['+01:15'-DataFrame-other4]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['+01:15'-DataFrame-other5]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['+01:15'-DataFrame-other6]" time="0.029" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['+01:15'-DataFrame-other7]" time="0.018" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['+01:15'-DataFrame-other8]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['+01:15'-DataFrame-other9]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['+01:15'-array-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['+01:15'-array-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['+01:15'-array-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['+01:15'-array-other3]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['+01:15'-array-other4]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['+01:15'-array-other5]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['+01:15'-array-other6]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['+01:15'-array-other7]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['+01:15'-array-other8]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['+01:15'-array-other9]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['-02:15'-Index-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['-02:15'-Index-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['-02:15'-Index-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['-02:15'-Index-other3]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['-02:15'-Index-other4]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['-02:15'-Index-other5]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['-02:15'-Index-other6]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['-02:15'-Index-other7]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['-02:15'-Index-other8]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['-02:15'-Index-other9]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['-02:15'-Series-other0]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['-02:15'-Series-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['-02:15'-Series-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['-02:15'-Series-other3]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['-02:15'-Series-other4]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['-02:15'-Series-other5]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['-02:15'-Series-other6]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['-02:15'-Series-other7]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['-02:15'-Series-other8]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['-02:15'-Series-other9]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['-02:15'-DataFrame-other0]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['-02:15'-DataFrame-other1]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['-02:15'-DataFrame-other2]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['-02:15'-DataFrame-other3]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['-02:15'-DataFrame-other4]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['-02:15'-DataFrame-other5]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['-02:15'-DataFrame-other6]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['-02:15'-DataFrame-other7]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['-02:15'-DataFrame-other8]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['-02:15'-DataFrame-other9]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['-02:15'-array-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['-02:15'-array-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['-02:15'-array-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['-02:15'-array-other3]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['-02:15'-array-other4]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['-02:15'-array-other5]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['-02:15'-array-other6]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['-02:15'-array-other7]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['-02:15'-array-other8]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['-02:15'-array-other9]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC+01:15'-Index-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC+01:15'-Index-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC+01:15'-Index-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC+01:15'-Index-other3]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC+01:15'-Index-other4]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC+01:15'-Index-other5]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC+01:15'-Index-other6]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC+01:15'-Index-other7]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC+01:15'-Index-other8]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC+01:15'-Index-other9]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC+01:15'-Series-other0]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC+01:15'-Series-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC+01:15'-Series-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC+01:15'-Series-other3]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC+01:15'-Series-other4]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC+01:15'-Series-other5]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC+01:15'-Series-other6]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC+01:15'-Series-other7]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC+01:15'-Series-other8]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC+01:15'-Series-other9]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC+01:15'-DataFrame-other0]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC+01:15'-DataFrame-other1]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC+01:15'-DataFrame-other2]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC+01:15'-DataFrame-other3]" time="0.022" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC+01:15'-DataFrame-other4]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC+01:15'-DataFrame-other5]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC+01:15'-DataFrame-other6]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC+01:15'-DataFrame-other7]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC+01:15'-DataFrame-other8]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC+01:15'-DataFrame-other9]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC+01:15'-array-other0]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC+01:15'-array-other1]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC+01:15'-array-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC+01:15'-array-other3]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC+01:15'-array-other4]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC+01:15'-array-other5]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC+01:15'-array-other6]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC+01:15'-array-other7]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC+01:15'-array-other8]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC+01:15'-array-other9]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC-02:15'-Index-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC-02:15'-Index-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC-02:15'-Index-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC-02:15'-Index-other3]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC-02:15'-Index-other4]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC-02:15'-Index-other5]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC-02:15'-Index-other6]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC-02:15'-Index-other7]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC-02:15'-Index-other8]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC-02:15'-Index-other9]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC-02:15'-Series-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC-02:15'-Series-other1]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC-02:15'-Series-other2]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC-02:15'-Series-other3]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC-02:15'-Series-other4]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC-02:15'-Series-other5]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC-02:15'-Series-other6]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC-02:15'-Series-other7]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC-02:15'-Series-other8]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC-02:15'-Series-other9]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC-02:15'-DataFrame-other0]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC-02:15'-DataFrame-other1]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC-02:15'-DataFrame-other2]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC-02:15'-DataFrame-other3]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC-02:15'-DataFrame-other4]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC-02:15'-DataFrame-other5]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC-02:15'-DataFrame-other6]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC-02:15'-DataFrame-other7]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC-02:15'-DataFrame-other8]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC-02:15'-DataFrame-other9]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC-02:15'-array-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC-02:15'-array-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC-02:15'-array-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC-02:15'-array-other3]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC-02:15'-array-other4]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC-02:15'-array-other5]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC-02:15'-array-other6]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC-02:15'-array-other7]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC-02:15'-array-other8]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid['UTC-02:15'-array-other9]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[tzutc()-Index-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[tzutc()-Index-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[tzutc()-Index-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[tzutc()-Index-other3]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[tzutc()-Index-other4]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[tzutc()-Index-other5]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[tzutc()-Index-other6]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[tzutc()-Index-other7]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[tzutc()-Index-other8]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[tzutc()-Index-other9]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[tzutc()-Series-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[tzutc()-Series-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[tzutc()-Series-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[tzutc()-Series-other3]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[tzutc()-Series-other4]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[tzutc()-Series-other5]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[tzutc()-Series-other6]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[tzutc()-Series-other7]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[tzutc()-Series-other8]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[tzutc()-Series-other9]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[tzutc()-DataFrame-other0]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[tzutc()-DataFrame-other1]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[tzutc()-DataFrame-other2]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[tzutc()-DataFrame-other3]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[tzutc()-DataFrame-other4]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[tzutc()-DataFrame-other5]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[tzutc()-DataFrame-other6]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[tzutc()-DataFrame-other7]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[tzutc()-DataFrame-other8]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[tzutc()-DataFrame-other9]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[tzutc()-array-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[tzutc()-array-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[tzutc()-array-other2]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[tzutc()-array-other3]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[tzutc()-array-other4]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[tzutc()-array-other5]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[tzutc()-array-other6]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[tzutc()-array-other7]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[tzutc()-array-other8]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[tzutc()-array-other9]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[tzlocal()-Index-other0]" time="0.090"><failure message="pytest.PytestUnraisableExceptionWarning: Exception ignored in: 'pandas._libs.tslibs.conversion._localize_tso'&#10;&#10;Traceback (most recent call last):&#10;  File &quot;tzconversion.pyx&quot;, line 129, in pandas._libs.tslibs.tzconversion.Localizer.utc_val_to_local_val&#10;  File &quot;tzconversion.pyx&quot;, line 755, in pandas._libs.tslibs.tzconversion._tz_localize_using_tzinfo_api&#10;  File &quot;tzconversion.pyx&quot;, line 787, in pandas._libs.tslibs.tzconversion._astimezone&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 144, in fromutc&#10;    return f(self, dt)&#10;           ^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 261, in fromutc&#10;    _fold = self._fold_status(dt, dt_wall)&#10;            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 196, in _fold_status&#10;    if self.is_ambiguous(dt_wall):&#10;       ^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py&quot;, line 254, in is_ambiguous&#10;    naive_dst = self._naive_is_dst(dt)&#10;                ^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py&quot;, line 260, in _naive_is_dst&#10;    return time.localtime(timestamp + time.timezone).tm_isdst&#10;           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;OSError: [Errno 22] Invalid argument">cls = &lt;class '_pytest.runner.CallInfo'&gt;
func = &lt;function call_and_report.&lt;locals&gt;.&lt;lambda&gt; at 0x0000015D25B474C0&gt;
when = 'call'
reraise = (&lt;class '_pytest.outcomes.Exit'&gt;, &lt;class 'KeyboardInterrupt'&gt;)

    @classmethod
    def from_call(
        cls,
        func: Callable[[], TResult],
        when: Literal["collect", "setup", "call", "teardown"],
        reraise: type[BaseException] | tuple[type[BaseException], ...] | None = None,
    ) -&gt; CallInfo[TResult]:
        """Call func, wrapping the result in a CallInfo.
    
        :param func:
            The function to call. Called without arguments.
        :type func: Callable[[], _pytest.runner.TResult]
        :param when:
            The phase in which the function is called.
        :param reraise:
            Exception or exceptions that shall propagate if raised by the
            function, instead of being wrapped in the CallInfo.
        """
        excinfo = None
        start = timing.time()
        precise_start = timing.perf_counter()
        try:
&gt;           result: TResult | None = func()

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\runner.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\runner.py:242: in &lt;lambda&gt;
    lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pluggy\_hooks.py:513: in __call__
    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pluggy\_manager.py:120: in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\threadexception.py:92: in pytest_runtest_call
    yield from thread_exception_runtest_hook()
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\threadexception.py:68: in thread_exception_runtest_hook
    yield
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\unraisableexception.py:95: in pytest_runtest_call
    yield from unraisable_exception_runtest_hook()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

    def unraisable_exception_runtest_hook() -&gt; Generator[None, None, None]:
        with catch_unraisable_exception() as cm:
            try:
                yield
            finally:
                if cm.unraisable:
                    if cm.unraisable.err_msg is not None:
                        err_msg = cm.unraisable.err_msg
                    else:
                        err_msg = "Exception ignored in"
                    msg = f"{err_msg}: {cm.unraisable.object!r}\n\n"
                    msg += "".join(
                        traceback.format_exception(
                            cm.unraisable.exc_type,
                            cm.unraisable.exc_value,
                            cm.unraisable.exc_traceback,
                        )
                    )
&gt;                   warnings.warn(pytest.PytestUnraisableExceptionWarning(msg))
E                   pytest.PytestUnraisableExceptionWarning: Exception ignored in: 'pandas._libs.tslibs.conversion._localize_tso'
E                   
E                   Traceback (most recent call last):
E                     File "tzconversion.pyx", line 129, in pandas._libs.tslibs.tzconversion.Localizer.utc_val_to_local_val
E                     File "tzconversion.pyx", line 755, in pandas._libs.tslibs.tzconversion._tz_localize_using_tzinfo_api
E                     File "tzconversion.pyx", line 787, in pandas._libs.tslibs.tzconversion._astimezone
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 144, in fromutc
E                       return f(self, dt)
E                              ^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 261, in fromutc
E                       _fold = self._fold_status(dt, dt_wall)
E                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 196, in _fold_status
E                       if self.is_ambiguous(dt_wall):
E                          ^^^^^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py", line 254, in is_ambiguous
E                       naive_dst = self._naive_is_dst(dt)
E                                   ^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py", line 260, in _naive_is_dst
E                       return time.localtime(timestamp + time.timezone).tm_isdst
E                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E                   OSError: [Errno 22] Invalid argument

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\unraisableexception.py:85: PytestUnraisableExceptionWarning</failure></testcase><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[tzlocal()-Index-other1]" time="0.019"><failure message="pytest.PytestUnraisableExceptionWarning: Exception ignored in: 'pandas._libs.tslibs.conversion._localize_tso'&#10;&#10;Traceback (most recent call last):&#10;  File &quot;tzconversion.pyx&quot;, line 129, in pandas._libs.tslibs.tzconversion.Localizer.utc_val_to_local_val&#10;  File &quot;tzconversion.pyx&quot;, line 755, in pandas._libs.tslibs.tzconversion._tz_localize_using_tzinfo_api&#10;  File &quot;tzconversion.pyx&quot;, line 787, in pandas._libs.tslibs.tzconversion._astimezone&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 144, in fromutc&#10;    return f(self, dt)&#10;           ^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 261, in fromutc&#10;    _fold = self._fold_status(dt, dt_wall)&#10;            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 196, in _fold_status&#10;    if self.is_ambiguous(dt_wall):&#10;       ^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py&quot;, line 254, in is_ambiguous&#10;    naive_dst = self._naive_is_dst(dt)&#10;                ^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py&quot;, line 260, in _naive_is_dst&#10;    return time.localtime(timestamp + time.timezone).tm_isdst&#10;           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;OSError: [Errno 22] Invalid argument">cls = &lt;class '_pytest.runner.CallInfo'&gt;
func = &lt;function call_and_report.&lt;locals&gt;.&lt;lambda&gt; at 0x0000015D25B47BA0&gt;
when = 'call'
reraise = (&lt;class '_pytest.outcomes.Exit'&gt;, &lt;class 'KeyboardInterrupt'&gt;)

    @classmethod
    def from_call(
        cls,
        func: Callable[[], TResult],
        when: Literal["collect", "setup", "call", "teardown"],
        reraise: type[BaseException] | tuple[type[BaseException], ...] | None = None,
    ) -&gt; CallInfo[TResult]:
        """Call func, wrapping the result in a CallInfo.
    
        :param func:
            The function to call. Called without arguments.
        :type func: Callable[[], _pytest.runner.TResult]
        :param when:
            The phase in which the function is called.
        :param reraise:
            Exception or exceptions that shall propagate if raised by the
            function, instead of being wrapped in the CallInfo.
        """
        excinfo = None
        start = timing.time()
        precise_start = timing.perf_counter()
        try:
&gt;           result: TResult | None = func()

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\runner.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\runner.py:242: in &lt;lambda&gt;
    lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pluggy\_hooks.py:513: in __call__
    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pluggy\_manager.py:120: in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\threadexception.py:92: in pytest_runtest_call
    yield from thread_exception_runtest_hook()
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\threadexception.py:68: in thread_exception_runtest_hook
    yield
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\unraisableexception.py:95: in pytest_runtest_call
    yield from unraisable_exception_runtest_hook()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

    def unraisable_exception_runtest_hook() -&gt; Generator[None, None, None]:
        with catch_unraisable_exception() as cm:
            try:
                yield
            finally:
                if cm.unraisable:
                    if cm.unraisable.err_msg is not None:
                        err_msg = cm.unraisable.err_msg
                    else:
                        err_msg = "Exception ignored in"
                    msg = f"{err_msg}: {cm.unraisable.object!r}\n\n"
                    msg += "".join(
                        traceback.format_exception(
                            cm.unraisable.exc_type,
                            cm.unraisable.exc_value,
                            cm.unraisable.exc_traceback,
                        )
                    )
&gt;                   warnings.warn(pytest.PytestUnraisableExceptionWarning(msg))
E                   pytest.PytestUnraisableExceptionWarning: Exception ignored in: 'pandas._libs.tslibs.conversion._localize_tso'
E                   
E                   Traceback (most recent call last):
E                     File "tzconversion.pyx", line 129, in pandas._libs.tslibs.tzconversion.Localizer.utc_val_to_local_val
E                     File "tzconversion.pyx", line 755, in pandas._libs.tslibs.tzconversion._tz_localize_using_tzinfo_api
E                     File "tzconversion.pyx", line 787, in pandas._libs.tslibs.tzconversion._astimezone
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 144, in fromutc
E                       return f(self, dt)
E                              ^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 261, in fromutc
E                       _fold = self._fold_status(dt, dt_wall)
E                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 196, in _fold_status
E                       if self.is_ambiguous(dt_wall):
E                          ^^^^^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py", line 254, in is_ambiguous
E                       naive_dst = self._naive_is_dst(dt)
E                                   ^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py", line 260, in _naive_is_dst
E                       return time.localtime(timestamp + time.timezone).tm_isdst
E                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E                   OSError: [Errno 22] Invalid argument

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\unraisableexception.py:85: PytestUnraisableExceptionWarning</failure></testcase><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[tzlocal()-Index-other2]" time="0.012"><failure message="pytest.PytestUnraisableExceptionWarning: Exception ignored in: 'pandas._libs.tslibs.conversion._localize_tso'&#10;&#10;Traceback (most recent call last):&#10;  File &quot;tzconversion.pyx&quot;, line 129, in pandas._libs.tslibs.tzconversion.Localizer.utc_val_to_local_val&#10;  File &quot;tzconversion.pyx&quot;, line 755, in pandas._libs.tslibs.tzconversion._tz_localize_using_tzinfo_api&#10;  File &quot;tzconversion.pyx&quot;, line 787, in pandas._libs.tslibs.tzconversion._astimezone&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 144, in fromutc&#10;    return f(self, dt)&#10;           ^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 261, in fromutc&#10;    _fold = self._fold_status(dt, dt_wall)&#10;            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 196, in _fold_status&#10;    if self.is_ambiguous(dt_wall):&#10;       ^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py&quot;, line 254, in is_ambiguous&#10;    naive_dst = self._naive_is_dst(dt)&#10;                ^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py&quot;, line 260, in _naive_is_dst&#10;    return time.localtime(timestamp + time.timezone).tm_isdst&#10;           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;OSError: [Errno 22] Invalid argument">cls = &lt;class '_pytest.runner.CallInfo'&gt;
func = &lt;function call_and_report.&lt;locals&gt;.&lt;lambda&gt; at 0x0000015D25B47880&gt;
when = 'call'
reraise = (&lt;class '_pytest.outcomes.Exit'&gt;, &lt;class 'KeyboardInterrupt'&gt;)

    @classmethod
    def from_call(
        cls,
        func: Callable[[], TResult],
        when: Literal["collect", "setup", "call", "teardown"],
        reraise: type[BaseException] | tuple[type[BaseException], ...] | None = None,
    ) -&gt; CallInfo[TResult]:
        """Call func, wrapping the result in a CallInfo.
    
        :param func:
            The function to call. Called without arguments.
        :type func: Callable[[], _pytest.runner.TResult]
        :param when:
            The phase in which the function is called.
        :param reraise:
            Exception or exceptions that shall propagate if raised by the
            function, instead of being wrapped in the CallInfo.
        """
        excinfo = None
        start = timing.time()
        precise_start = timing.perf_counter()
        try:
&gt;           result: TResult | None = func()

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\runner.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\runner.py:242: in &lt;lambda&gt;
    lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pluggy\_hooks.py:513: in __call__
    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pluggy\_manager.py:120: in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\threadexception.py:92: in pytest_runtest_call
    yield from thread_exception_runtest_hook()
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\threadexception.py:68: in thread_exception_runtest_hook
    yield
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\unraisableexception.py:95: in pytest_runtest_call
    yield from unraisable_exception_runtest_hook()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

    def unraisable_exception_runtest_hook() -&gt; Generator[None, None, None]:
        with catch_unraisable_exception() as cm:
            try:
                yield
            finally:
                if cm.unraisable:
                    if cm.unraisable.err_msg is not None:
                        err_msg = cm.unraisable.err_msg
                    else:
                        err_msg = "Exception ignored in"
                    msg = f"{err_msg}: {cm.unraisable.object!r}\n\n"
                    msg += "".join(
                        traceback.format_exception(
                            cm.unraisable.exc_type,
                            cm.unraisable.exc_value,
                            cm.unraisable.exc_traceback,
                        )
                    )
&gt;                   warnings.warn(pytest.PytestUnraisableExceptionWarning(msg))
E                   pytest.PytestUnraisableExceptionWarning: Exception ignored in: 'pandas._libs.tslibs.conversion._localize_tso'
E                   
E                   Traceback (most recent call last):
E                     File "tzconversion.pyx", line 129, in pandas._libs.tslibs.tzconversion.Localizer.utc_val_to_local_val
E                     File "tzconversion.pyx", line 755, in pandas._libs.tslibs.tzconversion._tz_localize_using_tzinfo_api
E                     File "tzconversion.pyx", line 787, in pandas._libs.tslibs.tzconversion._astimezone
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 144, in fromutc
E                       return f(self, dt)
E                              ^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 261, in fromutc
E                       _fold = self._fold_status(dt, dt_wall)
E                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 196, in _fold_status
E                       if self.is_ambiguous(dt_wall):
E                          ^^^^^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py", line 254, in is_ambiguous
E                       naive_dst = self._naive_is_dst(dt)
E                                   ^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py", line 260, in _naive_is_dst
E                       return time.localtime(timestamp + time.timezone).tm_isdst
E                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E                   OSError: [Errno 22] Invalid argument

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\unraisableexception.py:85: PytestUnraisableExceptionWarning</failure></testcase><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[tzlocal()-Index-other3]" time="0.016"><failure message="pytest.PytestUnraisableExceptionWarning: Exception ignored in: 'pandas._libs.tslibs.conversion._localize_tso'&#10;&#10;Traceback (most recent call last):&#10;  File &quot;tzconversion.pyx&quot;, line 129, in pandas._libs.tslibs.tzconversion.Localizer.utc_val_to_local_val&#10;  File &quot;tzconversion.pyx&quot;, line 755, in pandas._libs.tslibs.tzconversion._tz_localize_using_tzinfo_api&#10;  File &quot;tzconversion.pyx&quot;, line 787, in pandas._libs.tslibs.tzconversion._astimezone&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 144, in fromutc&#10;    return f(self, dt)&#10;           ^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 261, in fromutc&#10;    _fold = self._fold_status(dt, dt_wall)&#10;            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 196, in _fold_status&#10;    if self.is_ambiguous(dt_wall):&#10;       ^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py&quot;, line 254, in is_ambiguous&#10;    naive_dst = self._naive_is_dst(dt)&#10;                ^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py&quot;, line 260, in _naive_is_dst&#10;    return time.localtime(timestamp + time.timezone).tm_isdst&#10;           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;OSError: [Errno 22] Invalid argument">self = &lt;pandas.tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons object at 0x0000015D7CA99D00&gt;
other = array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9], dtype=object)
tz_naive_fixture = tzlocal()
box_with_array = &lt;class 'pandas.core.indexes.base.Index'&gt;

    @pytest.mark.parametrize(
        "other",
        [
            # GH#4968 invalid date/int comparisons
            list(range(10)),
            np.arange(10),
            np.arange(10).astype(np.float32),
            np.arange(10).astype(object),
            pd.timedelta_range("1ns", periods=10).array,
            np.array(pd.timedelta_range("1ns", periods=10)),
            list(pd.timedelta_range("1ns", periods=10)),
            pd.timedelta_range("1 Day", periods=10).astype(object),
            pd.period_range("1971-01-01", freq="D", periods=10).array,
            pd.period_range("1971-01-01", freq="D", periods=10).astype(object),
        ],
    )
    def test_dt64arr_cmp_arraylike_invalid(
        self, other, tz_naive_fixture, box_with_array
    ):
        tz = tz_naive_fixture
    
        dta = date_range("1970-01-01", freq="ns", periods=10, tz=tz)._data
        obj = tm.box_expected(dta, box_with_array)
&gt;       assert_invalid_comparison(obj, other, box_with_array)

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\arithmetic\test_datetime64.py:117: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\arithmetic\common.py:111: in assert_invalid_comparison
    result = xbox2(left == right)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\ops\common.py:76: in new_method
    return method(self, other)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\arraylike.py:40: in __eq__
    return self._cmp_method(other, operator.eq)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\indexes\base.py:7197: in _cmp_method
    result = op(self._values, other)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\ops\common.py:76: in new_method
    return method(self, other)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\arraylike.py:40: in __eq__
    return self._cmp_method(other, operator.eq)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\arrays\datetimelike.py:992: in _cmp_method
    op, np.asarray(self.astype(object)), other
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\arrays\datetimes.py:739: in astype
    return dtl.DatetimeLikeArrayMixin.astype(self, dtype, copy)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\arrays\datetimelike.py:460: in astype
    converted = ints_to_pydatetime(
vectorized.pyx:166: in pandas._libs.tslibs.vectorized.ints_to_pydatetime
    ???
tzconversion.pyx:129: in pandas._libs.tslibs.tzconversion.Localizer.utc_val_to_local_val
    ???
tzconversion.pyx:755: in pandas._libs.tslibs.tzconversion._tz_localize_using_tzinfo_api
    ???
tzconversion.pyx:787: in pandas._libs.tslibs.tzconversion._astimezone
    ???
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py:144: in fromutc
    return f(self, dt)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py:261: in fromutc
    _fold = self._fold_status(dt, dt_wall)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py:196: in _fold_status
    if self.is_ambiguous(dt_wall):
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py:254: in is_ambiguous
    naive_dst = self._naive_is_dst(dt)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = tzlocal(), dt = datetime.datetime(1969, 12, 31, 21, 0, tzinfo=tzlocal())

    def _naive_is_dst(self, dt):
        timestamp = _datetime_to_timestamp(dt)
&gt;       return time.localtime(timestamp + time.timezone).tm_isdst
E       OSError: [Errno 22] Invalid argument

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py:260: OSError

During handling of the above exception, another exception occurred:

cls = &lt;class '_pytest.runner.CallInfo'&gt;
func = &lt;function call_and_report.&lt;locals&gt;.&lt;lambda&gt; at 0x0000015D25B47C40&gt;
when = 'call'
reraise = (&lt;class '_pytest.outcomes.Exit'&gt;, &lt;class 'KeyboardInterrupt'&gt;)

    @classmethod
    def from_call(
        cls,
        func: Callable[[], TResult],
        when: Literal["collect", "setup", "call", "teardown"],
        reraise: type[BaseException] | tuple[type[BaseException], ...] | None = None,
    ) -&gt; CallInfo[TResult]:
        """Call func, wrapping the result in a CallInfo.
    
        :param func:
            The function to call. Called without arguments.
        :type func: Callable[[], _pytest.runner.TResult]
        :param when:
            The phase in which the function is called.
        :param reraise:
            Exception or exceptions that shall propagate if raised by the
            function, instead of being wrapped in the CallInfo.
        """
        excinfo = None
        start = timing.time()
        precise_start = timing.perf_counter()
        try:
&gt;           result: TResult | None = func()

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\runner.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\runner.py:242: in &lt;lambda&gt;
    lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pluggy\_hooks.py:513: in __call__
    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pluggy\_manager.py:120: in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\threadexception.py:92: in pytest_runtest_call
    yield from thread_exception_runtest_hook()
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\threadexception.py:68: in thread_exception_runtest_hook
    yield
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\unraisableexception.py:95: in pytest_runtest_call
    yield from unraisable_exception_runtest_hook()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

    def unraisable_exception_runtest_hook() -&gt; Generator[None, None, None]:
        with catch_unraisable_exception() as cm:
            try:
                yield
            finally:
                if cm.unraisable:
                    if cm.unraisable.err_msg is not None:
                        err_msg = cm.unraisable.err_msg
                    else:
                        err_msg = "Exception ignored in"
                    msg = f"{err_msg}: {cm.unraisable.object!r}\n\n"
                    msg += "".join(
                        traceback.format_exception(
                            cm.unraisable.exc_type,
                            cm.unraisable.exc_value,
                            cm.unraisable.exc_traceback,
                        )
                    )
&gt;                   warnings.warn(pytest.PytestUnraisableExceptionWarning(msg))
E                   pytest.PytestUnraisableExceptionWarning: Exception ignored in: 'pandas._libs.tslibs.conversion._localize_tso'
E                   
E                   Traceback (most recent call last):
E                     File "tzconversion.pyx", line 129, in pandas._libs.tslibs.tzconversion.Localizer.utc_val_to_local_val
E                     File "tzconversion.pyx", line 755, in pandas._libs.tslibs.tzconversion._tz_localize_using_tzinfo_api
E                     File "tzconversion.pyx", line 787, in pandas._libs.tslibs.tzconversion._astimezone
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 144, in fromutc
E                       return f(self, dt)
E                              ^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 261, in fromutc
E                       _fold = self._fold_status(dt, dt_wall)
E                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 196, in _fold_status
E                       if self.is_ambiguous(dt_wall):
E                          ^^^^^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py", line 254, in is_ambiguous
E                       naive_dst = self._naive_is_dst(dt)
E                                   ^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py", line 260, in _naive_is_dst
E                       return time.localtime(timestamp + time.timezone).tm_isdst
E                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E                   OSError: [Errno 22] Invalid argument

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\unraisableexception.py:85: PytestUnraisableExceptionWarning</failure></testcase><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[tzlocal()-Index-other4]" time="0.008"><failure message="pytest.PytestUnraisableExceptionWarning: Exception ignored in: 'pandas._libs.tslibs.conversion._localize_tso'&#10;&#10;Traceback (most recent call last):&#10;  File &quot;tzconversion.pyx&quot;, line 129, in pandas._libs.tslibs.tzconversion.Localizer.utc_val_to_local_val&#10;  File &quot;tzconversion.pyx&quot;, line 755, in pandas._libs.tslibs.tzconversion._tz_localize_using_tzinfo_api&#10;  File &quot;tzconversion.pyx&quot;, line 787, in pandas._libs.tslibs.tzconversion._astimezone&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 144, in fromutc&#10;    return f(self, dt)&#10;           ^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 261, in fromutc&#10;    _fold = self._fold_status(dt, dt_wall)&#10;            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 196, in _fold_status&#10;    if self.is_ambiguous(dt_wall):&#10;       ^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py&quot;, line 254, in is_ambiguous&#10;    naive_dst = self._naive_is_dst(dt)&#10;                ^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py&quot;, line 260, in _naive_is_dst&#10;    return time.localtime(timestamp + time.timezone).tm_isdst&#10;           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;OSError: [Errno 22] Invalid argument">cls = &lt;class '_pytest.runner.CallInfo'&gt;
func = &lt;function call_and_report.&lt;locals&gt;.&lt;lambda&gt; at 0x0000015D25B47880&gt;
when = 'call'
reraise = (&lt;class '_pytest.outcomes.Exit'&gt;, &lt;class 'KeyboardInterrupt'&gt;)

    @classmethod
    def from_call(
        cls,
        func: Callable[[], TResult],
        when: Literal["collect", "setup", "call", "teardown"],
        reraise: type[BaseException] | tuple[type[BaseException], ...] | None = None,
    ) -&gt; CallInfo[TResult]:
        """Call func, wrapping the result in a CallInfo.
    
        :param func:
            The function to call. Called without arguments.
        :type func: Callable[[], _pytest.runner.TResult]
        :param when:
            The phase in which the function is called.
        :param reraise:
            Exception or exceptions that shall propagate if raised by the
            function, instead of being wrapped in the CallInfo.
        """
        excinfo = None
        start = timing.time()
        precise_start = timing.perf_counter()
        try:
&gt;           result: TResult | None = func()

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\runner.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\runner.py:242: in &lt;lambda&gt;
    lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pluggy\_hooks.py:513: in __call__
    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pluggy\_manager.py:120: in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\threadexception.py:92: in pytest_runtest_call
    yield from thread_exception_runtest_hook()
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\threadexception.py:68: in thread_exception_runtest_hook
    yield
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\unraisableexception.py:95: in pytest_runtest_call
    yield from unraisable_exception_runtest_hook()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

    def unraisable_exception_runtest_hook() -&gt; Generator[None, None, None]:
        with catch_unraisable_exception() as cm:
            try:
                yield
            finally:
                if cm.unraisable:
                    if cm.unraisable.err_msg is not None:
                        err_msg = cm.unraisable.err_msg
                    else:
                        err_msg = "Exception ignored in"
                    msg = f"{err_msg}: {cm.unraisable.object!r}\n\n"
                    msg += "".join(
                        traceback.format_exception(
                            cm.unraisable.exc_type,
                            cm.unraisable.exc_value,
                            cm.unraisable.exc_traceback,
                        )
                    )
&gt;                   warnings.warn(pytest.PytestUnraisableExceptionWarning(msg))
E                   pytest.PytestUnraisableExceptionWarning: Exception ignored in: 'pandas._libs.tslibs.conversion._localize_tso'
E                   
E                   Traceback (most recent call last):
E                     File "tzconversion.pyx", line 129, in pandas._libs.tslibs.tzconversion.Localizer.utc_val_to_local_val
E                     File "tzconversion.pyx", line 755, in pandas._libs.tslibs.tzconversion._tz_localize_using_tzinfo_api
E                     File "tzconversion.pyx", line 787, in pandas._libs.tslibs.tzconversion._astimezone
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 144, in fromutc
E                       return f(self, dt)
E                              ^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 261, in fromutc
E                       _fold = self._fold_status(dt, dt_wall)
E                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 196, in _fold_status
E                       if self.is_ambiguous(dt_wall):
E                          ^^^^^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py", line 254, in is_ambiguous
E                       naive_dst = self._naive_is_dst(dt)
E                                   ^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py", line 260, in _naive_is_dst
E                       return time.localtime(timestamp + time.timezone).tm_isdst
E                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E                   OSError: [Errno 22] Invalid argument

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\unraisableexception.py:85: PytestUnraisableExceptionWarning</failure></testcase><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[tzlocal()-Index-other5]" time="0.008"><failure message="pytest.PytestUnraisableExceptionWarning: Exception ignored in: 'pandas._libs.tslibs.conversion._localize_tso'&#10;&#10;Traceback (most recent call last):&#10;  File &quot;tzconversion.pyx&quot;, line 129, in pandas._libs.tslibs.tzconversion.Localizer.utc_val_to_local_val&#10;  File &quot;tzconversion.pyx&quot;, line 755, in pandas._libs.tslibs.tzconversion._tz_localize_using_tzinfo_api&#10;  File &quot;tzconversion.pyx&quot;, line 787, in pandas._libs.tslibs.tzconversion._astimezone&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 144, in fromutc&#10;    return f(self, dt)&#10;           ^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 261, in fromutc&#10;    _fold = self._fold_status(dt, dt_wall)&#10;            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 196, in _fold_status&#10;    if self.is_ambiguous(dt_wall):&#10;       ^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py&quot;, line 254, in is_ambiguous&#10;    naive_dst = self._naive_is_dst(dt)&#10;                ^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py&quot;, line 260, in _naive_is_dst&#10;    return time.localtime(timestamp + time.timezone).tm_isdst&#10;           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;OSError: [Errno 22] Invalid argument">cls = &lt;class '_pytest.runner.CallInfo'&gt;
func = &lt;function call_and_report.&lt;locals&gt;.&lt;lambda&gt; at 0x0000015D25B47A60&gt;
when = 'call'
reraise = (&lt;class '_pytest.outcomes.Exit'&gt;, &lt;class 'KeyboardInterrupt'&gt;)

    @classmethod
    def from_call(
        cls,
        func: Callable[[], TResult],
        when: Literal["collect", "setup", "call", "teardown"],
        reraise: type[BaseException] | tuple[type[BaseException], ...] | None = None,
    ) -&gt; CallInfo[TResult]:
        """Call func, wrapping the result in a CallInfo.
    
        :param func:
            The function to call. Called without arguments.
        :type func: Callable[[], _pytest.runner.TResult]
        :param when:
            The phase in which the function is called.
        :param reraise:
            Exception or exceptions that shall propagate if raised by the
            function, instead of being wrapped in the CallInfo.
        """
        excinfo = None
        start = timing.time()
        precise_start = timing.perf_counter()
        try:
&gt;           result: TResult | None = func()

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\runner.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\runner.py:242: in &lt;lambda&gt;
    lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pluggy\_hooks.py:513: in __call__
    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pluggy\_manager.py:120: in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\threadexception.py:92: in pytest_runtest_call
    yield from thread_exception_runtest_hook()
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\threadexception.py:68: in thread_exception_runtest_hook
    yield
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\unraisableexception.py:95: in pytest_runtest_call
    yield from unraisable_exception_runtest_hook()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

    def unraisable_exception_runtest_hook() -&gt; Generator[None, None, None]:
        with catch_unraisable_exception() as cm:
            try:
                yield
            finally:
                if cm.unraisable:
                    if cm.unraisable.err_msg is not None:
                        err_msg = cm.unraisable.err_msg
                    else:
                        err_msg = "Exception ignored in"
                    msg = f"{err_msg}: {cm.unraisable.object!r}\n\n"
                    msg += "".join(
                        traceback.format_exception(
                            cm.unraisable.exc_type,
                            cm.unraisable.exc_value,
                            cm.unraisable.exc_traceback,
                        )
                    )
&gt;                   warnings.warn(pytest.PytestUnraisableExceptionWarning(msg))
E                   pytest.PytestUnraisableExceptionWarning: Exception ignored in: 'pandas._libs.tslibs.conversion._localize_tso'
E                   
E                   Traceback (most recent call last):
E                     File "tzconversion.pyx", line 129, in pandas._libs.tslibs.tzconversion.Localizer.utc_val_to_local_val
E                     File "tzconversion.pyx", line 755, in pandas._libs.tslibs.tzconversion._tz_localize_using_tzinfo_api
E                     File "tzconversion.pyx", line 787, in pandas._libs.tslibs.tzconversion._astimezone
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 144, in fromutc
E                       return f(self, dt)
E                              ^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 261, in fromutc
E                       _fold = self._fold_status(dt, dt_wall)
E                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 196, in _fold_status
E                       if self.is_ambiguous(dt_wall):
E                          ^^^^^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py", line 254, in is_ambiguous
E                       naive_dst = self._naive_is_dst(dt)
E                                   ^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py", line 260, in _naive_is_dst
E                       return time.localtime(timestamp + time.timezone).tm_isdst
E                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E                   OSError: [Errno 22] Invalid argument

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\unraisableexception.py:85: PytestUnraisableExceptionWarning</failure></testcase><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[tzlocal()-Index-other6]" time="0.020"><failure message="pytest.PytestUnraisableExceptionWarning: Exception ignored in: 'pandas._libs.tslibs.conversion._localize_tso'&#10;&#10;Traceback (most recent call last):&#10;  File &quot;tzconversion.pyx&quot;, line 129, in pandas._libs.tslibs.tzconversion.Localizer.utc_val_to_local_val&#10;  File &quot;tzconversion.pyx&quot;, line 755, in pandas._libs.tslibs.tzconversion._tz_localize_using_tzinfo_api&#10;  File &quot;tzconversion.pyx&quot;, line 787, in pandas._libs.tslibs.tzconversion._astimezone&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 144, in fromutc&#10;    return f(self, dt)&#10;           ^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 261, in fromutc&#10;    _fold = self._fold_status(dt, dt_wall)&#10;            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 196, in _fold_status&#10;    if self.is_ambiguous(dt_wall):&#10;       ^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py&quot;, line 254, in is_ambiguous&#10;    naive_dst = self._naive_is_dst(dt)&#10;                ^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py&quot;, line 260, in _naive_is_dst&#10;    return time.localtime(timestamp + time.timezone).tm_isdst&#10;           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;OSError: [Errno 22] Invalid argument">cls = &lt;class '_pytest.runner.CallInfo'&gt;
func = &lt;function call_and_report.&lt;locals&gt;.&lt;lambda&gt; at 0x0000015D25B511C0&gt;
when = 'call'
reraise = (&lt;class '_pytest.outcomes.Exit'&gt;, &lt;class 'KeyboardInterrupt'&gt;)

    @classmethod
    def from_call(
        cls,
        func: Callable[[], TResult],
        when: Literal["collect", "setup", "call", "teardown"],
        reraise: type[BaseException] | tuple[type[BaseException], ...] | None = None,
    ) -&gt; CallInfo[TResult]:
        """Call func, wrapping the result in a CallInfo.
    
        :param func:
            The function to call. Called without arguments.
        :type func: Callable[[], _pytest.runner.TResult]
        :param when:
            The phase in which the function is called.
        :param reraise:
            Exception or exceptions that shall propagate if raised by the
            function, instead of being wrapped in the CallInfo.
        """
        excinfo = None
        start = timing.time()
        precise_start = timing.perf_counter()
        try:
&gt;           result: TResult | None = func()

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\runner.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\runner.py:242: in &lt;lambda&gt;
    lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pluggy\_hooks.py:513: in __call__
    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pluggy\_manager.py:120: in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\threadexception.py:92: in pytest_runtest_call
    yield from thread_exception_runtest_hook()
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\threadexception.py:68: in thread_exception_runtest_hook
    yield
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\unraisableexception.py:95: in pytest_runtest_call
    yield from unraisable_exception_runtest_hook()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

    def unraisable_exception_runtest_hook() -&gt; Generator[None, None, None]:
        with catch_unraisable_exception() as cm:
            try:
                yield
            finally:
                if cm.unraisable:
                    if cm.unraisable.err_msg is not None:
                        err_msg = cm.unraisable.err_msg
                    else:
                        err_msg = "Exception ignored in"
                    msg = f"{err_msg}: {cm.unraisable.object!r}\n\n"
                    msg += "".join(
                        traceback.format_exception(
                            cm.unraisable.exc_type,
                            cm.unraisable.exc_value,
                            cm.unraisable.exc_traceback,
                        )
                    )
&gt;                   warnings.warn(pytest.PytestUnraisableExceptionWarning(msg))
E                   pytest.PytestUnraisableExceptionWarning: Exception ignored in: 'pandas._libs.tslibs.conversion._localize_tso'
E                   
E                   Traceback (most recent call last):
E                     File "tzconversion.pyx", line 129, in pandas._libs.tslibs.tzconversion.Localizer.utc_val_to_local_val
E                     File "tzconversion.pyx", line 755, in pandas._libs.tslibs.tzconversion._tz_localize_using_tzinfo_api
E                     File "tzconversion.pyx", line 787, in pandas._libs.tslibs.tzconversion._astimezone
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 144, in fromutc
E                       return f(self, dt)
E                              ^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 261, in fromutc
E                       _fold = self._fold_status(dt, dt_wall)
E                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 196, in _fold_status
E                       if self.is_ambiguous(dt_wall):
E                          ^^^^^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py", line 254, in is_ambiguous
E                       naive_dst = self._naive_is_dst(dt)
E                                   ^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py", line 260, in _naive_is_dst
E                       return time.localtime(timestamp + time.timezone).tm_isdst
E                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E                   OSError: [Errno 22] Invalid argument

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\unraisableexception.py:85: PytestUnraisableExceptionWarning</failure></testcase><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[tzlocal()-Index-other7]" time="0.022"><failure message="pytest.PytestUnraisableExceptionWarning: Exception ignored in: 'pandas._libs.tslibs.conversion._localize_tso'&#10;&#10;Traceback (most recent call last):&#10;  File &quot;tzconversion.pyx&quot;, line 129, in pandas._libs.tslibs.tzconversion.Localizer.utc_val_to_local_val&#10;  File &quot;tzconversion.pyx&quot;, line 755, in pandas._libs.tslibs.tzconversion._tz_localize_using_tzinfo_api&#10;  File &quot;tzconversion.pyx&quot;, line 787, in pandas._libs.tslibs.tzconversion._astimezone&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 144, in fromutc&#10;    return f(self, dt)&#10;           ^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 261, in fromutc&#10;    _fold = self._fold_status(dt, dt_wall)&#10;            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 196, in _fold_status&#10;    if self.is_ambiguous(dt_wall):&#10;       ^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py&quot;, line 254, in is_ambiguous&#10;    naive_dst = self._naive_is_dst(dt)&#10;                ^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py&quot;, line 260, in _naive_is_dst&#10;    return time.localtime(timestamp + time.timezone).tm_isdst&#10;           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;OSError: [Errno 22] Invalid argument">self = &lt;pandas.tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons object at 0x0000015D7CA9A000&gt;
other = Index([ 1 days 00:00:00,  2 days 00:00:00,  3 days 00:00:00,  4 days 00:00:00,
        5 days 00:00:00,  6 days 00:00:00,  7 days 00:00:00,  8 days 00:00:00,
        9 days 00:00:00, 10 days 00:00:00],
      dtype='object')
tz_naive_fixture = tzlocal()
box_with_array = &lt;class 'pandas.core.indexes.base.Index'&gt;

    @pytest.mark.parametrize(
        "other",
        [
            # GH#4968 invalid date/int comparisons
            list(range(10)),
            np.arange(10),
            np.arange(10).astype(np.float32),
            np.arange(10).astype(object),
            pd.timedelta_range("1ns", periods=10).array,
            np.array(pd.timedelta_range("1ns", periods=10)),
            list(pd.timedelta_range("1ns", periods=10)),
            pd.timedelta_range("1 Day", periods=10).astype(object),
            pd.period_range("1971-01-01", freq="D", periods=10).array,
            pd.period_range("1971-01-01", freq="D", periods=10).astype(object),
        ],
    )
    def test_dt64arr_cmp_arraylike_invalid(
        self, other, tz_naive_fixture, box_with_array
    ):
        tz = tz_naive_fixture
    
        dta = date_range("1970-01-01", freq="ns", periods=10, tz=tz)._data
        obj = tm.box_expected(dta, box_with_array)
&gt;       assert_invalid_comparison(obj, other, box_with_array)

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\arithmetic\test_datetime64.py:117: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\arithmetic\common.py:111: in assert_invalid_comparison
    result = xbox2(left == right)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\ops\common.py:76: in new_method
    return method(self, other)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\arraylike.py:40: in __eq__
    return self._cmp_method(other, operator.eq)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\indexes\base.py:7197: in _cmp_method
    result = op(self._values, other)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\ops\common.py:76: in new_method
    return method(self, other)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\arraylike.py:40: in __eq__
    return self._cmp_method(other, operator.eq)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\arrays\datetimelike.py:992: in _cmp_method
    op, np.asarray(self.astype(object)), other
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\arrays\datetimes.py:739: in astype
    return dtl.DatetimeLikeArrayMixin.astype(self, dtype, copy)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\arrays\datetimelike.py:460: in astype
    converted = ints_to_pydatetime(
vectorized.pyx:166: in pandas._libs.tslibs.vectorized.ints_to_pydatetime
    ???
tzconversion.pyx:129: in pandas._libs.tslibs.tzconversion.Localizer.utc_val_to_local_val
    ???
tzconversion.pyx:755: in pandas._libs.tslibs.tzconversion._tz_localize_using_tzinfo_api
    ???
tzconversion.pyx:787: in pandas._libs.tslibs.tzconversion._astimezone
    ???
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py:144: in fromutc
    return f(self, dt)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py:261: in fromutc
    _fold = self._fold_status(dt, dt_wall)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py:196: in _fold_status
    if self.is_ambiguous(dt_wall):
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py:254: in is_ambiguous
    naive_dst = self._naive_is_dst(dt)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = tzlocal(), dt = datetime.datetime(1969, 12, 31, 21, 0, tzinfo=tzlocal())

    def _naive_is_dst(self, dt):
        timestamp = _datetime_to_timestamp(dt)
&gt;       return time.localtime(timestamp + time.timezone).tm_isdst
E       OSError: [Errno 22] Invalid argument

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py:260: OSError

During handling of the above exception, another exception occurred:

cls = &lt;class '_pytest.runner.CallInfo'&gt;
func = &lt;function call_and_report.&lt;locals&gt;.&lt;lambda&gt; at 0x0000015D25B518A0&gt;
when = 'call'
reraise = (&lt;class '_pytest.outcomes.Exit'&gt;, &lt;class 'KeyboardInterrupt'&gt;)

    @classmethod
    def from_call(
        cls,
        func: Callable[[], TResult],
        when: Literal["collect", "setup", "call", "teardown"],
        reraise: type[BaseException] | tuple[type[BaseException], ...] | None = None,
    ) -&gt; CallInfo[TResult]:
        """Call func, wrapping the result in a CallInfo.
    
        :param func:
            The function to call. Called without arguments.
        :type func: Callable[[], _pytest.runner.TResult]
        :param when:
            The phase in which the function is called.
        :param reraise:
            Exception or exceptions that shall propagate if raised by the
            function, instead of being wrapped in the CallInfo.
        """
        excinfo = None
        start = timing.time()
        precise_start = timing.perf_counter()
        try:
&gt;           result: TResult | None = func()

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\runner.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\runner.py:242: in &lt;lambda&gt;
    lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pluggy\_hooks.py:513: in __call__
    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pluggy\_manager.py:120: in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\threadexception.py:92: in pytest_runtest_call
    yield from thread_exception_runtest_hook()
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\threadexception.py:68: in thread_exception_runtest_hook
    yield
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\unraisableexception.py:95: in pytest_runtest_call
    yield from unraisable_exception_runtest_hook()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

    def unraisable_exception_runtest_hook() -&gt; Generator[None, None, None]:
        with catch_unraisable_exception() as cm:
            try:
                yield
            finally:
                if cm.unraisable:
                    if cm.unraisable.err_msg is not None:
                        err_msg = cm.unraisable.err_msg
                    else:
                        err_msg = "Exception ignored in"
                    msg = f"{err_msg}: {cm.unraisable.object!r}\n\n"
                    msg += "".join(
                        traceback.format_exception(
                            cm.unraisable.exc_type,
                            cm.unraisable.exc_value,
                            cm.unraisable.exc_traceback,
                        )
                    )
&gt;                   warnings.warn(pytest.PytestUnraisableExceptionWarning(msg))
E                   pytest.PytestUnraisableExceptionWarning: Exception ignored in: 'pandas._libs.tslibs.conversion._localize_tso'
E                   
E                   Traceback (most recent call last):
E                     File "tzconversion.pyx", line 129, in pandas._libs.tslibs.tzconversion.Localizer.utc_val_to_local_val
E                     File "tzconversion.pyx", line 755, in pandas._libs.tslibs.tzconversion._tz_localize_using_tzinfo_api
E                     File "tzconversion.pyx", line 787, in pandas._libs.tslibs.tzconversion._astimezone
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 144, in fromutc
E                       return f(self, dt)
E                              ^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 261, in fromutc
E                       _fold = self._fold_status(dt, dt_wall)
E                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 196, in _fold_status
E                       if self.is_ambiguous(dt_wall):
E                          ^^^^^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py", line 254, in is_ambiguous
E                       naive_dst = self._naive_is_dst(dt)
E                                   ^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py", line 260, in _naive_is_dst
E                       return time.localtime(timestamp + time.timezone).tm_isdst
E                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E                   OSError: [Errno 22] Invalid argument

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\unraisableexception.py:85: PytestUnraisableExceptionWarning</failure></testcase><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[tzlocal()-Index-other8]" time="0.027"><failure message="pytest.PytestUnraisableExceptionWarning: Exception ignored in: 'pandas._libs.tslibs.conversion._localize_tso'&#10;&#10;Traceback (most recent call last):&#10;  File &quot;tzconversion.pyx&quot;, line 129, in pandas._libs.tslibs.tzconversion.Localizer.utc_val_to_local_val&#10;  File &quot;tzconversion.pyx&quot;, line 755, in pandas._libs.tslibs.tzconversion._tz_localize_using_tzinfo_api&#10;  File &quot;tzconversion.pyx&quot;, line 787, in pandas._libs.tslibs.tzconversion._astimezone&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 144, in fromutc&#10;    return f(self, dt)&#10;           ^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 261, in fromutc&#10;    _fold = self._fold_status(dt, dt_wall)&#10;            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 196, in _fold_status&#10;    if self.is_ambiguous(dt_wall):&#10;       ^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py&quot;, line 254, in is_ambiguous&#10;    naive_dst = self._naive_is_dst(dt)&#10;                ^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py&quot;, line 260, in _naive_is_dst&#10;    return time.localtime(timestamp + time.timezone).tm_isdst&#10;           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;OSError: [Errno 22] Invalid argument">cls = &lt;class '_pytest.runner.CallInfo'&gt;
func = &lt;function call_and_report.&lt;locals&gt;.&lt;lambda&gt; at 0x0000015D25B52DE0&gt;
when = 'call'
reraise = (&lt;class '_pytest.outcomes.Exit'&gt;, &lt;class 'KeyboardInterrupt'&gt;)

    @classmethod
    def from_call(
        cls,
        func: Callable[[], TResult],
        when: Literal["collect", "setup", "call", "teardown"],
        reraise: type[BaseException] | tuple[type[BaseException], ...] | None = None,
    ) -&gt; CallInfo[TResult]:
        """Call func, wrapping the result in a CallInfo.
    
        :param func:
            The function to call. Called without arguments.
        :type func: Callable[[], _pytest.runner.TResult]
        :param when:
            The phase in which the function is called.
        :param reraise:
            Exception or exceptions that shall propagate if raised by the
            function, instead of being wrapped in the CallInfo.
        """
        excinfo = None
        start = timing.time()
        precise_start = timing.perf_counter()
        try:
&gt;           result: TResult | None = func()

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\runner.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\runner.py:242: in &lt;lambda&gt;
    lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pluggy\_hooks.py:513: in __call__
    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pluggy\_manager.py:120: in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\threadexception.py:92: in pytest_runtest_call
    yield from thread_exception_runtest_hook()
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\threadexception.py:68: in thread_exception_runtest_hook
    yield
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\unraisableexception.py:95: in pytest_runtest_call
    yield from unraisable_exception_runtest_hook()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

    def unraisable_exception_runtest_hook() -&gt; Generator[None, None, None]:
        with catch_unraisable_exception() as cm:
            try:
                yield
            finally:
                if cm.unraisable:
                    if cm.unraisable.err_msg is not None:
                        err_msg = cm.unraisable.err_msg
                    else:
                        err_msg = "Exception ignored in"
                    msg = f"{err_msg}: {cm.unraisable.object!r}\n\n"
                    msg += "".join(
                        traceback.format_exception(
                            cm.unraisable.exc_type,
                            cm.unraisable.exc_value,
                            cm.unraisable.exc_traceback,
                        )
                    )
&gt;                   warnings.warn(pytest.PytestUnraisableExceptionWarning(msg))
E                   pytest.PytestUnraisableExceptionWarning: Exception ignored in: 'pandas._libs.tslibs.conversion._localize_tso'
E                   
E                   Traceback (most recent call last):
E                     File "tzconversion.pyx", line 129, in pandas._libs.tslibs.tzconversion.Localizer.utc_val_to_local_val
E                     File "tzconversion.pyx", line 755, in pandas._libs.tslibs.tzconversion._tz_localize_using_tzinfo_api
E                     File "tzconversion.pyx", line 787, in pandas._libs.tslibs.tzconversion._astimezone
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 144, in fromutc
E                       return f(self, dt)
E                              ^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 261, in fromutc
E                       _fold = self._fold_status(dt, dt_wall)
E                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 196, in _fold_status
E                       if self.is_ambiguous(dt_wall):
E                          ^^^^^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py", line 254, in is_ambiguous
E                       naive_dst = self._naive_is_dst(dt)
E                                   ^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py", line 260, in _naive_is_dst
E                       return time.localtime(timestamp + time.timezone).tm_isdst
E                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E                   OSError: [Errno 22] Invalid argument

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\unraisableexception.py:85: PytestUnraisableExceptionWarning</failure></testcase><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[tzlocal()-Index-other9]" time="0.012"><failure message="pytest.PytestUnraisableExceptionWarning: Exception ignored in: 'pandas._libs.tslibs.conversion._localize_tso'&#10;&#10;Traceback (most recent call last):&#10;  File &quot;tzconversion.pyx&quot;, line 129, in pandas._libs.tslibs.tzconversion.Localizer.utc_val_to_local_val&#10;  File &quot;tzconversion.pyx&quot;, line 755, in pandas._libs.tslibs.tzconversion._tz_localize_using_tzinfo_api&#10;  File &quot;tzconversion.pyx&quot;, line 787, in pandas._libs.tslibs.tzconversion._astimezone&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 144, in fromutc&#10;    return f(self, dt)&#10;           ^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 261, in fromutc&#10;    _fold = self._fold_status(dt, dt_wall)&#10;            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 196, in _fold_status&#10;    if self.is_ambiguous(dt_wall):&#10;       ^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py&quot;, line 254, in is_ambiguous&#10;    naive_dst = self._naive_is_dst(dt)&#10;                ^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py&quot;, line 260, in _naive_is_dst&#10;    return time.localtime(timestamp + time.timezone).tm_isdst&#10;           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;OSError: [Errno 22] Invalid argument">self = &lt;pandas.tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons object at 0x0000015D7CA9A180&gt;
other = Index([1971-01-01, 1971-01-02, 1971-01-03, 1971-01-04, 1971-01-05, 1971-01-06,
       1971-01-07, 1971-01-08, 1971-01-09, 1971-01-10],
      dtype='object')
tz_naive_fixture = tzlocal()
box_with_array = &lt;class 'pandas.core.indexes.base.Index'&gt;

    @pytest.mark.parametrize(
        "other",
        [
            # GH#4968 invalid date/int comparisons
            list(range(10)),
            np.arange(10),
            np.arange(10).astype(np.float32),
            np.arange(10).astype(object),
            pd.timedelta_range("1ns", periods=10).array,
            np.array(pd.timedelta_range("1ns", periods=10)),
            list(pd.timedelta_range("1ns", periods=10)),
            pd.timedelta_range("1 Day", periods=10).astype(object),
            pd.period_range("1971-01-01", freq="D", periods=10).array,
            pd.period_range("1971-01-01", freq="D", periods=10).astype(object),
        ],
    )
    def test_dt64arr_cmp_arraylike_invalid(
        self, other, tz_naive_fixture, box_with_array
    ):
        tz = tz_naive_fixture
    
        dta = date_range("1970-01-01", freq="ns", periods=10, tz=tz)._data
        obj = tm.box_expected(dta, box_with_array)
&gt;       assert_invalid_comparison(obj, other, box_with_array)

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\arithmetic\test_datetime64.py:117: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\arithmetic\common.py:111: in assert_invalid_comparison
    result = xbox2(left == right)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\ops\common.py:76: in new_method
    return method(self, other)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\arraylike.py:40: in __eq__
    return self._cmp_method(other, operator.eq)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\indexes\base.py:7197: in _cmp_method
    result = op(self._values, other)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\ops\common.py:76: in new_method
    return method(self, other)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\arraylike.py:40: in __eq__
    return self._cmp_method(other, operator.eq)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\arrays\datetimelike.py:992: in _cmp_method
    op, np.asarray(self.astype(object)), other
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\arrays\datetimes.py:739: in astype
    return dtl.DatetimeLikeArrayMixin.astype(self, dtype, copy)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\arrays\datetimelike.py:460: in astype
    converted = ints_to_pydatetime(
vectorized.pyx:166: in pandas._libs.tslibs.vectorized.ints_to_pydatetime
    ???
tzconversion.pyx:129: in pandas._libs.tslibs.tzconversion.Localizer.utc_val_to_local_val
    ???
tzconversion.pyx:755: in pandas._libs.tslibs.tzconversion._tz_localize_using_tzinfo_api
    ???
tzconversion.pyx:787: in pandas._libs.tslibs.tzconversion._astimezone
    ???
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py:144: in fromutc
    return f(self, dt)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py:261: in fromutc
    _fold = self._fold_status(dt, dt_wall)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py:196: in _fold_status
    if self.is_ambiguous(dt_wall):
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py:254: in is_ambiguous
    naive_dst = self._naive_is_dst(dt)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = tzlocal(), dt = datetime.datetime(1969, 12, 31, 21, 0, tzinfo=tzlocal())

    def _naive_is_dst(self, dt):
        timestamp = _datetime_to_timestamp(dt)
&gt;       return time.localtime(timestamp + time.timezone).tm_isdst
E       OSError: [Errno 22] Invalid argument

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py:260: OSError

During handling of the above exception, another exception occurred:

cls = &lt;class '_pytest.runner.CallInfo'&gt;
func = &lt;function call_and_report.&lt;locals&gt;.&lt;lambda&gt; at 0x0000015D25B51F80&gt;
when = 'call'
reraise = (&lt;class '_pytest.outcomes.Exit'&gt;, &lt;class 'KeyboardInterrupt'&gt;)

    @classmethod
    def from_call(
        cls,
        func: Callable[[], TResult],
        when: Literal["collect", "setup", "call", "teardown"],
        reraise: type[BaseException] | tuple[type[BaseException], ...] | None = None,
    ) -&gt; CallInfo[TResult]:
        """Call func, wrapping the result in a CallInfo.
    
        :param func:
            The function to call. Called without arguments.
        :type func: Callable[[], _pytest.runner.TResult]
        :param when:
            The phase in which the function is called.
        :param reraise:
            Exception or exceptions that shall propagate if raised by the
            function, instead of being wrapped in the CallInfo.
        """
        excinfo = None
        start = timing.time()
        precise_start = timing.perf_counter()
        try:
&gt;           result: TResult | None = func()

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\runner.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\runner.py:242: in &lt;lambda&gt;
    lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pluggy\_hooks.py:513: in __call__
    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pluggy\_manager.py:120: in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\threadexception.py:92: in pytest_runtest_call
    yield from thread_exception_runtest_hook()
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\threadexception.py:68: in thread_exception_runtest_hook
    yield
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\unraisableexception.py:95: in pytest_runtest_call
    yield from unraisable_exception_runtest_hook()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

    def unraisable_exception_runtest_hook() -&gt; Generator[None, None, None]:
        with catch_unraisable_exception() as cm:
            try:
                yield
            finally:
                if cm.unraisable:
                    if cm.unraisable.err_msg is not None:
                        err_msg = cm.unraisable.err_msg
                    else:
                        err_msg = "Exception ignored in"
                    msg = f"{err_msg}: {cm.unraisable.object!r}\n\n"
                    msg += "".join(
                        traceback.format_exception(
                            cm.unraisable.exc_type,
                            cm.unraisable.exc_value,
                            cm.unraisable.exc_traceback,
                        )
                    )
&gt;                   warnings.warn(pytest.PytestUnraisableExceptionWarning(msg))
E                   pytest.PytestUnraisableExceptionWarning: Exception ignored in: 'pandas._libs.tslibs.conversion._localize_tso'
E                   
E                   Traceback (most recent call last):
E                     File "tzconversion.pyx", line 129, in pandas._libs.tslibs.tzconversion.Localizer.utc_val_to_local_val
E                     File "tzconversion.pyx", line 755, in pandas._libs.tslibs.tzconversion._tz_localize_using_tzinfo_api
E                     File "tzconversion.pyx", line 787, in pandas._libs.tslibs.tzconversion._astimezone
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 144, in fromutc
E                       return f(self, dt)
E                              ^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 261, in fromutc
E                       _fold = self._fold_status(dt, dt_wall)
E                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 196, in _fold_status
E                       if self.is_ambiguous(dt_wall):
E                          ^^^^^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py", line 254, in is_ambiguous
E                       naive_dst = self._naive_is_dst(dt)
E                                   ^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py", line 260, in _naive_is_dst
E                       return time.localtime(timestamp + time.timezone).tm_isdst
E                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E                   OSError: [Errno 22] Invalid argument

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\unraisableexception.py:85: PytestUnraisableExceptionWarning</failure></testcase><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[tzlocal()-Series-other0]" time="0.009"><failure message="pytest.PytestUnraisableExceptionWarning: Exception ignored in: 'pandas._libs.tslibs.conversion._localize_tso'&#10;&#10;Traceback (most recent call last):&#10;  File &quot;tzconversion.pyx&quot;, line 129, in pandas._libs.tslibs.tzconversion.Localizer.utc_val_to_local_val&#10;  File &quot;tzconversion.pyx&quot;, line 755, in pandas._libs.tslibs.tzconversion._tz_localize_using_tzinfo_api&#10;  File &quot;tzconversion.pyx&quot;, line 787, in pandas._libs.tslibs.tzconversion._astimezone&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 144, in fromutc&#10;    return f(self, dt)&#10;           ^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 261, in fromutc&#10;    _fold = self._fold_status(dt, dt_wall)&#10;            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 196, in _fold_status&#10;    if self.is_ambiguous(dt_wall):&#10;       ^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py&quot;, line 254, in is_ambiguous&#10;    naive_dst = self._naive_is_dst(dt)&#10;                ^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py&quot;, line 260, in _naive_is_dst&#10;    return time.localtime(timestamp + time.timezone).tm_isdst&#10;           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;OSError: [Errno 22] Invalid argument">cls = &lt;class '_pytest.runner.CallInfo'&gt;
func = &lt;function call_and_report.&lt;locals&gt;.&lt;lambda&gt; at 0x0000015D25B53740&gt;
when = 'call'
reraise = (&lt;class '_pytest.outcomes.Exit'&gt;, &lt;class 'KeyboardInterrupt'&gt;)

    @classmethod
    def from_call(
        cls,
        func: Callable[[], TResult],
        when: Literal["collect", "setup", "call", "teardown"],
        reraise: type[BaseException] | tuple[type[BaseException], ...] | None = None,
    ) -&gt; CallInfo[TResult]:
        """Call func, wrapping the result in a CallInfo.
    
        :param func:
            The function to call. Called without arguments.
        :type func: Callable[[], _pytest.runner.TResult]
        :param when:
            The phase in which the function is called.
        :param reraise:
            Exception or exceptions that shall propagate if raised by the
            function, instead of being wrapped in the CallInfo.
        """
        excinfo = None
        start = timing.time()
        precise_start = timing.perf_counter()
        try:
&gt;           result: TResult | None = func()

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\runner.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\runner.py:242: in &lt;lambda&gt;
    lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pluggy\_hooks.py:513: in __call__
    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pluggy\_manager.py:120: in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\threadexception.py:92: in pytest_runtest_call
    yield from thread_exception_runtest_hook()
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\threadexception.py:68: in thread_exception_runtest_hook
    yield
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\unraisableexception.py:95: in pytest_runtest_call
    yield from unraisable_exception_runtest_hook()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

    def unraisable_exception_runtest_hook() -&gt; Generator[None, None, None]:
        with catch_unraisable_exception() as cm:
            try:
                yield
            finally:
                if cm.unraisable:
                    if cm.unraisable.err_msg is not None:
                        err_msg = cm.unraisable.err_msg
                    else:
                        err_msg = "Exception ignored in"
                    msg = f"{err_msg}: {cm.unraisable.object!r}\n\n"
                    msg += "".join(
                        traceback.format_exception(
                            cm.unraisable.exc_type,
                            cm.unraisable.exc_value,
                            cm.unraisable.exc_traceback,
                        )
                    )
&gt;                   warnings.warn(pytest.PytestUnraisableExceptionWarning(msg))
E                   pytest.PytestUnraisableExceptionWarning: Exception ignored in: 'pandas._libs.tslibs.conversion._localize_tso'
E                   
E                   Traceback (most recent call last):
E                     File "tzconversion.pyx", line 129, in pandas._libs.tslibs.tzconversion.Localizer.utc_val_to_local_val
E                     File "tzconversion.pyx", line 755, in pandas._libs.tslibs.tzconversion._tz_localize_using_tzinfo_api
E                     File "tzconversion.pyx", line 787, in pandas._libs.tslibs.tzconversion._astimezone
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 144, in fromutc
E                       return f(self, dt)
E                              ^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 261, in fromutc
E                       _fold = self._fold_status(dt, dt_wall)
E                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 196, in _fold_status
E                       if self.is_ambiguous(dt_wall):
E                          ^^^^^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py", line 254, in is_ambiguous
E                       naive_dst = self._naive_is_dst(dt)
E                                   ^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py", line 260, in _naive_is_dst
E                       return time.localtime(timestamp + time.timezone).tm_isdst
E                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E                   OSError: [Errno 22] Invalid argument

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\unraisableexception.py:85: PytestUnraisableExceptionWarning</failure></testcase><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[tzlocal()-Series-other1]" time="0.010"><failure message="pytest.PytestUnraisableExceptionWarning: Exception ignored in: 'pandas._libs.tslibs.conversion._localize_tso'&#10;&#10;Traceback (most recent call last):&#10;  File &quot;tzconversion.pyx&quot;, line 129, in pandas._libs.tslibs.tzconversion.Localizer.utc_val_to_local_val&#10;  File &quot;tzconversion.pyx&quot;, line 755, in pandas._libs.tslibs.tzconversion._tz_localize_using_tzinfo_api&#10;  File &quot;tzconversion.pyx&quot;, line 787, in pandas._libs.tslibs.tzconversion._astimezone&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 144, in fromutc&#10;    return f(self, dt)&#10;           ^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 261, in fromutc&#10;    _fold = self._fold_status(dt, dt_wall)&#10;            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 196, in _fold_status&#10;    if self.is_ambiguous(dt_wall):&#10;       ^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py&quot;, line 254, in is_ambiguous&#10;    naive_dst = self._naive_is_dst(dt)&#10;                ^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py&quot;, line 260, in _naive_is_dst&#10;    return time.localtime(timestamp + time.timezone).tm_isdst&#10;           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;OSError: [Errno 22] Invalid argument">cls = &lt;class '_pytest.runner.CallInfo'&gt;
func = &lt;function call_and_report.&lt;locals&gt;.&lt;lambda&gt; at 0x0000015D25B51260&gt;
when = 'call'
reraise = (&lt;class '_pytest.outcomes.Exit'&gt;, &lt;class 'KeyboardInterrupt'&gt;)

    @classmethod
    def from_call(
        cls,
        func: Callable[[], TResult],
        when: Literal["collect", "setup", "call", "teardown"],
        reraise: type[BaseException] | tuple[type[BaseException], ...] | None = None,
    ) -&gt; CallInfo[TResult]:
        """Call func, wrapping the result in a CallInfo.
    
        :param func:
            The function to call. Called without arguments.
        :type func: Callable[[], _pytest.runner.TResult]
        :param when:
            The phase in which the function is called.
        :param reraise:
            Exception or exceptions that shall propagate if raised by the
            function, instead of being wrapped in the CallInfo.
        """
        excinfo = None
        start = timing.time()
        precise_start = timing.perf_counter()
        try:
&gt;           result: TResult | None = func()

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\runner.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\runner.py:242: in &lt;lambda&gt;
    lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pluggy\_hooks.py:513: in __call__
    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pluggy\_manager.py:120: in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\threadexception.py:92: in pytest_runtest_call
    yield from thread_exception_runtest_hook()
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\threadexception.py:68: in thread_exception_runtest_hook
    yield
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\unraisableexception.py:95: in pytest_runtest_call
    yield from unraisable_exception_runtest_hook()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

    def unraisable_exception_runtest_hook() -&gt; Generator[None, None, None]:
        with catch_unraisable_exception() as cm:
            try:
                yield
            finally:
                if cm.unraisable:
                    if cm.unraisable.err_msg is not None:
                        err_msg = cm.unraisable.err_msg
                    else:
                        err_msg = "Exception ignored in"
                    msg = f"{err_msg}: {cm.unraisable.object!r}\n\n"
                    msg += "".join(
                        traceback.format_exception(
                            cm.unraisable.exc_type,
                            cm.unraisable.exc_value,
                            cm.unraisable.exc_traceback,
                        )
                    )
&gt;                   warnings.warn(pytest.PytestUnraisableExceptionWarning(msg))
E                   pytest.PytestUnraisableExceptionWarning: Exception ignored in: 'pandas._libs.tslibs.conversion._localize_tso'
E                   
E                   Traceback (most recent call last):
E                     File "tzconversion.pyx", line 129, in pandas._libs.tslibs.tzconversion.Localizer.utc_val_to_local_val
E                     File "tzconversion.pyx", line 755, in pandas._libs.tslibs.tzconversion._tz_localize_using_tzinfo_api
E                     File "tzconversion.pyx", line 787, in pandas._libs.tslibs.tzconversion._astimezone
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 144, in fromutc
E                       return f(self, dt)
E                              ^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 261, in fromutc
E                       _fold = self._fold_status(dt, dt_wall)
E                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 196, in _fold_status
E                       if self.is_ambiguous(dt_wall):
E                          ^^^^^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py", line 254, in is_ambiguous
E                       naive_dst = self._naive_is_dst(dt)
E                                   ^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py", line 260, in _naive_is_dst
E                       return time.localtime(timestamp + time.timezone).tm_isdst
E                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E                   OSError: [Errno 22] Invalid argument

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\unraisableexception.py:85: PytestUnraisableExceptionWarning</failure></testcase><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[tzlocal()-Series-other2]" time="0.013"><failure message="pytest.PytestUnraisableExceptionWarning: Exception ignored in: 'pandas._libs.tslibs.conversion._localize_tso'&#10;&#10;Traceback (most recent call last):&#10;  File &quot;tzconversion.pyx&quot;, line 129, in pandas._libs.tslibs.tzconversion.Localizer.utc_val_to_local_val&#10;  File &quot;tzconversion.pyx&quot;, line 755, in pandas._libs.tslibs.tzconversion._tz_localize_using_tzinfo_api&#10;  File &quot;tzconversion.pyx&quot;, line 787, in pandas._libs.tslibs.tzconversion._astimezone&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 144, in fromutc&#10;    return f(self, dt)&#10;           ^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 261, in fromutc&#10;    _fold = self._fold_status(dt, dt_wall)&#10;            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 196, in _fold_status&#10;    if self.is_ambiguous(dt_wall):&#10;       ^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py&quot;, line 254, in is_ambiguous&#10;    naive_dst = self._naive_is_dst(dt)&#10;                ^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py&quot;, line 260, in _naive_is_dst&#10;    return time.localtime(timestamp + time.timezone).tm_isdst&#10;           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;OSError: [Errno 22] Invalid argument">cls = &lt;class '_pytest.runner.CallInfo'&gt;
func = &lt;function call_and_report.&lt;locals&gt;.&lt;lambda&gt; at 0x0000015D25B52FC0&gt;
when = 'call'
reraise = (&lt;class '_pytest.outcomes.Exit'&gt;, &lt;class 'KeyboardInterrupt'&gt;)

    @classmethod
    def from_call(
        cls,
        func: Callable[[], TResult],
        when: Literal["collect", "setup", "call", "teardown"],
        reraise: type[BaseException] | tuple[type[BaseException], ...] | None = None,
    ) -&gt; CallInfo[TResult]:
        """Call func, wrapping the result in a CallInfo.
    
        :param func:
            The function to call. Called without arguments.
        :type func: Callable[[], _pytest.runner.TResult]
        :param when:
            The phase in which the function is called.
        :param reraise:
            Exception or exceptions that shall propagate if raised by the
            function, instead of being wrapped in the CallInfo.
        """
        excinfo = None
        start = timing.time()
        precise_start = timing.perf_counter()
        try:
&gt;           result: TResult | None = func()

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\runner.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\runner.py:242: in &lt;lambda&gt;
    lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pluggy\_hooks.py:513: in __call__
    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pluggy\_manager.py:120: in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\threadexception.py:92: in pytest_runtest_call
    yield from thread_exception_runtest_hook()
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\threadexception.py:68: in thread_exception_runtest_hook
    yield
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\unraisableexception.py:95: in pytest_runtest_call
    yield from unraisable_exception_runtest_hook()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

    def unraisable_exception_runtest_hook() -&gt; Generator[None, None, None]:
        with catch_unraisable_exception() as cm:
            try:
                yield
            finally:
                if cm.unraisable:
                    if cm.unraisable.err_msg is not None:
                        err_msg = cm.unraisable.err_msg
                    else:
                        err_msg = "Exception ignored in"
                    msg = f"{err_msg}: {cm.unraisable.object!r}\n\n"
                    msg += "".join(
                        traceback.format_exception(
                            cm.unraisable.exc_type,
                            cm.unraisable.exc_value,
                            cm.unraisable.exc_traceback,
                        )
                    )
&gt;                   warnings.warn(pytest.PytestUnraisableExceptionWarning(msg))
E                   pytest.PytestUnraisableExceptionWarning: Exception ignored in: 'pandas._libs.tslibs.conversion._localize_tso'
E                   
E                   Traceback (most recent call last):
E                     File "tzconversion.pyx", line 129, in pandas._libs.tslibs.tzconversion.Localizer.utc_val_to_local_val
E                     File "tzconversion.pyx", line 755, in pandas._libs.tslibs.tzconversion._tz_localize_using_tzinfo_api
E                     File "tzconversion.pyx", line 787, in pandas._libs.tslibs.tzconversion._astimezone
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 144, in fromutc
E                       return f(self, dt)
E                              ^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 261, in fromutc
E                       _fold = self._fold_status(dt, dt_wall)
E                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 196, in _fold_status
E                       if self.is_ambiguous(dt_wall):
E                          ^^^^^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py", line 254, in is_ambiguous
E                       naive_dst = self._naive_is_dst(dt)
E                                   ^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py", line 260, in _naive_is_dst
E                       return time.localtime(timestamp + time.timezone).tm_isdst
E                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E                   OSError: [Errno 22] Invalid argument

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\unraisableexception.py:85: PytestUnraisableExceptionWarning</failure></testcase><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[tzlocal()-Series-other3]" time="0.008"><failure message="pytest.PytestUnraisableExceptionWarning: Exception ignored in: 'pandas._libs.tslibs.conversion._localize_tso'&#10;&#10;Traceback (most recent call last):&#10;  File &quot;tzconversion.pyx&quot;, line 129, in pandas._libs.tslibs.tzconversion.Localizer.utc_val_to_local_val&#10;  File &quot;tzconversion.pyx&quot;, line 755, in pandas._libs.tslibs.tzconversion._tz_localize_using_tzinfo_api&#10;  File &quot;tzconversion.pyx&quot;, line 787, in pandas._libs.tslibs.tzconversion._astimezone&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 144, in fromutc&#10;    return f(self, dt)&#10;           ^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 261, in fromutc&#10;    _fold = self._fold_status(dt, dt_wall)&#10;            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 196, in _fold_status&#10;    if self.is_ambiguous(dt_wall):&#10;       ^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py&quot;, line 254, in is_ambiguous&#10;    naive_dst = self._naive_is_dst(dt)&#10;                ^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py&quot;, line 260, in _naive_is_dst&#10;    return time.localtime(timestamp + time.timezone).tm_isdst&#10;           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;OSError: [Errno 22] Invalid argument">self = &lt;pandas.tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons object at 0x0000015D7CA9A480&gt;
other = array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9], dtype=object)
tz_naive_fixture = tzlocal()
box_with_array = &lt;class 'pandas.core.series.Series'&gt;

    @pytest.mark.parametrize(
        "other",
        [
            # GH#4968 invalid date/int comparisons
            list(range(10)),
            np.arange(10),
            np.arange(10).astype(np.float32),
            np.arange(10).astype(object),
            pd.timedelta_range("1ns", periods=10).array,
            np.array(pd.timedelta_range("1ns", periods=10)),
            list(pd.timedelta_range("1ns", periods=10)),
            pd.timedelta_range("1 Day", periods=10).astype(object),
            pd.period_range("1971-01-01", freq="D", periods=10).array,
            pd.period_range("1971-01-01", freq="D", periods=10).astype(object),
        ],
    )
    def test_dt64arr_cmp_arraylike_invalid(
        self, other, tz_naive_fixture, box_with_array
    ):
        tz = tz_naive_fixture
    
        dta = date_range("1970-01-01", freq="ns", periods=10, tz=tz)._data
        obj = tm.box_expected(dta, box_with_array)
&gt;       assert_invalid_comparison(obj, other, box_with_array)

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\arithmetic\test_datetime64.py:117: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\arithmetic\common.py:111: in assert_invalid_comparison
    result = xbox2(left == right)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\ops\common.py:76: in new_method
    return method(self, other)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\arraylike.py:40: in __eq__
    return self._cmp_method(other, operator.eq)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\series.py:6119: in _cmp_method
    res_values = ops.comparison_op(lvalues, rvalues, op)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\ops\array_ops.py:330: in comparison_op
    res_values = op(lvalues, rvalues)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\ops\common.py:76: in new_method
    return method(self, other)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\arraylike.py:40: in __eq__
    return self._cmp_method(other, operator.eq)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\arrays\datetimelike.py:992: in _cmp_method
    op, np.asarray(self.astype(object)), other
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\arrays\datetimes.py:739: in astype
    return dtl.DatetimeLikeArrayMixin.astype(self, dtype, copy)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\arrays\datetimelike.py:460: in astype
    converted = ints_to_pydatetime(
vectorized.pyx:166: in pandas._libs.tslibs.vectorized.ints_to_pydatetime
    ???
tzconversion.pyx:129: in pandas._libs.tslibs.tzconversion.Localizer.utc_val_to_local_val
    ???
tzconversion.pyx:755: in pandas._libs.tslibs.tzconversion._tz_localize_using_tzinfo_api
    ???
tzconversion.pyx:787: in pandas._libs.tslibs.tzconversion._astimezone
    ???
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py:144: in fromutc
    return f(self, dt)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py:261: in fromutc
    _fold = self._fold_status(dt, dt_wall)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py:196: in _fold_status
    if self.is_ambiguous(dt_wall):
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py:254: in is_ambiguous
    naive_dst = self._naive_is_dst(dt)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = tzlocal(), dt = datetime.datetime(1969, 12, 31, 21, 0, tzinfo=tzlocal())

    def _naive_is_dst(self, dt):
        timestamp = _datetime_to_timestamp(dt)
&gt;       return time.localtime(timestamp + time.timezone).tm_isdst
E       OSError: [Errno 22] Invalid argument

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py:260: OSError

During handling of the above exception, another exception occurred:

cls = &lt;class '_pytest.runner.CallInfo'&gt;
func = &lt;function call_and_report.&lt;locals&gt;.&lt;lambda&gt; at 0x0000015D25B50AE0&gt;
when = 'call'
reraise = (&lt;class '_pytest.outcomes.Exit'&gt;, &lt;class 'KeyboardInterrupt'&gt;)

    @classmethod
    def from_call(
        cls,
        func: Callable[[], TResult],
        when: Literal["collect", "setup", "call", "teardown"],
        reraise: type[BaseException] | tuple[type[BaseException], ...] | None = None,
    ) -&gt; CallInfo[TResult]:
        """Call func, wrapping the result in a CallInfo.
    
        :param func:
            The function to call. Called without arguments.
        :type func: Callable[[], _pytest.runner.TResult]
        :param when:
            The phase in which the function is called.
        :param reraise:
            Exception or exceptions that shall propagate if raised by the
            function, instead of being wrapped in the CallInfo.
        """
        excinfo = None
        start = timing.time()
        precise_start = timing.perf_counter()
        try:
&gt;           result: TResult | None = func()

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\runner.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\runner.py:242: in &lt;lambda&gt;
    lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pluggy\_hooks.py:513: in __call__
    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pluggy\_manager.py:120: in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\threadexception.py:92: in pytest_runtest_call
    yield from thread_exception_runtest_hook()
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\threadexception.py:68: in thread_exception_runtest_hook
    yield
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\unraisableexception.py:95: in pytest_runtest_call
    yield from unraisable_exception_runtest_hook()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

    def unraisable_exception_runtest_hook() -&gt; Generator[None, None, None]:
        with catch_unraisable_exception() as cm:
            try:
                yield
            finally:
                if cm.unraisable:
                    if cm.unraisable.err_msg is not None:
                        err_msg = cm.unraisable.err_msg
                    else:
                        err_msg = "Exception ignored in"
                    msg = f"{err_msg}: {cm.unraisable.object!r}\n\n"
                    msg += "".join(
                        traceback.format_exception(
                            cm.unraisable.exc_type,
                            cm.unraisable.exc_value,
                            cm.unraisable.exc_traceback,
                        )
                    )
&gt;                   warnings.warn(pytest.PytestUnraisableExceptionWarning(msg))
E                   pytest.PytestUnraisableExceptionWarning: Exception ignored in: 'pandas._libs.tslibs.conversion._localize_tso'
E                   
E                   Traceback (most recent call last):
E                     File "tzconversion.pyx", line 129, in pandas._libs.tslibs.tzconversion.Localizer.utc_val_to_local_val
E                     File "tzconversion.pyx", line 755, in pandas._libs.tslibs.tzconversion._tz_localize_using_tzinfo_api
E                     File "tzconversion.pyx", line 787, in pandas._libs.tslibs.tzconversion._astimezone
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 144, in fromutc
E                       return f(self, dt)
E                              ^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 261, in fromutc
E                       _fold = self._fold_status(dt, dt_wall)
E                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 196, in _fold_status
E                       if self.is_ambiguous(dt_wall):
E                          ^^^^^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py", line 254, in is_ambiguous
E                       naive_dst = self._naive_is_dst(dt)
E                                   ^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py", line 260, in _naive_is_dst
E                       return time.localtime(timestamp + time.timezone).tm_isdst
E                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E                   OSError: [Errno 22] Invalid argument

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\unraisableexception.py:85: PytestUnraisableExceptionWarning</failure></testcase><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[tzlocal()-Series-other4]" time="0.017"><failure message="pytest.PytestUnraisableExceptionWarning: Exception ignored in: 'pandas._libs.tslibs.conversion._localize_tso'&#10;&#10;Traceback (most recent call last):&#10;  File &quot;tzconversion.pyx&quot;, line 129, in pandas._libs.tslibs.tzconversion.Localizer.utc_val_to_local_val&#10;  File &quot;tzconversion.pyx&quot;, line 755, in pandas._libs.tslibs.tzconversion._tz_localize_using_tzinfo_api&#10;  File &quot;tzconversion.pyx&quot;, line 787, in pandas._libs.tslibs.tzconversion._astimezone&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 144, in fromutc&#10;    return f(self, dt)&#10;           ^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 261, in fromutc&#10;    _fold = self._fold_status(dt, dt_wall)&#10;            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 196, in _fold_status&#10;    if self.is_ambiguous(dt_wall):&#10;       ^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py&quot;, line 254, in is_ambiguous&#10;    naive_dst = self._naive_is_dst(dt)&#10;                ^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py&quot;, line 260, in _naive_is_dst&#10;    return time.localtime(timestamp + time.timezone).tm_isdst&#10;           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;OSError: [Errno 22] Invalid argument">cls = &lt;class '_pytest.runner.CallInfo'&gt;
func = &lt;function call_and_report.&lt;locals&gt;.&lt;lambda&gt; at 0x0000015D25B53EC0&gt;
when = 'call'
reraise = (&lt;class '_pytest.outcomes.Exit'&gt;, &lt;class 'KeyboardInterrupt'&gt;)

    @classmethod
    def from_call(
        cls,
        func: Callable[[], TResult],
        when: Literal["collect", "setup", "call", "teardown"],
        reraise: type[BaseException] | tuple[type[BaseException], ...] | None = None,
    ) -&gt; CallInfo[TResult]:
        """Call func, wrapping the result in a CallInfo.
    
        :param func:
            The function to call. Called without arguments.
        :type func: Callable[[], _pytest.runner.TResult]
        :param when:
            The phase in which the function is called.
        :param reraise:
            Exception or exceptions that shall propagate if raised by the
            function, instead of being wrapped in the CallInfo.
        """
        excinfo = None
        start = timing.time()
        precise_start = timing.perf_counter()
        try:
&gt;           result: TResult | None = func()

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\runner.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\runner.py:242: in &lt;lambda&gt;
    lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pluggy\_hooks.py:513: in __call__
    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pluggy\_manager.py:120: in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\threadexception.py:92: in pytest_runtest_call
    yield from thread_exception_runtest_hook()
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\threadexception.py:68: in thread_exception_runtest_hook
    yield
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\unraisableexception.py:95: in pytest_runtest_call
    yield from unraisable_exception_runtest_hook()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

    def unraisable_exception_runtest_hook() -&gt; Generator[None, None, None]:
        with catch_unraisable_exception() as cm:
            try:
                yield
            finally:
                if cm.unraisable:
                    if cm.unraisable.err_msg is not None:
                        err_msg = cm.unraisable.err_msg
                    else:
                        err_msg = "Exception ignored in"
                    msg = f"{err_msg}: {cm.unraisable.object!r}\n\n"
                    msg += "".join(
                        traceback.format_exception(
                            cm.unraisable.exc_type,
                            cm.unraisable.exc_value,
                            cm.unraisable.exc_traceback,
                        )
                    )
&gt;                   warnings.warn(pytest.PytestUnraisableExceptionWarning(msg))
E                   pytest.PytestUnraisableExceptionWarning: Exception ignored in: 'pandas._libs.tslibs.conversion._localize_tso'
E                   
E                   Traceback (most recent call last):
E                     File "tzconversion.pyx", line 129, in pandas._libs.tslibs.tzconversion.Localizer.utc_val_to_local_val
E                     File "tzconversion.pyx", line 755, in pandas._libs.tslibs.tzconversion._tz_localize_using_tzinfo_api
E                     File "tzconversion.pyx", line 787, in pandas._libs.tslibs.tzconversion._astimezone
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 144, in fromutc
E                       return f(self, dt)
E                              ^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 261, in fromutc
E                       _fold = self._fold_status(dt, dt_wall)
E                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 196, in _fold_status
E                       if self.is_ambiguous(dt_wall):
E                          ^^^^^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py", line 254, in is_ambiguous
E                       naive_dst = self._naive_is_dst(dt)
E                                   ^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py", line 260, in _naive_is_dst
E                       return time.localtime(timestamp + time.timezone).tm_isdst
E                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E                   OSError: [Errno 22] Invalid argument

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\unraisableexception.py:85: PytestUnraisableExceptionWarning</failure></testcase><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[tzlocal()-Series-other5]" time="0.018"><failure message="pytest.PytestUnraisableExceptionWarning: Exception ignored in: 'pandas._libs.tslibs.conversion._localize_tso'&#10;&#10;Traceback (most recent call last):&#10;  File &quot;tzconversion.pyx&quot;, line 129, in pandas._libs.tslibs.tzconversion.Localizer.utc_val_to_local_val&#10;  File &quot;tzconversion.pyx&quot;, line 755, in pandas._libs.tslibs.tzconversion._tz_localize_using_tzinfo_api&#10;  File &quot;tzconversion.pyx&quot;, line 787, in pandas._libs.tslibs.tzconversion._astimezone&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 144, in fromutc&#10;    return f(self, dt)&#10;           ^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 261, in fromutc&#10;    _fold = self._fold_status(dt, dt_wall)&#10;            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 196, in _fold_status&#10;    if self.is_ambiguous(dt_wall):&#10;       ^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py&quot;, line 254, in is_ambiguous&#10;    naive_dst = self._naive_is_dst(dt)&#10;                ^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py&quot;, line 260, in _naive_is_dst&#10;    return time.localtime(timestamp + time.timezone).tm_isdst&#10;           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;OSError: [Errno 22] Invalid argument">cls = &lt;class '_pytest.runner.CallInfo'&gt;
func = &lt;function call_and_report.&lt;locals&gt;.&lt;lambda&gt; at 0x0000015D25B53B00&gt;
when = 'call'
reraise = (&lt;class '_pytest.outcomes.Exit'&gt;, &lt;class 'KeyboardInterrupt'&gt;)

    @classmethod
    def from_call(
        cls,
        func: Callable[[], TResult],
        when: Literal["collect", "setup", "call", "teardown"],
        reraise: type[BaseException] | tuple[type[BaseException], ...] | None = None,
    ) -&gt; CallInfo[TResult]:
        """Call func, wrapping the result in a CallInfo.
    
        :param func:
            The function to call. Called without arguments.
        :type func: Callable[[], _pytest.runner.TResult]
        :param when:
            The phase in which the function is called.
        :param reraise:
            Exception or exceptions that shall propagate if raised by the
            function, instead of being wrapped in the CallInfo.
        """
        excinfo = None
        start = timing.time()
        precise_start = timing.perf_counter()
        try:
&gt;           result: TResult | None = func()

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\runner.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\runner.py:242: in &lt;lambda&gt;
    lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pluggy\_hooks.py:513: in __call__
    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pluggy\_manager.py:120: in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\threadexception.py:92: in pytest_runtest_call
    yield from thread_exception_runtest_hook()
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\threadexception.py:68: in thread_exception_runtest_hook
    yield
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\unraisableexception.py:95: in pytest_runtest_call
    yield from unraisable_exception_runtest_hook()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

    def unraisable_exception_runtest_hook() -&gt; Generator[None, None, None]:
        with catch_unraisable_exception() as cm:
            try:
                yield
            finally:
                if cm.unraisable:
                    if cm.unraisable.err_msg is not None:
                        err_msg = cm.unraisable.err_msg
                    else:
                        err_msg = "Exception ignored in"
                    msg = f"{err_msg}: {cm.unraisable.object!r}\n\n"
                    msg += "".join(
                        traceback.format_exception(
                            cm.unraisable.exc_type,
                            cm.unraisable.exc_value,
                            cm.unraisable.exc_traceback,
                        )
                    )
&gt;                   warnings.warn(pytest.PytestUnraisableExceptionWarning(msg))
E                   pytest.PytestUnraisableExceptionWarning: Exception ignored in: 'pandas._libs.tslibs.conversion._localize_tso'
E                   
E                   Traceback (most recent call last):
E                     File "tzconversion.pyx", line 129, in pandas._libs.tslibs.tzconversion.Localizer.utc_val_to_local_val
E                     File "tzconversion.pyx", line 755, in pandas._libs.tslibs.tzconversion._tz_localize_using_tzinfo_api
E                     File "tzconversion.pyx", line 787, in pandas._libs.tslibs.tzconversion._astimezone
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 144, in fromutc
E                       return f(self, dt)
E                              ^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 261, in fromutc
E                       _fold = self._fold_status(dt, dt_wall)
E                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 196, in _fold_status
E                       if self.is_ambiguous(dt_wall):
E                          ^^^^^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py", line 254, in is_ambiguous
E                       naive_dst = self._naive_is_dst(dt)
E                                   ^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py", line 260, in _naive_is_dst
E                       return time.localtime(timestamp + time.timezone).tm_isdst
E                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E                   OSError: [Errno 22] Invalid argument

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\unraisableexception.py:85: PytestUnraisableExceptionWarning</failure></testcase><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[tzlocal()-Series-other6]" time="0.011"><failure message="pytest.PytestUnraisableExceptionWarning: Exception ignored in: 'pandas._libs.tslibs.conversion._localize_tso'&#10;&#10;Traceback (most recent call last):&#10;  File &quot;tzconversion.pyx&quot;, line 129, in pandas._libs.tslibs.tzconversion.Localizer.utc_val_to_local_val&#10;  File &quot;tzconversion.pyx&quot;, line 755, in pandas._libs.tslibs.tzconversion._tz_localize_using_tzinfo_api&#10;  File &quot;tzconversion.pyx&quot;, line 787, in pandas._libs.tslibs.tzconversion._astimezone&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 144, in fromutc&#10;    return f(self, dt)&#10;           ^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 261, in fromutc&#10;    _fold = self._fold_status(dt, dt_wall)&#10;            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 196, in _fold_status&#10;    if self.is_ambiguous(dt_wall):&#10;       ^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py&quot;, line 254, in is_ambiguous&#10;    naive_dst = self._naive_is_dst(dt)&#10;                ^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py&quot;, line 260, in _naive_is_dst&#10;    return time.localtime(timestamp + time.timezone).tm_isdst&#10;           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;OSError: [Errno 22] Invalid argument">self = &lt;pandas.tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons object at 0x0000015D7CA9A6C0&gt;
other = [Timedelta('0 days 00:00:00.000000001'), Timedelta('1 days 00:00:00.000000001'), Timedelta('2 days 00:00:00.000000001'...elta('3 days 00:00:00.000000001'), Timedelta('4 days 00:00:00.000000001'), Timedelta('5 days 00:00:00.000000001'), ...]
tz_naive_fixture = tzlocal()
box_with_array = &lt;class 'pandas.core.series.Series'&gt;

    @pytest.mark.parametrize(
        "other",
        [
            # GH#4968 invalid date/int comparisons
            list(range(10)),
            np.arange(10),
            np.arange(10).astype(np.float32),
            np.arange(10).astype(object),
            pd.timedelta_range("1ns", periods=10).array,
            np.array(pd.timedelta_range("1ns", periods=10)),
            list(pd.timedelta_range("1ns", periods=10)),
            pd.timedelta_range("1 Day", periods=10).astype(object),
            pd.period_range("1971-01-01", freq="D", periods=10).array,
            pd.period_range("1971-01-01", freq="D", periods=10).astype(object),
        ],
    )
    def test_dt64arr_cmp_arraylike_invalid(
        self, other, tz_naive_fixture, box_with_array
    ):
        tz = tz_naive_fixture
    
        dta = date_range("1970-01-01", freq="ns", periods=10, tz=tz)._data
        obj = tm.box_expected(dta, box_with_array)
&gt;       assert_invalid_comparison(obj, other, box_with_array)

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\arithmetic\test_datetime64.py:117: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\arithmetic\common.py:111: in assert_invalid_comparison
    result = xbox2(left == right)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\ops\common.py:76: in new_method
    return method(self, other)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\arraylike.py:40: in __eq__
    return self._cmp_method(other, operator.eq)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\series.py:6119: in _cmp_method
    res_values = ops.comparison_op(lvalues, rvalues, op)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\ops\array_ops.py:330: in comparison_op
    res_values = op(lvalues, rvalues)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\ops\common.py:76: in new_method
    return method(self, other)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\arraylike.py:40: in __eq__
    return self._cmp_method(other, operator.eq)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\arrays\datetimelike.py:992: in _cmp_method
    op, np.asarray(self.astype(object)), other
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\arrays\datetimes.py:739: in astype
    return dtl.DatetimeLikeArrayMixin.astype(self, dtype, copy)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\arrays\datetimelike.py:460: in astype
    converted = ints_to_pydatetime(
vectorized.pyx:166: in pandas._libs.tslibs.vectorized.ints_to_pydatetime
    ???
tzconversion.pyx:129: in pandas._libs.tslibs.tzconversion.Localizer.utc_val_to_local_val
    ???
tzconversion.pyx:755: in pandas._libs.tslibs.tzconversion._tz_localize_using_tzinfo_api
    ???
tzconversion.pyx:787: in pandas._libs.tslibs.tzconversion._astimezone
    ???
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py:144: in fromutc
    return f(self, dt)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py:261: in fromutc
    _fold = self._fold_status(dt, dt_wall)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py:196: in _fold_status
    if self.is_ambiguous(dt_wall):
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py:254: in is_ambiguous
    naive_dst = self._naive_is_dst(dt)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = tzlocal(), dt = datetime.datetime(1969, 12, 31, 21, 0, tzinfo=tzlocal())

    def _naive_is_dst(self, dt):
        timestamp = _datetime_to_timestamp(dt)
&gt;       return time.localtime(timestamp + time.timezone).tm_isdst
E       OSError: [Errno 22] Invalid argument

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py:260: OSError

During handling of the above exception, another exception occurred:

cls = &lt;class '_pytest.runner.CallInfo'&gt;
func = &lt;function call_and_report.&lt;locals&gt;.&lt;lambda&gt; at 0x0000015D25B52FC0&gt;
when = 'call'
reraise = (&lt;class '_pytest.outcomes.Exit'&gt;, &lt;class 'KeyboardInterrupt'&gt;)

    @classmethod
    def from_call(
        cls,
        func: Callable[[], TResult],
        when: Literal["collect", "setup", "call", "teardown"],
        reraise: type[BaseException] | tuple[type[BaseException], ...] | None = None,
    ) -&gt; CallInfo[TResult]:
        """Call func, wrapping the result in a CallInfo.
    
        :param func:
            The function to call. Called without arguments.
        :type func: Callable[[], _pytest.runner.TResult]
        :param when:
            The phase in which the function is called.
        :param reraise:
            Exception or exceptions that shall propagate if raised by the
            function, instead of being wrapped in the CallInfo.
        """
        excinfo = None
        start = timing.time()
        precise_start = timing.perf_counter()
        try:
&gt;           result: TResult | None = func()

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\runner.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\runner.py:242: in &lt;lambda&gt;
    lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pluggy\_hooks.py:513: in __call__
    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pluggy\_manager.py:120: in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\threadexception.py:92: in pytest_runtest_call
    yield from thread_exception_runtest_hook()
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\threadexception.py:68: in thread_exception_runtest_hook
    yield
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\unraisableexception.py:95: in pytest_runtest_call
    yield from unraisable_exception_runtest_hook()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

    def unraisable_exception_runtest_hook() -&gt; Generator[None, None, None]:
        with catch_unraisable_exception() as cm:
            try:
                yield
            finally:
                if cm.unraisable:
                    if cm.unraisable.err_msg is not None:
                        err_msg = cm.unraisable.err_msg
                    else:
                        err_msg = "Exception ignored in"
                    msg = f"{err_msg}: {cm.unraisable.object!r}\n\n"
                    msg += "".join(
                        traceback.format_exception(
                            cm.unraisable.exc_type,
                            cm.unraisable.exc_value,
                            cm.unraisable.exc_traceback,
                        )
                    )
&gt;                   warnings.warn(pytest.PytestUnraisableExceptionWarning(msg))
E                   pytest.PytestUnraisableExceptionWarning: Exception ignored in: 'pandas._libs.tslibs.conversion._localize_tso'
E                   
E                   Traceback (most recent call last):
E                     File "tzconversion.pyx", line 129, in pandas._libs.tslibs.tzconversion.Localizer.utc_val_to_local_val
E                     File "tzconversion.pyx", line 755, in pandas._libs.tslibs.tzconversion._tz_localize_using_tzinfo_api
E                     File "tzconversion.pyx", line 787, in pandas._libs.tslibs.tzconversion._astimezone
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 144, in fromutc
E                       return f(self, dt)
E                              ^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 261, in fromutc
E                       _fold = self._fold_status(dt, dt_wall)
E                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 196, in _fold_status
E                       if self.is_ambiguous(dt_wall):
E                          ^^^^^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py", line 254, in is_ambiguous
E                       naive_dst = self._naive_is_dst(dt)
E                                   ^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py", line 260, in _naive_is_dst
E                       return time.localtime(timestamp + time.timezone).tm_isdst
E                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E                   OSError: [Errno 22] Invalid argument

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\unraisableexception.py:85: PytestUnraisableExceptionWarning</failure></testcase><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[tzlocal()-Series-other7]" time="0.009"><failure message="pytest.PytestUnraisableExceptionWarning: Exception ignored in: 'pandas._libs.tslibs.conversion._localize_tso'&#10;&#10;Traceback (most recent call last):&#10;  File &quot;tzconversion.pyx&quot;, line 129, in pandas._libs.tslibs.tzconversion.Localizer.utc_val_to_local_val&#10;  File &quot;tzconversion.pyx&quot;, line 755, in pandas._libs.tslibs.tzconversion._tz_localize_using_tzinfo_api&#10;  File &quot;tzconversion.pyx&quot;, line 787, in pandas._libs.tslibs.tzconversion._astimezone&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 144, in fromutc&#10;    return f(self, dt)&#10;           ^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 261, in fromutc&#10;    _fold = self._fold_status(dt, dt_wall)&#10;            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 196, in _fold_status&#10;    if self.is_ambiguous(dt_wall):&#10;       ^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py&quot;, line 254, in is_ambiguous&#10;    naive_dst = self._naive_is_dst(dt)&#10;                ^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py&quot;, line 260, in _naive_is_dst&#10;    return time.localtime(timestamp + time.timezone).tm_isdst&#10;           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;OSError: [Errno 22] Invalid argument">self = &lt;pandas.tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons object at 0x0000015D7CA9A780&gt;
other = Index([ 1 days 00:00:00,  2 days 00:00:00,  3 days 00:00:00,  4 days 00:00:00,
        5 days 00:00:00,  6 days 00:00:00,  7 days 00:00:00,  8 days 00:00:00,
        9 days 00:00:00, 10 days 00:00:00],
      dtype='object')
tz_naive_fixture = tzlocal()
box_with_array = &lt;class 'pandas.core.series.Series'&gt;

    @pytest.mark.parametrize(
        "other",
        [
            # GH#4968 invalid date/int comparisons
            list(range(10)),
            np.arange(10),
            np.arange(10).astype(np.float32),
            np.arange(10).astype(object),
            pd.timedelta_range("1ns", periods=10).array,
            np.array(pd.timedelta_range("1ns", periods=10)),
            list(pd.timedelta_range("1ns", periods=10)),
            pd.timedelta_range("1 Day", periods=10).astype(object),
            pd.period_range("1971-01-01", freq="D", periods=10).array,
            pd.period_range("1971-01-01", freq="D", periods=10).astype(object),
        ],
    )
    def test_dt64arr_cmp_arraylike_invalid(
        self, other, tz_naive_fixture, box_with_array
    ):
        tz = tz_naive_fixture
    
        dta = date_range("1970-01-01", freq="ns", periods=10, tz=tz)._data
        obj = tm.box_expected(dta, box_with_array)
&gt;       assert_invalid_comparison(obj, other, box_with_array)

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\arithmetic\test_datetime64.py:117: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\arithmetic\common.py:111: in assert_invalid_comparison
    result = xbox2(left == right)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\ops\common.py:76: in new_method
    return method(self, other)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\arraylike.py:40: in __eq__
    return self._cmp_method(other, operator.eq)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\series.py:6119: in _cmp_method
    res_values = ops.comparison_op(lvalues, rvalues, op)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\ops\array_ops.py:330: in comparison_op
    res_values = op(lvalues, rvalues)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\ops\common.py:76: in new_method
    return method(self, other)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\arraylike.py:40: in __eq__
    return self._cmp_method(other, operator.eq)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\arrays\datetimelike.py:992: in _cmp_method
    op, np.asarray(self.astype(object)), other
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\arrays\datetimes.py:739: in astype
    return dtl.DatetimeLikeArrayMixin.astype(self, dtype, copy)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\arrays\datetimelike.py:460: in astype
    converted = ints_to_pydatetime(
vectorized.pyx:166: in pandas._libs.tslibs.vectorized.ints_to_pydatetime
    ???
tzconversion.pyx:129: in pandas._libs.tslibs.tzconversion.Localizer.utc_val_to_local_val
    ???
tzconversion.pyx:755: in pandas._libs.tslibs.tzconversion._tz_localize_using_tzinfo_api
    ???
tzconversion.pyx:787: in pandas._libs.tslibs.tzconversion._astimezone
    ???
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py:144: in fromutc
    return f(self, dt)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py:261: in fromutc
    _fold = self._fold_status(dt, dt_wall)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py:196: in _fold_status
    if self.is_ambiguous(dt_wall):
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py:254: in is_ambiguous
    naive_dst = self._naive_is_dst(dt)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = tzlocal(), dt = datetime.datetime(1969, 12, 31, 21, 0, tzinfo=tzlocal())

    def _naive_is_dst(self, dt):
        timestamp = _datetime_to_timestamp(dt)
&gt;       return time.localtime(timestamp + time.timezone).tm_isdst
E       OSError: [Errno 22] Invalid argument

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py:260: OSError

During handling of the above exception, another exception occurred:

cls = &lt;class '_pytest.runner.CallInfo'&gt;
func = &lt;function call_and_report.&lt;locals&gt;.&lt;lambda&gt; at 0x0000015D25B528E0&gt;
when = 'call'
reraise = (&lt;class '_pytest.outcomes.Exit'&gt;, &lt;class 'KeyboardInterrupt'&gt;)

    @classmethod
    def from_call(
        cls,
        func: Callable[[], TResult],
        when: Literal["collect", "setup", "call", "teardown"],
        reraise: type[BaseException] | tuple[type[BaseException], ...] | None = None,
    ) -&gt; CallInfo[TResult]:
        """Call func, wrapping the result in a CallInfo.
    
        :param func:
            The function to call. Called without arguments.
        :type func: Callable[[], _pytest.runner.TResult]
        :param when:
            The phase in which the function is called.
        :param reraise:
            Exception or exceptions that shall propagate if raised by the
            function, instead of being wrapped in the CallInfo.
        """
        excinfo = None
        start = timing.time()
        precise_start = timing.perf_counter()
        try:
&gt;           result: TResult | None = func()

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\runner.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\runner.py:242: in &lt;lambda&gt;
    lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pluggy\_hooks.py:513: in __call__
    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pluggy\_manager.py:120: in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\threadexception.py:92: in pytest_runtest_call
    yield from thread_exception_runtest_hook()
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\threadexception.py:68: in thread_exception_runtest_hook
    yield
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\unraisableexception.py:95: in pytest_runtest_call
    yield from unraisable_exception_runtest_hook()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

    def unraisable_exception_runtest_hook() -&gt; Generator[None, None, None]:
        with catch_unraisable_exception() as cm:
            try:
                yield
            finally:
                if cm.unraisable:
                    if cm.unraisable.err_msg is not None:
                        err_msg = cm.unraisable.err_msg
                    else:
                        err_msg = "Exception ignored in"
                    msg = f"{err_msg}: {cm.unraisable.object!r}\n\n"
                    msg += "".join(
                        traceback.format_exception(
                            cm.unraisable.exc_type,
                            cm.unraisable.exc_value,
                            cm.unraisable.exc_traceback,
                        )
                    )
&gt;                   warnings.warn(pytest.PytestUnraisableExceptionWarning(msg))
E                   pytest.PytestUnraisableExceptionWarning: Exception ignored in: 'pandas._libs.tslibs.conversion._localize_tso'
E                   
E                   Traceback (most recent call last):
E                     File "tzconversion.pyx", line 129, in pandas._libs.tslibs.tzconversion.Localizer.utc_val_to_local_val
E                     File "tzconversion.pyx", line 755, in pandas._libs.tslibs.tzconversion._tz_localize_using_tzinfo_api
E                     File "tzconversion.pyx", line 787, in pandas._libs.tslibs.tzconversion._astimezone
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 144, in fromutc
E                       return f(self, dt)
E                              ^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 261, in fromutc
E                       _fold = self._fold_status(dt, dt_wall)
E                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 196, in _fold_status
E                       if self.is_ambiguous(dt_wall):
E                          ^^^^^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py", line 254, in is_ambiguous
E                       naive_dst = self._naive_is_dst(dt)
E                                   ^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py", line 260, in _naive_is_dst
E                       return time.localtime(timestamp + time.timezone).tm_isdst
E                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E                   OSError: [Errno 22] Invalid argument

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\unraisableexception.py:85: PytestUnraisableExceptionWarning</failure></testcase><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[tzlocal()-Series-other8]" time="0.010"><failure message="pytest.PytestUnraisableExceptionWarning: Exception ignored in: 'pandas._libs.tslibs.conversion._localize_tso'&#10;&#10;Traceback (most recent call last):&#10;  File &quot;tzconversion.pyx&quot;, line 129, in pandas._libs.tslibs.tzconversion.Localizer.utc_val_to_local_val&#10;  File &quot;tzconversion.pyx&quot;, line 755, in pandas._libs.tslibs.tzconversion._tz_localize_using_tzinfo_api&#10;  File &quot;tzconversion.pyx&quot;, line 787, in pandas._libs.tslibs.tzconversion._astimezone&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 144, in fromutc&#10;    return f(self, dt)&#10;           ^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 261, in fromutc&#10;    _fold = self._fold_status(dt, dt_wall)&#10;            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 196, in _fold_status&#10;    if self.is_ambiguous(dt_wall):&#10;       ^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py&quot;, line 254, in is_ambiguous&#10;    naive_dst = self._naive_is_dst(dt)&#10;                ^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py&quot;, line 260, in _naive_is_dst&#10;    return time.localtime(timestamp + time.timezone).tm_isdst&#10;           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;OSError: [Errno 22] Invalid argument">cls = &lt;class '_pytest.runner.CallInfo'&gt;
func = &lt;function call_and_report.&lt;locals&gt;.&lt;lambda&gt; at 0x0000015D25B514E0&gt;
when = 'call'
reraise = (&lt;class '_pytest.outcomes.Exit'&gt;, &lt;class 'KeyboardInterrupt'&gt;)

    @classmethod
    def from_call(
        cls,
        func: Callable[[], TResult],
        when: Literal["collect", "setup", "call", "teardown"],
        reraise: type[BaseException] | tuple[type[BaseException], ...] | None = None,
    ) -&gt; CallInfo[TResult]:
        """Call func, wrapping the result in a CallInfo.
    
        :param func:
            The function to call. Called without arguments.
        :type func: Callable[[], _pytest.runner.TResult]
        :param when:
            The phase in which the function is called.
        :param reraise:
            Exception or exceptions that shall propagate if raised by the
            function, instead of being wrapped in the CallInfo.
        """
        excinfo = None
        start = timing.time()
        precise_start = timing.perf_counter()
        try:
&gt;           result: TResult | None = func()

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\runner.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\runner.py:242: in &lt;lambda&gt;
    lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pluggy\_hooks.py:513: in __call__
    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pluggy\_manager.py:120: in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\threadexception.py:92: in pytest_runtest_call
    yield from thread_exception_runtest_hook()
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\threadexception.py:68: in thread_exception_runtest_hook
    yield
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\unraisableexception.py:95: in pytest_runtest_call
    yield from unraisable_exception_runtest_hook()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

    def unraisable_exception_runtest_hook() -&gt; Generator[None, None, None]:
        with catch_unraisable_exception() as cm:
            try:
                yield
            finally:
                if cm.unraisable:
                    if cm.unraisable.err_msg is not None:
                        err_msg = cm.unraisable.err_msg
                    else:
                        err_msg = "Exception ignored in"
                    msg = f"{err_msg}: {cm.unraisable.object!r}\n\n"
                    msg += "".join(
                        traceback.format_exception(
                            cm.unraisable.exc_type,
                            cm.unraisable.exc_value,
                            cm.unraisable.exc_traceback,
                        )
                    )
&gt;                   warnings.warn(pytest.PytestUnraisableExceptionWarning(msg))
E                   pytest.PytestUnraisableExceptionWarning: Exception ignored in: 'pandas._libs.tslibs.conversion._localize_tso'
E                   
E                   Traceback (most recent call last):
E                     File "tzconversion.pyx", line 129, in pandas._libs.tslibs.tzconversion.Localizer.utc_val_to_local_val
E                     File "tzconversion.pyx", line 755, in pandas._libs.tslibs.tzconversion._tz_localize_using_tzinfo_api
E                     File "tzconversion.pyx", line 787, in pandas._libs.tslibs.tzconversion._astimezone
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 144, in fromutc
E                       return f(self, dt)
E                              ^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 261, in fromutc
E                       _fold = self._fold_status(dt, dt_wall)
E                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 196, in _fold_status
E                       if self.is_ambiguous(dt_wall):
E                          ^^^^^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py", line 254, in is_ambiguous
E                       naive_dst = self._naive_is_dst(dt)
E                                   ^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py", line 260, in _naive_is_dst
E                       return time.localtime(timestamp + time.timezone).tm_isdst
E                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E                   OSError: [Errno 22] Invalid argument

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\unraisableexception.py:85: PytestUnraisableExceptionWarning</failure></testcase><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[tzlocal()-Series-other9]" time="0.010"><failure message="pytest.PytestUnraisableExceptionWarning: Exception ignored in: 'pandas._libs.tslibs.conversion._localize_tso'&#10;&#10;Traceback (most recent call last):&#10;  File &quot;tzconversion.pyx&quot;, line 129, in pandas._libs.tslibs.tzconversion.Localizer.utc_val_to_local_val&#10;  File &quot;tzconversion.pyx&quot;, line 755, in pandas._libs.tslibs.tzconversion._tz_localize_using_tzinfo_api&#10;  File &quot;tzconversion.pyx&quot;, line 787, in pandas._libs.tslibs.tzconversion._astimezone&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 144, in fromutc&#10;    return f(self, dt)&#10;           ^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 261, in fromutc&#10;    _fold = self._fold_status(dt, dt_wall)&#10;            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 196, in _fold_status&#10;    if self.is_ambiguous(dt_wall):&#10;       ^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py&quot;, line 254, in is_ambiguous&#10;    naive_dst = self._naive_is_dst(dt)&#10;                ^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py&quot;, line 260, in _naive_is_dst&#10;    return time.localtime(timestamp + time.timezone).tm_isdst&#10;           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;OSError: [Errno 22] Invalid argument">self = &lt;pandas.tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons object at 0x0000015D7CA9A900&gt;
other = Index([1971-01-01, 1971-01-02, 1971-01-03, 1971-01-04, 1971-01-05, 1971-01-06,
       1971-01-07, 1971-01-08, 1971-01-09, 1971-01-10],
      dtype='object')
tz_naive_fixture = tzlocal()
box_with_array = &lt;class 'pandas.core.series.Series'&gt;

    @pytest.mark.parametrize(
        "other",
        [
            # GH#4968 invalid date/int comparisons
            list(range(10)),
            np.arange(10),
            np.arange(10).astype(np.float32),
            np.arange(10).astype(object),
            pd.timedelta_range("1ns", periods=10).array,
            np.array(pd.timedelta_range("1ns", periods=10)),
            list(pd.timedelta_range("1ns", periods=10)),
            pd.timedelta_range("1 Day", periods=10).astype(object),
            pd.period_range("1971-01-01", freq="D", periods=10).array,
            pd.period_range("1971-01-01", freq="D", periods=10).astype(object),
        ],
    )
    def test_dt64arr_cmp_arraylike_invalid(
        self, other, tz_naive_fixture, box_with_array
    ):
        tz = tz_naive_fixture
    
        dta = date_range("1970-01-01", freq="ns", periods=10, tz=tz)._data
        obj = tm.box_expected(dta, box_with_array)
&gt;       assert_invalid_comparison(obj, other, box_with_array)

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\arithmetic\test_datetime64.py:117: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\arithmetic\common.py:111: in assert_invalid_comparison
    result = xbox2(left == right)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\ops\common.py:76: in new_method
    return method(self, other)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\arraylike.py:40: in __eq__
    return self._cmp_method(other, operator.eq)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\series.py:6119: in _cmp_method
    res_values = ops.comparison_op(lvalues, rvalues, op)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\ops\array_ops.py:330: in comparison_op
    res_values = op(lvalues, rvalues)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\ops\common.py:76: in new_method
    return method(self, other)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\arraylike.py:40: in __eq__
    return self._cmp_method(other, operator.eq)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\arrays\datetimelike.py:992: in _cmp_method
    op, np.asarray(self.astype(object)), other
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\arrays\datetimes.py:739: in astype
    return dtl.DatetimeLikeArrayMixin.astype(self, dtype, copy)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\arrays\datetimelike.py:460: in astype
    converted = ints_to_pydatetime(
vectorized.pyx:166: in pandas._libs.tslibs.vectorized.ints_to_pydatetime
    ???
tzconversion.pyx:129: in pandas._libs.tslibs.tzconversion.Localizer.utc_val_to_local_val
    ???
tzconversion.pyx:755: in pandas._libs.tslibs.tzconversion._tz_localize_using_tzinfo_api
    ???
tzconversion.pyx:787: in pandas._libs.tslibs.tzconversion._astimezone
    ???
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py:144: in fromutc
    return f(self, dt)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py:261: in fromutc
    _fold = self._fold_status(dt, dt_wall)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py:196: in _fold_status
    if self.is_ambiguous(dt_wall):
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py:254: in is_ambiguous
    naive_dst = self._naive_is_dst(dt)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = tzlocal(), dt = datetime.datetime(1969, 12, 31, 21, 0, tzinfo=tzlocal())

    def _naive_is_dst(self, dt):
        timestamp = _datetime_to_timestamp(dt)
&gt;       return time.localtime(timestamp + time.timezone).tm_isdst
E       OSError: [Errno 22] Invalid argument

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py:260: OSError

During handling of the above exception, another exception occurred:

cls = &lt;class '_pytest.runner.CallInfo'&gt;
func = &lt;function call_and_report.&lt;locals&gt;.&lt;lambda&gt; at 0x0000015D28540C20&gt;
when = 'call'
reraise = (&lt;class '_pytest.outcomes.Exit'&gt;, &lt;class 'KeyboardInterrupt'&gt;)

    @classmethod
    def from_call(
        cls,
        func: Callable[[], TResult],
        when: Literal["collect", "setup", "call", "teardown"],
        reraise: type[BaseException] | tuple[type[BaseException], ...] | None = None,
    ) -&gt; CallInfo[TResult]:
        """Call func, wrapping the result in a CallInfo.
    
        :param func:
            The function to call. Called without arguments.
        :type func: Callable[[], _pytest.runner.TResult]
        :param when:
            The phase in which the function is called.
        :param reraise:
            Exception or exceptions that shall propagate if raised by the
            function, instead of being wrapped in the CallInfo.
        """
        excinfo = None
        start = timing.time()
        precise_start = timing.perf_counter()
        try:
&gt;           result: TResult | None = func()

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\runner.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\runner.py:242: in &lt;lambda&gt;
    lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pluggy\_hooks.py:513: in __call__
    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pluggy\_manager.py:120: in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\threadexception.py:92: in pytest_runtest_call
    yield from thread_exception_runtest_hook()
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\threadexception.py:68: in thread_exception_runtest_hook
    yield
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\unraisableexception.py:95: in pytest_runtest_call
    yield from unraisable_exception_runtest_hook()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

    def unraisable_exception_runtest_hook() -&gt; Generator[None, None, None]:
        with catch_unraisable_exception() as cm:
            try:
                yield
            finally:
                if cm.unraisable:
                    if cm.unraisable.err_msg is not None:
                        err_msg = cm.unraisable.err_msg
                    else:
                        err_msg = "Exception ignored in"
                    msg = f"{err_msg}: {cm.unraisable.object!r}\n\n"
                    msg += "".join(
                        traceback.format_exception(
                            cm.unraisable.exc_type,
                            cm.unraisable.exc_value,
                            cm.unraisable.exc_traceback,
                        )
                    )
&gt;                   warnings.warn(pytest.PytestUnraisableExceptionWarning(msg))
E                   pytest.PytestUnraisableExceptionWarning: Exception ignored in: 'pandas._libs.tslibs.conversion._localize_tso'
E                   
E                   Traceback (most recent call last):
E                     File "tzconversion.pyx", line 129, in pandas._libs.tslibs.tzconversion.Localizer.utc_val_to_local_val
E                     File "tzconversion.pyx", line 755, in pandas._libs.tslibs.tzconversion._tz_localize_using_tzinfo_api
E                     File "tzconversion.pyx", line 787, in pandas._libs.tslibs.tzconversion._astimezone
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 144, in fromutc
E                       return f(self, dt)
E                              ^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 261, in fromutc
E                       _fold = self._fold_status(dt, dt_wall)
E                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 196, in _fold_status
E                       if self.is_ambiguous(dt_wall):
E                          ^^^^^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py", line 254, in is_ambiguous
E                       naive_dst = self._naive_is_dst(dt)
E                                   ^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py", line 260, in _naive_is_dst
E                       return time.localtime(timestamp + time.timezone).tm_isdst
E                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E                   OSError: [Errno 22] Invalid argument

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\unraisableexception.py:85: PytestUnraisableExceptionWarning</failure></testcase><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[tzlocal()-DataFrame-other0]" time="0.034"><failure message="pytest.PytestUnraisableExceptionWarning: Exception ignored in: 'pandas._libs.tslibs.conversion._localize_tso'&#10;&#10;Traceback (most recent call last):&#10;  File &quot;tzconversion.pyx&quot;, line 129, in pandas._libs.tslibs.tzconversion.Localizer.utc_val_to_local_val&#10;  File &quot;tzconversion.pyx&quot;, line 755, in pandas._libs.tslibs.tzconversion._tz_localize_using_tzinfo_api&#10;  File &quot;tzconversion.pyx&quot;, line 787, in pandas._libs.tslibs.tzconversion._astimezone&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 144, in fromutc&#10;    return f(self, dt)&#10;           ^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 261, in fromutc&#10;    _fold = self._fold_status(dt, dt_wall)&#10;            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 196, in _fold_status&#10;    if self.is_ambiguous(dt_wall):&#10;       ^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py&quot;, line 254, in is_ambiguous&#10;    naive_dst = self._naive_is_dst(dt)&#10;                ^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py&quot;, line 260, in _naive_is_dst&#10;    return time.localtime(timestamp + time.timezone).tm_isdst&#10;           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;OSError: [Errno 22] Invalid argument">cls = &lt;class '_pytest.runner.CallInfo'&gt;
func = &lt;function call_and_report.&lt;locals&gt;.&lt;lambda&gt; at 0x0000015D28542200&gt;
when = 'call'
reraise = (&lt;class '_pytest.outcomes.Exit'&gt;, &lt;class 'KeyboardInterrupt'&gt;)

    @classmethod
    def from_call(
        cls,
        func: Callable[[], TResult],
        when: Literal["collect", "setup", "call", "teardown"],
        reraise: type[BaseException] | tuple[type[BaseException], ...] | None = None,
    ) -&gt; CallInfo[TResult]:
        """Call func, wrapping the result in a CallInfo.
    
        :param func:
            The function to call. Called without arguments.
        :type func: Callable[[], _pytest.runner.TResult]
        :param when:
            The phase in which the function is called.
        :param reraise:
            Exception or exceptions that shall propagate if raised by the
            function, instead of being wrapped in the CallInfo.
        """
        excinfo = None
        start = timing.time()
        precise_start = timing.perf_counter()
        try:
&gt;           result: TResult | None = func()

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\runner.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\runner.py:242: in &lt;lambda&gt;
    lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pluggy\_hooks.py:513: in __call__
    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pluggy\_manager.py:120: in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\threadexception.py:92: in pytest_runtest_call
    yield from thread_exception_runtest_hook()
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\threadexception.py:68: in thread_exception_runtest_hook
    yield
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\unraisableexception.py:95: in pytest_runtest_call
    yield from unraisable_exception_runtest_hook()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

    def unraisable_exception_runtest_hook() -&gt; Generator[None, None, None]:
        with catch_unraisable_exception() as cm:
            try:
                yield
            finally:
                if cm.unraisable:
                    if cm.unraisable.err_msg is not None:
                        err_msg = cm.unraisable.err_msg
                    else:
                        err_msg = "Exception ignored in"
                    msg = f"{err_msg}: {cm.unraisable.object!r}\n\n"
                    msg += "".join(
                        traceback.format_exception(
                            cm.unraisable.exc_type,
                            cm.unraisable.exc_value,
                            cm.unraisable.exc_traceback,
                        )
                    )
&gt;                   warnings.warn(pytest.PytestUnraisableExceptionWarning(msg))
E                   pytest.PytestUnraisableExceptionWarning: Exception ignored in: 'pandas._libs.tslibs.conversion._localize_tso'
E                   
E                   Traceback (most recent call last):
E                     File "tzconversion.pyx", line 129, in pandas._libs.tslibs.tzconversion.Localizer.utc_val_to_local_val
E                     File "tzconversion.pyx", line 755, in pandas._libs.tslibs.tzconversion._tz_localize_using_tzinfo_api
E                     File "tzconversion.pyx", line 787, in pandas._libs.tslibs.tzconversion._astimezone
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 144, in fromutc
E                       return f(self, dt)
E                              ^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 261, in fromutc
E                       _fold = self._fold_status(dt, dt_wall)
E                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 196, in _fold_status
E                       if self.is_ambiguous(dt_wall):
E                          ^^^^^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py", line 254, in is_ambiguous
E                       naive_dst = self._naive_is_dst(dt)
E                                   ^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py", line 260, in _naive_is_dst
E                       return time.localtime(timestamp + time.timezone).tm_isdst
E                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E                   OSError: [Errno 22] Invalid argument

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\unraisableexception.py:85: PytestUnraisableExceptionWarning</failure></testcase><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[tzlocal()-DataFrame-other1]" time="0.028"><failure message="pytest.PytestUnraisableExceptionWarning: Exception ignored in: 'pandas._libs.tslibs.conversion._localize_tso'&#10;&#10;Traceback (most recent call last):&#10;  File &quot;tzconversion.pyx&quot;, line 129, in pandas._libs.tslibs.tzconversion.Localizer.utc_val_to_local_val&#10;  File &quot;tzconversion.pyx&quot;, line 755, in pandas._libs.tslibs.tzconversion._tz_localize_using_tzinfo_api&#10;  File &quot;tzconversion.pyx&quot;, line 787, in pandas._libs.tslibs.tzconversion._astimezone&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 144, in fromutc&#10;    return f(self, dt)&#10;           ^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 261, in fromutc&#10;    _fold = self._fold_status(dt, dt_wall)&#10;            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 196, in _fold_status&#10;    if self.is_ambiguous(dt_wall):&#10;       ^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py&quot;, line 254, in is_ambiguous&#10;    naive_dst = self._naive_is_dst(dt)&#10;                ^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py&quot;, line 260, in _naive_is_dst&#10;    return time.localtime(timestamp + time.timezone).tm_isdst&#10;           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;OSError: [Errno 22] Invalid argument">cls = &lt;class '_pytest.runner.CallInfo'&gt;
func = &lt;function call_and_report.&lt;locals&gt;.&lt;lambda&gt; at 0x0000015D28541BC0&gt;
when = 'call'
reraise = (&lt;class '_pytest.outcomes.Exit'&gt;, &lt;class 'KeyboardInterrupt'&gt;)

    @classmethod
    def from_call(
        cls,
        func: Callable[[], TResult],
        when: Literal["collect", "setup", "call", "teardown"],
        reraise: type[BaseException] | tuple[type[BaseException], ...] | None = None,
    ) -&gt; CallInfo[TResult]:
        """Call func, wrapping the result in a CallInfo.
    
        :param func:
            The function to call. Called without arguments.
        :type func: Callable[[], _pytest.runner.TResult]
        :param when:
            The phase in which the function is called.
        :param reraise:
            Exception or exceptions that shall propagate if raised by the
            function, instead of being wrapped in the CallInfo.
        """
        excinfo = None
        start = timing.time()
        precise_start = timing.perf_counter()
        try:
&gt;           result: TResult | None = func()

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\runner.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\runner.py:242: in &lt;lambda&gt;
    lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pluggy\_hooks.py:513: in __call__
    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pluggy\_manager.py:120: in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\threadexception.py:92: in pytest_runtest_call
    yield from thread_exception_runtest_hook()
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\threadexception.py:68: in thread_exception_runtest_hook
    yield
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\unraisableexception.py:95: in pytest_runtest_call
    yield from unraisable_exception_runtest_hook()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

    def unraisable_exception_runtest_hook() -&gt; Generator[None, None, None]:
        with catch_unraisable_exception() as cm:
            try:
                yield
            finally:
                if cm.unraisable:
                    if cm.unraisable.err_msg is not None:
                        err_msg = cm.unraisable.err_msg
                    else:
                        err_msg = "Exception ignored in"
                    msg = f"{err_msg}: {cm.unraisable.object!r}\n\n"
                    msg += "".join(
                        traceback.format_exception(
                            cm.unraisable.exc_type,
                            cm.unraisable.exc_value,
                            cm.unraisable.exc_traceback,
                        )
                    )
&gt;                   warnings.warn(pytest.PytestUnraisableExceptionWarning(msg))
E                   pytest.PytestUnraisableExceptionWarning: Exception ignored in: 'pandas._libs.tslibs.conversion._localize_tso'
E                   
E                   Traceback (most recent call last):
E                     File "tzconversion.pyx", line 129, in pandas._libs.tslibs.tzconversion.Localizer.utc_val_to_local_val
E                     File "tzconversion.pyx", line 755, in pandas._libs.tslibs.tzconversion._tz_localize_using_tzinfo_api
E                     File "tzconversion.pyx", line 787, in pandas._libs.tslibs.tzconversion._astimezone
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 144, in fromutc
E                       return f(self, dt)
E                              ^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 261, in fromutc
E                       _fold = self._fold_status(dt, dt_wall)
E                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 196, in _fold_status
E                       if self.is_ambiguous(dt_wall):
E                          ^^^^^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py", line 254, in is_ambiguous
E                       naive_dst = self._naive_is_dst(dt)
E                                   ^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py", line 260, in _naive_is_dst
E                       return time.localtime(timestamp + time.timezone).tm_isdst
E                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E                   OSError: [Errno 22] Invalid argument

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\unraisableexception.py:85: PytestUnraisableExceptionWarning</failure></testcase><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[tzlocal()-DataFrame-other2]" time="0.030"><failure message="pytest.PytestUnraisableExceptionWarning: Exception ignored in: 'pandas._libs.tslibs.conversion._localize_tso'&#10;&#10;Traceback (most recent call last):&#10;  File &quot;tzconversion.pyx&quot;, line 129, in pandas._libs.tslibs.tzconversion.Localizer.utc_val_to_local_val&#10;  File &quot;tzconversion.pyx&quot;, line 755, in pandas._libs.tslibs.tzconversion._tz_localize_using_tzinfo_api&#10;  File &quot;tzconversion.pyx&quot;, line 787, in pandas._libs.tslibs.tzconversion._astimezone&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 144, in fromutc&#10;    return f(self, dt)&#10;           ^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 261, in fromutc&#10;    _fold = self._fold_status(dt, dt_wall)&#10;            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 196, in _fold_status&#10;    if self.is_ambiguous(dt_wall):&#10;       ^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py&quot;, line 254, in is_ambiguous&#10;    naive_dst = self._naive_is_dst(dt)&#10;                ^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py&quot;, line 260, in _naive_is_dst&#10;    return time.localtime(timestamp + time.timezone).tm_isdst&#10;           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;OSError: [Errno 22] Invalid argument">cls = &lt;class '_pytest.runner.CallInfo'&gt;
func = &lt;function call_and_report.&lt;locals&gt;.&lt;lambda&gt; at 0x0000015D28540AE0&gt;
when = 'call'
reraise = (&lt;class '_pytest.outcomes.Exit'&gt;, &lt;class 'KeyboardInterrupt'&gt;)

    @classmethod
    def from_call(
        cls,
        func: Callable[[], TResult],
        when: Literal["collect", "setup", "call", "teardown"],
        reraise: type[BaseException] | tuple[type[BaseException], ...] | None = None,
    ) -&gt; CallInfo[TResult]:
        """Call func, wrapping the result in a CallInfo.
    
        :param func:
            The function to call. Called without arguments.
        :type func: Callable[[], _pytest.runner.TResult]
        :param when:
            The phase in which the function is called.
        :param reraise:
            Exception or exceptions that shall propagate if raised by the
            function, instead of being wrapped in the CallInfo.
        """
        excinfo = None
        start = timing.time()
        precise_start = timing.perf_counter()
        try:
&gt;           result: TResult | None = func()

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\runner.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\runner.py:242: in &lt;lambda&gt;
    lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pluggy\_hooks.py:513: in __call__
    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pluggy\_manager.py:120: in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\threadexception.py:92: in pytest_runtest_call
    yield from thread_exception_runtest_hook()
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\threadexception.py:68: in thread_exception_runtest_hook
    yield
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\unraisableexception.py:95: in pytest_runtest_call
    yield from unraisable_exception_runtest_hook()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

    def unraisable_exception_runtest_hook() -&gt; Generator[None, None, None]:
        with catch_unraisable_exception() as cm:
            try:
                yield
            finally:
                if cm.unraisable:
                    if cm.unraisable.err_msg is not None:
                        err_msg = cm.unraisable.err_msg
                    else:
                        err_msg = "Exception ignored in"
                    msg = f"{err_msg}: {cm.unraisable.object!r}\n\n"
                    msg += "".join(
                        traceback.format_exception(
                            cm.unraisable.exc_type,
                            cm.unraisable.exc_value,
                            cm.unraisable.exc_traceback,
                        )
                    )
&gt;                   warnings.warn(pytest.PytestUnraisableExceptionWarning(msg))
E                   pytest.PytestUnraisableExceptionWarning: Exception ignored in: 'pandas._libs.tslibs.conversion._localize_tso'
E                   
E                   Traceback (most recent call last):
E                     File "tzconversion.pyx", line 129, in pandas._libs.tslibs.tzconversion.Localizer.utc_val_to_local_val
E                     File "tzconversion.pyx", line 755, in pandas._libs.tslibs.tzconversion._tz_localize_using_tzinfo_api
E                     File "tzconversion.pyx", line 787, in pandas._libs.tslibs.tzconversion._astimezone
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 144, in fromutc
E                       return f(self, dt)
E                              ^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 261, in fromutc
E                       _fold = self._fold_status(dt, dt_wall)
E                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 196, in _fold_status
E                       if self.is_ambiguous(dt_wall):
E                          ^^^^^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py", line 254, in is_ambiguous
E                       naive_dst = self._naive_is_dst(dt)
E                                   ^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py", line 260, in _naive_is_dst
E                       return time.localtime(timestamp + time.timezone).tm_isdst
E                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E                   OSError: [Errno 22] Invalid argument

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\unraisableexception.py:85: PytestUnraisableExceptionWarning</failure></testcase><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[tzlocal()-DataFrame-other3]" time="0.016"><failure message="pytest.PytestUnraisableExceptionWarning: Exception ignored in: 'pandas._libs.tslibs.conversion._localize_tso'&#10;&#10;Traceback (most recent call last):&#10;  File &quot;tzconversion.pyx&quot;, line 129, in pandas._libs.tslibs.tzconversion.Localizer.utc_val_to_local_val&#10;  File &quot;tzconversion.pyx&quot;, line 755, in pandas._libs.tslibs.tzconversion._tz_localize_using_tzinfo_api&#10;  File &quot;tzconversion.pyx&quot;, line 787, in pandas._libs.tslibs.tzconversion._astimezone&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 144, in fromutc&#10;    return f(self, dt)&#10;           ^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 261, in fromutc&#10;    _fold = self._fold_status(dt, dt_wall)&#10;            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 196, in _fold_status&#10;    if self.is_ambiguous(dt_wall):&#10;       ^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py&quot;, line 254, in is_ambiguous&#10;    naive_dst = self._naive_is_dst(dt)&#10;                ^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py&quot;, line 260, in _naive_is_dst&#10;    return time.localtime(timestamp + time.timezone).tm_isdst&#10;           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;OSError: [Errno 22] Invalid argument">self = &lt;pandas.tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons object at 0x0000015D7CA9AC00&gt;
other = array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9], dtype=object)
tz_naive_fixture = tzlocal()
box_with_array = &lt;class 'pandas.core.frame.DataFrame'&gt;

    @pytest.mark.parametrize(
        "other",
        [
            # GH#4968 invalid date/int comparisons
            list(range(10)),
            np.arange(10),
            np.arange(10).astype(np.float32),
            np.arange(10).astype(object),
            pd.timedelta_range("1ns", periods=10).array,
            np.array(pd.timedelta_range("1ns", periods=10)),
            list(pd.timedelta_range("1ns", periods=10)),
            pd.timedelta_range("1 Day", periods=10).astype(object),
            pd.period_range("1971-01-01", freq="D", periods=10).array,
            pd.period_range("1971-01-01", freq="D", periods=10).astype(object),
        ],
    )
    def test_dt64arr_cmp_arraylike_invalid(
        self, other, tz_naive_fixture, box_with_array
    ):
        tz = tz_naive_fixture
    
        dta = date_range("1970-01-01", freq="ns", periods=10, tz=tz)._data
        obj = tm.box_expected(dta, box_with_array)
&gt;       assert_invalid_comparison(obj, other, box_with_array)

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\arithmetic\test_datetime64.py:117: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\arithmetic\common.py:111: in assert_invalid_comparison
    result = xbox2(left == right)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\ops\common.py:76: in new_method
    return method(self, other)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\arraylike.py:40: in __eq__
    return self._cmp_method(other, operator.eq)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\frame.py:7900: in _cmp_method
    new_data = self._dispatch_frame_op(other, op, axis=axis)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\frame.py:7956: in _dispatch_frame_op
    bm = self._mgr.operate_blockwise(
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\internals\managers.py:1511: in operate_blockwise
    return operate_blockwise(self, other, array_op)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\internals\ops.py:65: in operate_blockwise
    res_values = array_op(lvals, rvals)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\ops\array_ops.py:330: in comparison_op
    res_values = op(lvalues, rvalues)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\ops\common.py:76: in new_method
    return method(self, other)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\arraylike.py:40: in __eq__
    return self._cmp_method(other, operator.eq)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\arrays\datetimelike.py:980: in _cmp_method
    return op(self.ravel(), other.ravel()).reshape(self.shape)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\ops\common.py:76: in new_method
    return method(self, other)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\arraylike.py:40: in __eq__
    return self._cmp_method(other, operator.eq)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\arrays\datetimelike.py:992: in _cmp_method
    op, np.asarray(self.astype(object)), other
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\arrays\datetimes.py:739: in astype
    return dtl.DatetimeLikeArrayMixin.astype(self, dtype, copy)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\arrays\datetimelike.py:460: in astype
    converted = ints_to_pydatetime(
vectorized.pyx:166: in pandas._libs.tslibs.vectorized.ints_to_pydatetime
    ???
tzconversion.pyx:129: in pandas._libs.tslibs.tzconversion.Localizer.utc_val_to_local_val
    ???
tzconversion.pyx:755: in pandas._libs.tslibs.tzconversion._tz_localize_using_tzinfo_api
    ???
tzconversion.pyx:787: in pandas._libs.tslibs.tzconversion._astimezone
    ???
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py:144: in fromutc
    return f(self, dt)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py:261: in fromutc
    _fold = self._fold_status(dt, dt_wall)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py:196: in _fold_status
    if self.is_ambiguous(dt_wall):
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py:254: in is_ambiguous
    naive_dst = self._naive_is_dst(dt)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = tzlocal(), dt = datetime.datetime(1969, 12, 31, 21, 0, tzinfo=tzlocal())

    def _naive_is_dst(self, dt):
        timestamp = _datetime_to_timestamp(dt)
&gt;       return time.localtime(timestamp + time.timezone).tm_isdst
E       OSError: [Errno 22] Invalid argument

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py:260: OSError

During handling of the above exception, another exception occurred:

cls = &lt;class '_pytest.runner.CallInfo'&gt;
func = &lt;function call_and_report.&lt;locals&gt;.&lt;lambda&gt; at 0x0000015D28541EE0&gt;
when = 'call'
reraise = (&lt;class '_pytest.outcomes.Exit'&gt;, &lt;class 'KeyboardInterrupt'&gt;)

    @classmethod
    def from_call(
        cls,
        func: Callable[[], TResult],
        when: Literal["collect", "setup", "call", "teardown"],
        reraise: type[BaseException] | tuple[type[BaseException], ...] | None = None,
    ) -&gt; CallInfo[TResult]:
        """Call func, wrapping the result in a CallInfo.
    
        :param func:
            The function to call. Called without arguments.
        :type func: Callable[[], _pytest.runner.TResult]
        :param when:
            The phase in which the function is called.
        :param reraise:
            Exception or exceptions that shall propagate if raised by the
            function, instead of being wrapped in the CallInfo.
        """
        excinfo = None
        start = timing.time()
        precise_start = timing.perf_counter()
        try:
&gt;           result: TResult | None = func()

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\runner.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\runner.py:242: in &lt;lambda&gt;
    lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pluggy\_hooks.py:513: in __call__
    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pluggy\_manager.py:120: in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\threadexception.py:92: in pytest_runtest_call
    yield from thread_exception_runtest_hook()
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\threadexception.py:68: in thread_exception_runtest_hook
    yield
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\unraisableexception.py:95: in pytest_runtest_call
    yield from unraisable_exception_runtest_hook()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

    def unraisable_exception_runtest_hook() -&gt; Generator[None, None, None]:
        with catch_unraisable_exception() as cm:
            try:
                yield
            finally:
                if cm.unraisable:
                    if cm.unraisable.err_msg is not None:
                        err_msg = cm.unraisable.err_msg
                    else:
                        err_msg = "Exception ignored in"
                    msg = f"{err_msg}: {cm.unraisable.object!r}\n\n"
                    msg += "".join(
                        traceback.format_exception(
                            cm.unraisable.exc_type,
                            cm.unraisable.exc_value,
                            cm.unraisable.exc_traceback,
                        )
                    )
&gt;                   warnings.warn(pytest.PytestUnraisableExceptionWarning(msg))
E                   pytest.PytestUnraisableExceptionWarning: Exception ignored in: 'pandas._libs.tslibs.conversion._localize_tso'
E                   
E                   Traceback (most recent call last):
E                     File "tzconversion.pyx", line 129, in pandas._libs.tslibs.tzconversion.Localizer.utc_val_to_local_val
E                     File "tzconversion.pyx", line 755, in pandas._libs.tslibs.tzconversion._tz_localize_using_tzinfo_api
E                     File "tzconversion.pyx", line 787, in pandas._libs.tslibs.tzconversion._astimezone
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 144, in fromutc
E                       return f(self, dt)
E                              ^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 261, in fromutc
E                       _fold = self._fold_status(dt, dt_wall)
E                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 196, in _fold_status
E                       if self.is_ambiguous(dt_wall):
E                          ^^^^^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py", line 254, in is_ambiguous
E                       naive_dst = self._naive_is_dst(dt)
E                                   ^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py", line 260, in _naive_is_dst
E                       return time.localtime(timestamp + time.timezone).tm_isdst
E                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E                   OSError: [Errno 22] Invalid argument

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\unraisableexception.py:85: PytestUnraisableExceptionWarning</failure></testcase><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[tzlocal()-DataFrame-other4]" time="0.021"><failure message="pytest.PytestUnraisableExceptionWarning: Exception ignored in: 'pandas._libs.tslibs.conversion._localize_tso'&#10;&#10;Traceback (most recent call last):&#10;  File &quot;tzconversion.pyx&quot;, line 129, in pandas._libs.tslibs.tzconversion.Localizer.utc_val_to_local_val&#10;  File &quot;tzconversion.pyx&quot;, line 755, in pandas._libs.tslibs.tzconversion._tz_localize_using_tzinfo_api&#10;  File &quot;tzconversion.pyx&quot;, line 787, in pandas._libs.tslibs.tzconversion._astimezone&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 144, in fromutc&#10;    return f(self, dt)&#10;           ^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 261, in fromutc&#10;    _fold = self._fold_status(dt, dt_wall)&#10;            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 196, in _fold_status&#10;    if self.is_ambiguous(dt_wall):&#10;       ^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py&quot;, line 254, in is_ambiguous&#10;    naive_dst = self._naive_is_dst(dt)&#10;                ^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py&quot;, line 260, in _naive_is_dst&#10;    return time.localtime(timestamp + time.timezone).tm_isdst&#10;           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;OSError: [Errno 22] Invalid argument">cls = &lt;class '_pytest.runner.CallInfo'&gt;
func = &lt;function call_and_report.&lt;locals&gt;.&lt;lambda&gt; at 0x0000015D285439C0&gt;
when = 'call'
reraise = (&lt;class '_pytest.outcomes.Exit'&gt;, &lt;class 'KeyboardInterrupt'&gt;)

    @classmethod
    def from_call(
        cls,
        func: Callable[[], TResult],
        when: Literal["collect", "setup", "call", "teardown"],
        reraise: type[BaseException] | tuple[type[BaseException], ...] | None = None,
    ) -&gt; CallInfo[TResult]:
        """Call func, wrapping the result in a CallInfo.
    
        :param func:
            The function to call. Called without arguments.
        :type func: Callable[[], _pytest.runner.TResult]
        :param when:
            The phase in which the function is called.
        :param reraise:
            Exception or exceptions that shall propagate if raised by the
            function, instead of being wrapped in the CallInfo.
        """
        excinfo = None
        start = timing.time()
        precise_start = timing.perf_counter()
        try:
&gt;           result: TResult | None = func()

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\runner.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\runner.py:242: in &lt;lambda&gt;
    lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pluggy\_hooks.py:513: in __call__
    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pluggy\_manager.py:120: in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\threadexception.py:92: in pytest_runtest_call
    yield from thread_exception_runtest_hook()
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\threadexception.py:68: in thread_exception_runtest_hook
    yield
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\unraisableexception.py:95: in pytest_runtest_call
    yield from unraisable_exception_runtest_hook()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

    def unraisable_exception_runtest_hook() -&gt; Generator[None, None, None]:
        with catch_unraisable_exception() as cm:
            try:
                yield
            finally:
                if cm.unraisable:
                    if cm.unraisable.err_msg is not None:
                        err_msg = cm.unraisable.err_msg
                    else:
                        err_msg = "Exception ignored in"
                    msg = f"{err_msg}: {cm.unraisable.object!r}\n\n"
                    msg += "".join(
                        traceback.format_exception(
                            cm.unraisable.exc_type,
                            cm.unraisable.exc_value,
                            cm.unraisable.exc_traceback,
                        )
                    )
&gt;                   warnings.warn(pytest.PytestUnraisableExceptionWarning(msg))
E                   pytest.PytestUnraisableExceptionWarning: Exception ignored in: 'pandas._libs.tslibs.conversion._localize_tso'
E                   
E                   Traceback (most recent call last):
E                     File "tzconversion.pyx", line 129, in pandas._libs.tslibs.tzconversion.Localizer.utc_val_to_local_val
E                     File "tzconversion.pyx", line 755, in pandas._libs.tslibs.tzconversion._tz_localize_using_tzinfo_api
E                     File "tzconversion.pyx", line 787, in pandas._libs.tslibs.tzconversion._astimezone
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 144, in fromutc
E                       return f(self, dt)
E                              ^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 261, in fromutc
E                       _fold = self._fold_status(dt, dt_wall)
E                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 196, in _fold_status
E                       if self.is_ambiguous(dt_wall):
E                          ^^^^^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py", line 254, in is_ambiguous
E                       naive_dst = self._naive_is_dst(dt)
E                                   ^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py", line 260, in _naive_is_dst
E                       return time.localtime(timestamp + time.timezone).tm_isdst
E                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E                   OSError: [Errno 22] Invalid argument

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\unraisableexception.py:85: PytestUnraisableExceptionWarning</failure></testcase><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[tzlocal()-DataFrame-other5]" time="0.020"><failure message="pytest.PytestUnraisableExceptionWarning: Exception ignored in: 'pandas._libs.tslibs.conversion._localize_tso'&#10;&#10;Traceback (most recent call last):&#10;  File &quot;tzconversion.pyx&quot;, line 129, in pandas._libs.tslibs.tzconversion.Localizer.utc_val_to_local_val&#10;  File &quot;tzconversion.pyx&quot;, line 755, in pandas._libs.tslibs.tzconversion._tz_localize_using_tzinfo_api&#10;  File &quot;tzconversion.pyx&quot;, line 787, in pandas._libs.tslibs.tzconversion._astimezone&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 144, in fromutc&#10;    return f(self, dt)&#10;           ^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 261, in fromutc&#10;    _fold = self._fold_status(dt, dt_wall)&#10;            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 196, in _fold_status&#10;    if self.is_ambiguous(dt_wall):&#10;       ^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py&quot;, line 254, in is_ambiguous&#10;    naive_dst = self._naive_is_dst(dt)&#10;                ^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py&quot;, line 260, in _naive_is_dst&#10;    return time.localtime(timestamp + time.timezone).tm_isdst&#10;           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;OSError: [Errno 22] Invalid argument">cls = &lt;class '_pytest.runner.CallInfo'&gt;
func = &lt;function call_and_report.&lt;locals&gt;.&lt;lambda&gt; at 0x0000015D28542B60&gt;
when = 'call'
reraise = (&lt;class '_pytest.outcomes.Exit'&gt;, &lt;class 'KeyboardInterrupt'&gt;)

    @classmethod
    def from_call(
        cls,
        func: Callable[[], TResult],
        when: Literal["collect", "setup", "call", "teardown"],
        reraise: type[BaseException] | tuple[type[BaseException], ...] | None = None,
    ) -&gt; CallInfo[TResult]:
        """Call func, wrapping the result in a CallInfo.
    
        :param func:
            The function to call. Called without arguments.
        :type func: Callable[[], _pytest.runner.TResult]
        :param when:
            The phase in which the function is called.
        :param reraise:
            Exception or exceptions that shall propagate if raised by the
            function, instead of being wrapped in the CallInfo.
        """
        excinfo = None
        start = timing.time()
        precise_start = timing.perf_counter()
        try:
&gt;           result: TResult | None = func()

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\runner.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\runner.py:242: in &lt;lambda&gt;
    lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pluggy\_hooks.py:513: in __call__
    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pluggy\_manager.py:120: in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\threadexception.py:92: in pytest_runtest_call
    yield from thread_exception_runtest_hook()
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\threadexception.py:68: in thread_exception_runtest_hook
    yield
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\unraisableexception.py:95: in pytest_runtest_call
    yield from unraisable_exception_runtest_hook()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

    def unraisable_exception_runtest_hook() -&gt; Generator[None, None, None]:
        with catch_unraisable_exception() as cm:
            try:
                yield
            finally:
                if cm.unraisable:
                    if cm.unraisable.err_msg is not None:
                        err_msg = cm.unraisable.err_msg
                    else:
                        err_msg = "Exception ignored in"
                    msg = f"{err_msg}: {cm.unraisable.object!r}\n\n"
                    msg += "".join(
                        traceback.format_exception(
                            cm.unraisable.exc_type,
                            cm.unraisable.exc_value,
                            cm.unraisable.exc_traceback,
                        )
                    )
&gt;                   warnings.warn(pytest.PytestUnraisableExceptionWarning(msg))
E                   pytest.PytestUnraisableExceptionWarning: Exception ignored in: 'pandas._libs.tslibs.conversion._localize_tso'
E                   
E                   Traceback (most recent call last):
E                     File "tzconversion.pyx", line 129, in pandas._libs.tslibs.tzconversion.Localizer.utc_val_to_local_val
E                     File "tzconversion.pyx", line 755, in pandas._libs.tslibs.tzconversion._tz_localize_using_tzinfo_api
E                     File "tzconversion.pyx", line 787, in pandas._libs.tslibs.tzconversion._astimezone
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 144, in fromutc
E                       return f(self, dt)
E                              ^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 261, in fromutc
E                       _fold = self._fold_status(dt, dt_wall)
E                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 196, in _fold_status
E                       if self.is_ambiguous(dt_wall):
E                          ^^^^^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py", line 254, in is_ambiguous
E                       naive_dst = self._naive_is_dst(dt)
E                                   ^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py", line 260, in _naive_is_dst
E                       return time.localtime(timestamp + time.timezone).tm_isdst
E                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E                   OSError: [Errno 22] Invalid argument

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\unraisableexception.py:85: PytestUnraisableExceptionWarning</failure></testcase><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[tzlocal()-DataFrame-other6]" time="0.024"><failure message="pytest.PytestUnraisableExceptionWarning: Exception ignored in: 'pandas._libs.tslibs.conversion._localize_tso'&#10;&#10;Traceback (most recent call last):&#10;  File &quot;tzconversion.pyx&quot;, line 129, in pandas._libs.tslibs.tzconversion.Localizer.utc_val_to_local_val&#10;  File &quot;tzconversion.pyx&quot;, line 755, in pandas._libs.tslibs.tzconversion._tz_localize_using_tzinfo_api&#10;  File &quot;tzconversion.pyx&quot;, line 787, in pandas._libs.tslibs.tzconversion._astimezone&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 144, in fromutc&#10;    return f(self, dt)&#10;           ^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 261, in fromutc&#10;    _fold = self._fold_status(dt, dt_wall)&#10;            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 196, in _fold_status&#10;    if self.is_ambiguous(dt_wall):&#10;       ^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py&quot;, line 254, in is_ambiguous&#10;    naive_dst = self._naive_is_dst(dt)&#10;                ^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py&quot;, line 260, in _naive_is_dst&#10;    return time.localtime(timestamp + time.timezone).tm_isdst&#10;           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;OSError: [Errno 22] Invalid argument">cls = &lt;class '_pytest.runner.CallInfo'&gt;
func = &lt;function call_and_report.&lt;locals&gt;.&lt;lambda&gt; at 0x0000015D28543B00&gt;
when = 'call'
reraise = (&lt;class '_pytest.outcomes.Exit'&gt;, &lt;class 'KeyboardInterrupt'&gt;)

    @classmethod
    def from_call(
        cls,
        func: Callable[[], TResult],
        when: Literal["collect", "setup", "call", "teardown"],
        reraise: type[BaseException] | tuple[type[BaseException], ...] | None = None,
    ) -&gt; CallInfo[TResult]:
        """Call func, wrapping the result in a CallInfo.
    
        :param func:
            The function to call. Called without arguments.
        :type func: Callable[[], _pytest.runner.TResult]
        :param when:
            The phase in which the function is called.
        :param reraise:
            Exception or exceptions that shall propagate if raised by the
            function, instead of being wrapped in the CallInfo.
        """
        excinfo = None
        start = timing.time()
        precise_start = timing.perf_counter()
        try:
&gt;           result: TResult | None = func()

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\runner.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\runner.py:242: in &lt;lambda&gt;
    lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pluggy\_hooks.py:513: in __call__
    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pluggy\_manager.py:120: in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\threadexception.py:92: in pytest_runtest_call
    yield from thread_exception_runtest_hook()
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\threadexception.py:68: in thread_exception_runtest_hook
    yield
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\unraisableexception.py:95: in pytest_runtest_call
    yield from unraisable_exception_runtest_hook()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

    def unraisable_exception_runtest_hook() -&gt; Generator[None, None, None]:
        with catch_unraisable_exception() as cm:
            try:
                yield
            finally:
                if cm.unraisable:
                    if cm.unraisable.err_msg is not None:
                        err_msg = cm.unraisable.err_msg
                    else:
                        err_msg = "Exception ignored in"
                    msg = f"{err_msg}: {cm.unraisable.object!r}\n\n"
                    msg += "".join(
                        traceback.format_exception(
                            cm.unraisable.exc_type,
                            cm.unraisable.exc_value,
                            cm.unraisable.exc_traceback,
                        )
                    )
&gt;                   warnings.warn(pytest.PytestUnraisableExceptionWarning(msg))
E                   pytest.PytestUnraisableExceptionWarning: Exception ignored in: 'pandas._libs.tslibs.conversion._localize_tso'
E                   
E                   Traceback (most recent call last):
E                     File "tzconversion.pyx", line 129, in pandas._libs.tslibs.tzconversion.Localizer.utc_val_to_local_val
E                     File "tzconversion.pyx", line 755, in pandas._libs.tslibs.tzconversion._tz_localize_using_tzinfo_api
E                     File "tzconversion.pyx", line 787, in pandas._libs.tslibs.tzconversion._astimezone
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 144, in fromutc
E                       return f(self, dt)
E                              ^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 261, in fromutc
E                       _fold = self._fold_status(dt, dt_wall)
E                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 196, in _fold_status
E                       if self.is_ambiguous(dt_wall):
E                          ^^^^^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py", line 254, in is_ambiguous
E                       naive_dst = self._naive_is_dst(dt)
E                                   ^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py", line 260, in _naive_is_dst
E                       return time.localtime(timestamp + time.timezone).tm_isdst
E                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E                   OSError: [Errno 22] Invalid argument

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\unraisableexception.py:85: PytestUnraisableExceptionWarning</failure></testcase><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[tzlocal()-DataFrame-other7]" time="0.046"><failure message="pytest.PytestUnraisableExceptionWarning: Exception ignored in: 'pandas._libs.tslibs.conversion._localize_tso'&#10;&#10;Traceback (most recent call last):&#10;  File &quot;tzconversion.pyx&quot;, line 129, in pandas._libs.tslibs.tzconversion.Localizer.utc_val_to_local_val&#10;  File &quot;tzconversion.pyx&quot;, line 755, in pandas._libs.tslibs.tzconversion._tz_localize_using_tzinfo_api&#10;  File &quot;tzconversion.pyx&quot;, line 787, in pandas._libs.tslibs.tzconversion._astimezone&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 144, in fromutc&#10;    return f(self, dt)&#10;           ^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 261, in fromutc&#10;    _fold = self._fold_status(dt, dt_wall)&#10;            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 196, in _fold_status&#10;    if self.is_ambiguous(dt_wall):&#10;       ^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py&quot;, line 254, in is_ambiguous&#10;    naive_dst = self._naive_is_dst(dt)&#10;                ^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py&quot;, line 260, in _naive_is_dst&#10;    return time.localtime(timestamp + time.timezone).tm_isdst&#10;           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;OSError: [Errno 22] Invalid argument">self = &lt;pandas.tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons object at 0x0000015D7CA9AF00&gt;
other = Index([ 1 days 00:00:00,  2 days 00:00:00,  3 days 00:00:00,  4 days 00:00:00,
        5 days 00:00:00,  6 days 00:00:00,  7 days 00:00:00,  8 days 00:00:00,
        9 days 00:00:00, 10 days 00:00:00],
      dtype='object')
tz_naive_fixture = tzlocal()
box_with_array = &lt;class 'pandas.core.frame.DataFrame'&gt;

    @pytest.mark.parametrize(
        "other",
        [
            # GH#4968 invalid date/int comparisons
            list(range(10)),
            np.arange(10),
            np.arange(10).astype(np.float32),
            np.arange(10).astype(object),
            pd.timedelta_range("1ns", periods=10).array,
            np.array(pd.timedelta_range("1ns", periods=10)),
            list(pd.timedelta_range("1ns", periods=10)),
            pd.timedelta_range("1 Day", periods=10).astype(object),
            pd.period_range("1971-01-01", freq="D", periods=10).array,
            pd.period_range("1971-01-01", freq="D", periods=10).astype(object),
        ],
    )
    def test_dt64arr_cmp_arraylike_invalid(
        self, other, tz_naive_fixture, box_with_array
    ):
        tz = tz_naive_fixture
    
        dta = date_range("1970-01-01", freq="ns", periods=10, tz=tz)._data
        obj = tm.box_expected(dta, box_with_array)
&gt;       assert_invalid_comparison(obj, other, box_with_array)

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\arithmetic\test_datetime64.py:117: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\arithmetic\common.py:111: in assert_invalid_comparison
    result = xbox2(left == right)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\ops\common.py:76: in new_method
    return method(self, other)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\arraylike.py:40: in __eq__
    return self._cmp_method(other, operator.eq)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\frame.py:7900: in _cmp_method
    new_data = self._dispatch_frame_op(other, op, axis=axis)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\frame.py:7956: in _dispatch_frame_op
    bm = self._mgr.operate_blockwise(
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\internals\managers.py:1511: in operate_blockwise
    return operate_blockwise(self, other, array_op)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\internals\ops.py:65: in operate_blockwise
    res_values = array_op(lvals, rvals)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\ops\array_ops.py:330: in comparison_op
    res_values = op(lvalues, rvalues)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\ops\common.py:76: in new_method
    return method(self, other)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\arraylike.py:40: in __eq__
    return self._cmp_method(other, operator.eq)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\arrays\datetimelike.py:980: in _cmp_method
    return op(self.ravel(), other.ravel()).reshape(self.shape)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\ops\common.py:76: in new_method
    return method(self, other)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\arraylike.py:40: in __eq__
    return self._cmp_method(other, operator.eq)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\arrays\datetimelike.py:992: in _cmp_method
    op, np.asarray(self.astype(object)), other
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\arrays\datetimes.py:739: in astype
    return dtl.DatetimeLikeArrayMixin.astype(self, dtype, copy)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\arrays\datetimelike.py:460: in astype
    converted = ints_to_pydatetime(
vectorized.pyx:166: in pandas._libs.tslibs.vectorized.ints_to_pydatetime
    ???
tzconversion.pyx:129: in pandas._libs.tslibs.tzconversion.Localizer.utc_val_to_local_val
    ???
tzconversion.pyx:755: in pandas._libs.tslibs.tzconversion._tz_localize_using_tzinfo_api
    ???
tzconversion.pyx:787: in pandas._libs.tslibs.tzconversion._astimezone
    ???
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py:144: in fromutc
    return f(self, dt)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py:261: in fromutc
    _fold = self._fold_status(dt, dt_wall)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py:196: in _fold_status
    if self.is_ambiguous(dt_wall):
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py:254: in is_ambiguous
    naive_dst = self._naive_is_dst(dt)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = tzlocal(), dt = datetime.datetime(1969, 12, 31, 21, 0, tzinfo=tzlocal())

    def _naive_is_dst(self, dt):
        timestamp = _datetime_to_timestamp(dt)
&gt;       return time.localtime(timestamp + time.timezone).tm_isdst
E       OSError: [Errno 22] Invalid argument

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py:260: OSError

During handling of the above exception, another exception occurred:

cls = &lt;class '_pytest.runner.CallInfo'&gt;
func = &lt;function call_and_report.&lt;locals&gt;.&lt;lambda&gt; at 0x0000015D28542D40&gt;
when = 'call'
reraise = (&lt;class '_pytest.outcomes.Exit'&gt;, &lt;class 'KeyboardInterrupt'&gt;)

    @classmethod
    def from_call(
        cls,
        func: Callable[[], TResult],
        when: Literal["collect", "setup", "call", "teardown"],
        reraise: type[BaseException] | tuple[type[BaseException], ...] | None = None,
    ) -&gt; CallInfo[TResult]:
        """Call func, wrapping the result in a CallInfo.
    
        :param func:
            The function to call. Called without arguments.
        :type func: Callable[[], _pytest.runner.TResult]
        :param when:
            The phase in which the function is called.
        :param reraise:
            Exception or exceptions that shall propagate if raised by the
            function, instead of being wrapped in the CallInfo.
        """
        excinfo = None
        start = timing.time()
        precise_start = timing.perf_counter()
        try:
&gt;           result: TResult | None = func()

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\runner.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\runner.py:242: in &lt;lambda&gt;
    lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pluggy\_hooks.py:513: in __call__
    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pluggy\_manager.py:120: in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\threadexception.py:92: in pytest_runtest_call
    yield from thread_exception_runtest_hook()
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\threadexception.py:68: in thread_exception_runtest_hook
    yield
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\unraisableexception.py:95: in pytest_runtest_call
    yield from unraisable_exception_runtest_hook()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

    def unraisable_exception_runtest_hook() -&gt; Generator[None, None, None]:
        with catch_unraisable_exception() as cm:
            try:
                yield
            finally:
                if cm.unraisable:
                    if cm.unraisable.err_msg is not None:
                        err_msg = cm.unraisable.err_msg
                    else:
                        err_msg = "Exception ignored in"
                    msg = f"{err_msg}: {cm.unraisable.object!r}\n\n"
                    msg += "".join(
                        traceback.format_exception(
                            cm.unraisable.exc_type,
                            cm.unraisable.exc_value,
                            cm.unraisable.exc_traceback,
                        )
                    )
&gt;                   warnings.warn(pytest.PytestUnraisableExceptionWarning(msg))
E                   pytest.PytestUnraisableExceptionWarning: Exception ignored in: 'pandas._libs.tslibs.conversion._localize_tso'
E                   
E                   Traceback (most recent call last):
E                     File "tzconversion.pyx", line 129, in pandas._libs.tslibs.tzconversion.Localizer.utc_val_to_local_val
E                     File "tzconversion.pyx", line 755, in pandas._libs.tslibs.tzconversion._tz_localize_using_tzinfo_api
E                     File "tzconversion.pyx", line 787, in pandas._libs.tslibs.tzconversion._astimezone
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 144, in fromutc
E                       return f(self, dt)
E                              ^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 261, in fromutc
E                       _fold = self._fold_status(dt, dt_wall)
E                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 196, in _fold_status
E                       if self.is_ambiguous(dt_wall):
E                          ^^^^^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py", line 254, in is_ambiguous
E                       naive_dst = self._naive_is_dst(dt)
E                                   ^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py", line 260, in _naive_is_dst
E                       return time.localtime(timestamp + time.timezone).tm_isdst
E                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E                   OSError: [Errno 22] Invalid argument

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\unraisableexception.py:85: PytestUnraisableExceptionWarning</failure></testcase><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[tzlocal()-DataFrame-other8]" time="0.026"><failure message="pytest.PytestUnraisableExceptionWarning: Exception ignored in: 'pandas._libs.tslibs.conversion._localize_tso'&#10;&#10;Traceback (most recent call last):&#10;  File &quot;tzconversion.pyx&quot;, line 129, in pandas._libs.tslibs.tzconversion.Localizer.utc_val_to_local_val&#10;  File &quot;tzconversion.pyx&quot;, line 755, in pandas._libs.tslibs.tzconversion._tz_localize_using_tzinfo_api&#10;  File &quot;tzconversion.pyx&quot;, line 787, in pandas._libs.tslibs.tzconversion._astimezone&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 144, in fromutc&#10;    return f(self, dt)&#10;           ^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 261, in fromutc&#10;    _fold = self._fold_status(dt, dt_wall)&#10;            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 196, in _fold_status&#10;    if self.is_ambiguous(dt_wall):&#10;       ^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py&quot;, line 254, in is_ambiguous&#10;    naive_dst = self._naive_is_dst(dt)&#10;                ^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py&quot;, line 260, in _naive_is_dst&#10;    return time.localtime(timestamp + time.timezone).tm_isdst&#10;           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;OSError: [Errno 22] Invalid argument">cls = &lt;class '_pytest.runner.CallInfo'&gt;
func = &lt;function call_and_report.&lt;locals&gt;.&lt;lambda&gt; at 0x0000015D28540540&gt;
when = 'call'
reraise = (&lt;class '_pytest.outcomes.Exit'&gt;, &lt;class 'KeyboardInterrupt'&gt;)

    @classmethod
    def from_call(
        cls,
        func: Callable[[], TResult],
        when: Literal["collect", "setup", "call", "teardown"],
        reraise: type[BaseException] | tuple[type[BaseException], ...] | None = None,
    ) -&gt; CallInfo[TResult]:
        """Call func, wrapping the result in a CallInfo.
    
        :param func:
            The function to call. Called without arguments.
        :type func: Callable[[], _pytest.runner.TResult]
        :param when:
            The phase in which the function is called.
        :param reraise:
            Exception or exceptions that shall propagate if raised by the
            function, instead of being wrapped in the CallInfo.
        """
        excinfo = None
        start = timing.time()
        precise_start = timing.perf_counter()
        try:
&gt;           result: TResult | None = func()

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\runner.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\runner.py:242: in &lt;lambda&gt;
    lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pluggy\_hooks.py:513: in __call__
    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pluggy\_manager.py:120: in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\threadexception.py:92: in pytest_runtest_call
    yield from thread_exception_runtest_hook()
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\threadexception.py:68: in thread_exception_runtest_hook
    yield
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\unraisableexception.py:95: in pytest_runtest_call
    yield from unraisable_exception_runtest_hook()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

    def unraisable_exception_runtest_hook() -&gt; Generator[None, None, None]:
        with catch_unraisable_exception() as cm:
            try:
                yield
            finally:
                if cm.unraisable:
                    if cm.unraisable.err_msg is not None:
                        err_msg = cm.unraisable.err_msg
                    else:
                        err_msg = "Exception ignored in"
                    msg = f"{err_msg}: {cm.unraisable.object!r}\n\n"
                    msg += "".join(
                        traceback.format_exception(
                            cm.unraisable.exc_type,
                            cm.unraisable.exc_value,
                            cm.unraisable.exc_traceback,
                        )
                    )
&gt;                   warnings.warn(pytest.PytestUnraisableExceptionWarning(msg))
E                   pytest.PytestUnraisableExceptionWarning: Exception ignored in: 'pandas._libs.tslibs.conversion._localize_tso'
E                   
E                   Traceback (most recent call last):
E                     File "tzconversion.pyx", line 129, in pandas._libs.tslibs.tzconversion.Localizer.utc_val_to_local_val
E                     File "tzconversion.pyx", line 755, in pandas._libs.tslibs.tzconversion._tz_localize_using_tzinfo_api
E                     File "tzconversion.pyx", line 787, in pandas._libs.tslibs.tzconversion._astimezone
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 144, in fromutc
E                       return f(self, dt)
E                              ^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 261, in fromutc
E                       _fold = self._fold_status(dt, dt_wall)
E                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 196, in _fold_status
E                       if self.is_ambiguous(dt_wall):
E                          ^^^^^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py", line 254, in is_ambiguous
E                       naive_dst = self._naive_is_dst(dt)
E                                   ^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py", line 260, in _naive_is_dst
E                       return time.localtime(timestamp + time.timezone).tm_isdst
E                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E                   OSError: [Errno 22] Invalid argument

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\unraisableexception.py:85: PytestUnraisableExceptionWarning</failure></testcase><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[tzlocal()-DataFrame-other9]" time="0.018"><failure message="pytest.PytestUnraisableExceptionWarning: Exception ignored in: 'pandas._libs.tslibs.conversion._localize_tso'&#10;&#10;Traceback (most recent call last):&#10;  File &quot;tzconversion.pyx&quot;, line 129, in pandas._libs.tslibs.tzconversion.Localizer.utc_val_to_local_val&#10;  File &quot;tzconversion.pyx&quot;, line 755, in pandas._libs.tslibs.tzconversion._tz_localize_using_tzinfo_api&#10;  File &quot;tzconversion.pyx&quot;, line 787, in pandas._libs.tslibs.tzconversion._astimezone&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 144, in fromutc&#10;    return f(self, dt)&#10;           ^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 261, in fromutc&#10;    _fold = self._fold_status(dt, dt_wall)&#10;            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 196, in _fold_status&#10;    if self.is_ambiguous(dt_wall):&#10;       ^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py&quot;, line 254, in is_ambiguous&#10;    naive_dst = self._naive_is_dst(dt)&#10;                ^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py&quot;, line 260, in _naive_is_dst&#10;    return time.localtime(timestamp + time.timezone).tm_isdst&#10;           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;OSError: [Errno 22] Invalid argument">self = &lt;pandas.tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons object at 0x0000015D7CA9B080&gt;
other = Index([1971-01-01, 1971-01-02, 1971-01-03, 1971-01-04, 1971-01-05, 1971-01-06,
       1971-01-07, 1971-01-08, 1971-01-09, 1971-01-10],
      dtype='object')
tz_naive_fixture = tzlocal()
box_with_array = &lt;class 'pandas.core.frame.DataFrame'&gt;

    @pytest.mark.parametrize(
        "other",
        [
            # GH#4968 invalid date/int comparisons
            list(range(10)),
            np.arange(10),
            np.arange(10).astype(np.float32),
            np.arange(10).astype(object),
            pd.timedelta_range("1ns", periods=10).array,
            np.array(pd.timedelta_range("1ns", periods=10)),
            list(pd.timedelta_range("1ns", periods=10)),
            pd.timedelta_range("1 Day", periods=10).astype(object),
            pd.period_range("1971-01-01", freq="D", periods=10).array,
            pd.period_range("1971-01-01", freq="D", periods=10).astype(object),
        ],
    )
    def test_dt64arr_cmp_arraylike_invalid(
        self, other, tz_naive_fixture, box_with_array
    ):
        tz = tz_naive_fixture
    
        dta = date_range("1970-01-01", freq="ns", periods=10, tz=tz)._data
        obj = tm.box_expected(dta, box_with_array)
&gt;       assert_invalid_comparison(obj, other, box_with_array)

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\arithmetic\test_datetime64.py:117: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\arithmetic\common.py:111: in assert_invalid_comparison
    result = xbox2(left == right)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\ops\common.py:76: in new_method
    return method(self, other)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\arraylike.py:40: in __eq__
    return self._cmp_method(other, operator.eq)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\frame.py:7900: in _cmp_method
    new_data = self._dispatch_frame_op(other, op, axis=axis)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\frame.py:7956: in _dispatch_frame_op
    bm = self._mgr.operate_blockwise(
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\internals\managers.py:1511: in operate_blockwise
    return operate_blockwise(self, other, array_op)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\internals\ops.py:65: in operate_blockwise
    res_values = array_op(lvals, rvals)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\ops\array_ops.py:330: in comparison_op
    res_values = op(lvalues, rvalues)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\ops\common.py:76: in new_method
    return method(self, other)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\arraylike.py:40: in __eq__
    return self._cmp_method(other, operator.eq)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\arrays\datetimelike.py:980: in _cmp_method
    return op(self.ravel(), other.ravel()).reshape(self.shape)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\ops\common.py:76: in new_method
    return method(self, other)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\arraylike.py:40: in __eq__
    return self._cmp_method(other, operator.eq)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\arrays\datetimelike.py:992: in _cmp_method
    op, np.asarray(self.astype(object)), other
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\arrays\datetimes.py:739: in astype
    return dtl.DatetimeLikeArrayMixin.astype(self, dtype, copy)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\arrays\datetimelike.py:460: in astype
    converted = ints_to_pydatetime(
vectorized.pyx:166: in pandas._libs.tslibs.vectorized.ints_to_pydatetime
    ???
tzconversion.pyx:129: in pandas._libs.tslibs.tzconversion.Localizer.utc_val_to_local_val
    ???
tzconversion.pyx:755: in pandas._libs.tslibs.tzconversion._tz_localize_using_tzinfo_api
    ???
tzconversion.pyx:787: in pandas._libs.tslibs.tzconversion._astimezone
    ???
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py:144: in fromutc
    return f(self, dt)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py:261: in fromutc
    _fold = self._fold_status(dt, dt_wall)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py:196: in _fold_status
    if self.is_ambiguous(dt_wall):
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py:254: in is_ambiguous
    naive_dst = self._naive_is_dst(dt)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = tzlocal(), dt = datetime.datetime(1969, 12, 31, 21, 0, tzinfo=tzlocal())

    def _naive_is_dst(self, dt):
        timestamp = _datetime_to_timestamp(dt)
&gt;       return time.localtime(timestamp + time.timezone).tm_isdst
E       OSError: [Errno 22] Invalid argument

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py:260: OSError

During handling of the above exception, another exception occurred:

cls = &lt;class '_pytest.runner.CallInfo'&gt;
func = &lt;function call_and_report.&lt;locals&gt;.&lt;lambda&gt; at 0x0000015D28543F60&gt;
when = 'call'
reraise = (&lt;class '_pytest.outcomes.Exit'&gt;, &lt;class 'KeyboardInterrupt'&gt;)

    @classmethod
    def from_call(
        cls,
        func: Callable[[], TResult],
        when: Literal["collect", "setup", "call", "teardown"],
        reraise: type[BaseException] | tuple[type[BaseException], ...] | None = None,
    ) -&gt; CallInfo[TResult]:
        """Call func, wrapping the result in a CallInfo.
    
        :param func:
            The function to call. Called without arguments.
        :type func: Callable[[], _pytest.runner.TResult]
        :param when:
            The phase in which the function is called.
        :param reraise:
            Exception or exceptions that shall propagate if raised by the
            function, instead of being wrapped in the CallInfo.
        """
        excinfo = None
        start = timing.time()
        precise_start = timing.perf_counter()
        try:
&gt;           result: TResult | None = func()

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\runner.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\runner.py:242: in &lt;lambda&gt;
    lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pluggy\_hooks.py:513: in __call__
    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pluggy\_manager.py:120: in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\threadexception.py:92: in pytest_runtest_call
    yield from thread_exception_runtest_hook()
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\threadexception.py:68: in thread_exception_runtest_hook
    yield
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\unraisableexception.py:95: in pytest_runtest_call
    yield from unraisable_exception_runtest_hook()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

    def unraisable_exception_runtest_hook() -&gt; Generator[None, None, None]:
        with catch_unraisable_exception() as cm:
            try:
                yield
            finally:
                if cm.unraisable:
                    if cm.unraisable.err_msg is not None:
                        err_msg = cm.unraisable.err_msg
                    else:
                        err_msg = "Exception ignored in"
                    msg = f"{err_msg}: {cm.unraisable.object!r}\n\n"
                    msg += "".join(
                        traceback.format_exception(
                            cm.unraisable.exc_type,
                            cm.unraisable.exc_value,
                            cm.unraisable.exc_traceback,
                        )
                    )
&gt;                   warnings.warn(pytest.PytestUnraisableExceptionWarning(msg))
E                   pytest.PytestUnraisableExceptionWarning: Exception ignored in: 'pandas._libs.tslibs.conversion._localize_tso'
E                   
E                   Traceback (most recent call last):
E                     File "tzconversion.pyx", line 129, in pandas._libs.tslibs.tzconversion.Localizer.utc_val_to_local_val
E                     File "tzconversion.pyx", line 755, in pandas._libs.tslibs.tzconversion._tz_localize_using_tzinfo_api
E                     File "tzconversion.pyx", line 787, in pandas._libs.tslibs.tzconversion._astimezone
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 144, in fromutc
E                       return f(self, dt)
E                              ^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 261, in fromutc
E                       _fold = self._fold_status(dt, dt_wall)
E                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 196, in _fold_status
E                       if self.is_ambiguous(dt_wall):
E                          ^^^^^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py", line 254, in is_ambiguous
E                       naive_dst = self._naive_is_dst(dt)
E                                   ^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py", line 260, in _naive_is_dst
E                       return time.localtime(timestamp + time.timezone).tm_isdst
E                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E                   OSError: [Errno 22] Invalid argument

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\unraisableexception.py:85: PytestUnraisableExceptionWarning</failure></testcase><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[tzlocal()-array-other0]" time="0.015"><failure message="pytest.PytestUnraisableExceptionWarning: Exception ignored in: 'pandas._libs.tslibs.conversion._localize_tso'&#10;&#10;Traceback (most recent call last):&#10;  File &quot;tzconversion.pyx&quot;, line 129, in pandas._libs.tslibs.tzconversion.Localizer.utc_val_to_local_val&#10;  File &quot;tzconversion.pyx&quot;, line 755, in pandas._libs.tslibs.tzconversion._tz_localize_using_tzinfo_api&#10;  File &quot;tzconversion.pyx&quot;, line 787, in pandas._libs.tslibs.tzconversion._astimezone&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 144, in fromutc&#10;    return f(self, dt)&#10;           ^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 261, in fromutc&#10;    _fold = self._fold_status(dt, dt_wall)&#10;            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 196, in _fold_status&#10;    if self.is_ambiguous(dt_wall):&#10;       ^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py&quot;, line 254, in is_ambiguous&#10;    naive_dst = self._naive_is_dst(dt)&#10;                ^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py&quot;, line 260, in _naive_is_dst&#10;    return time.localtime(timestamp + time.timezone).tm_isdst&#10;           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;OSError: [Errno 22] Invalid argument">cls = &lt;class '_pytest.runner.CallInfo'&gt;
func = &lt;function call_and_report.&lt;locals&gt;.&lt;lambda&gt; at 0x0000015D28542E80&gt;
when = 'call'
reraise = (&lt;class '_pytest.outcomes.Exit'&gt;, &lt;class 'KeyboardInterrupt'&gt;)

    @classmethod
    def from_call(
        cls,
        func: Callable[[], TResult],
        when: Literal["collect", "setup", "call", "teardown"],
        reraise: type[BaseException] | tuple[type[BaseException], ...] | None = None,
    ) -&gt; CallInfo[TResult]:
        """Call func, wrapping the result in a CallInfo.
    
        :param func:
            The function to call. Called without arguments.
        :type func: Callable[[], _pytest.runner.TResult]
        :param when:
            The phase in which the function is called.
        :param reraise:
            Exception or exceptions that shall propagate if raised by the
            function, instead of being wrapped in the CallInfo.
        """
        excinfo = None
        start = timing.time()
        precise_start = timing.perf_counter()
        try:
&gt;           result: TResult | None = func()

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\runner.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\runner.py:242: in &lt;lambda&gt;
    lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pluggy\_hooks.py:513: in __call__
    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pluggy\_manager.py:120: in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\threadexception.py:92: in pytest_runtest_call
    yield from thread_exception_runtest_hook()
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\threadexception.py:68: in thread_exception_runtest_hook
    yield
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\unraisableexception.py:95: in pytest_runtest_call
    yield from unraisable_exception_runtest_hook()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

    def unraisable_exception_runtest_hook() -&gt; Generator[None, None, None]:
        with catch_unraisable_exception() as cm:
            try:
                yield
            finally:
                if cm.unraisable:
                    if cm.unraisable.err_msg is not None:
                        err_msg = cm.unraisable.err_msg
                    else:
                        err_msg = "Exception ignored in"
                    msg = f"{err_msg}: {cm.unraisable.object!r}\n\n"
                    msg += "".join(
                        traceback.format_exception(
                            cm.unraisable.exc_type,
                            cm.unraisable.exc_value,
                            cm.unraisable.exc_traceback,
                        )
                    )
&gt;                   warnings.warn(pytest.PytestUnraisableExceptionWarning(msg))
E                   pytest.PytestUnraisableExceptionWarning: Exception ignored in: 'pandas._libs.tslibs.conversion._localize_tso'
E                   
E                   Traceback (most recent call last):
E                     File "tzconversion.pyx", line 129, in pandas._libs.tslibs.tzconversion.Localizer.utc_val_to_local_val
E                     File "tzconversion.pyx", line 755, in pandas._libs.tslibs.tzconversion._tz_localize_using_tzinfo_api
E                     File "tzconversion.pyx", line 787, in pandas._libs.tslibs.tzconversion._astimezone
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 144, in fromutc
E                       return f(self, dt)
E                              ^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 261, in fromutc
E                       _fold = self._fold_status(dt, dt_wall)
E                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 196, in _fold_status
E                       if self.is_ambiguous(dt_wall):
E                          ^^^^^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py", line 254, in is_ambiguous
E                       naive_dst = self._naive_is_dst(dt)
E                                   ^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py", line 260, in _naive_is_dst
E                       return time.localtime(timestamp + time.timezone).tm_isdst
E                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E                   OSError: [Errno 22] Invalid argument

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\unraisableexception.py:85: PytestUnraisableExceptionWarning</failure></testcase><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[tzlocal()-array-other1]" time="0.010"><failure message="pytest.PytestUnraisableExceptionWarning: Exception ignored in: 'pandas._libs.tslibs.conversion._localize_tso'&#10;&#10;Traceback (most recent call last):&#10;  File &quot;tzconversion.pyx&quot;, line 129, in pandas._libs.tslibs.tzconversion.Localizer.utc_val_to_local_val&#10;  File &quot;tzconversion.pyx&quot;, line 755, in pandas._libs.tslibs.tzconversion._tz_localize_using_tzinfo_api&#10;  File &quot;tzconversion.pyx&quot;, line 787, in pandas._libs.tslibs.tzconversion._astimezone&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 144, in fromutc&#10;    return f(self, dt)&#10;           ^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 261, in fromutc&#10;    _fold = self._fold_status(dt, dt_wall)&#10;            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 196, in _fold_status&#10;    if self.is_ambiguous(dt_wall):&#10;       ^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py&quot;, line 254, in is_ambiguous&#10;    naive_dst = self._naive_is_dst(dt)&#10;                ^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py&quot;, line 260, in _naive_is_dst&#10;    return time.localtime(timestamp + time.timezone).tm_isdst&#10;           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;OSError: [Errno 22] Invalid argument">cls = &lt;class '_pytest.runner.CallInfo'&gt;
func = &lt;function call_and_report.&lt;locals&gt;.&lt;lambda&gt; at 0x0000015D28543380&gt;
when = 'call'
reraise = (&lt;class '_pytest.outcomes.Exit'&gt;, &lt;class 'KeyboardInterrupt'&gt;)

    @classmethod
    def from_call(
        cls,
        func: Callable[[], TResult],
        when: Literal["collect", "setup", "call", "teardown"],
        reraise: type[BaseException] | tuple[type[BaseException], ...] | None = None,
    ) -&gt; CallInfo[TResult]:
        """Call func, wrapping the result in a CallInfo.
    
        :param func:
            The function to call. Called without arguments.
        :type func: Callable[[], _pytest.runner.TResult]
        :param when:
            The phase in which the function is called.
        :param reraise:
            Exception or exceptions that shall propagate if raised by the
            function, instead of being wrapped in the CallInfo.
        """
        excinfo = None
        start = timing.time()
        precise_start = timing.perf_counter()
        try:
&gt;           result: TResult | None = func()

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\runner.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\runner.py:242: in &lt;lambda&gt;
    lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pluggy\_hooks.py:513: in __call__
    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pluggy\_manager.py:120: in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\threadexception.py:92: in pytest_runtest_call
    yield from thread_exception_runtest_hook()
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\threadexception.py:68: in thread_exception_runtest_hook
    yield
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\unraisableexception.py:95: in pytest_runtest_call
    yield from unraisable_exception_runtest_hook()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

    def unraisable_exception_runtest_hook() -&gt; Generator[None, None, None]:
        with catch_unraisable_exception() as cm:
            try:
                yield
            finally:
                if cm.unraisable:
                    if cm.unraisable.err_msg is not None:
                        err_msg = cm.unraisable.err_msg
                    else:
                        err_msg = "Exception ignored in"
                    msg = f"{err_msg}: {cm.unraisable.object!r}\n\n"
                    msg += "".join(
                        traceback.format_exception(
                            cm.unraisable.exc_type,
                            cm.unraisable.exc_value,
                            cm.unraisable.exc_traceback,
                        )
                    )
&gt;                   warnings.warn(pytest.PytestUnraisableExceptionWarning(msg))
E                   pytest.PytestUnraisableExceptionWarning: Exception ignored in: 'pandas._libs.tslibs.conversion._localize_tso'
E                   
E                   Traceback (most recent call last):
E                     File "tzconversion.pyx", line 129, in pandas._libs.tslibs.tzconversion.Localizer.utc_val_to_local_val
E                     File "tzconversion.pyx", line 755, in pandas._libs.tslibs.tzconversion._tz_localize_using_tzinfo_api
E                     File "tzconversion.pyx", line 787, in pandas._libs.tslibs.tzconversion._astimezone
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 144, in fromutc
E                       return f(self, dt)
E                              ^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 261, in fromutc
E                       _fold = self._fold_status(dt, dt_wall)
E                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 196, in _fold_status
E                       if self.is_ambiguous(dt_wall):
E                          ^^^^^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py", line 254, in is_ambiguous
E                       naive_dst = self._naive_is_dst(dt)
E                                   ^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py", line 260, in _naive_is_dst
E                       return time.localtime(timestamp + time.timezone).tm_isdst
E                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E                   OSError: [Errno 22] Invalid argument

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\unraisableexception.py:85: PytestUnraisableExceptionWarning</failure></testcase><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[tzlocal()-array-other2]" time="0.009"><failure message="pytest.PytestUnraisableExceptionWarning: Exception ignored in: 'pandas._libs.tslibs.conversion._localize_tso'&#10;&#10;Traceback (most recent call last):&#10;  File &quot;tzconversion.pyx&quot;, line 129, in pandas._libs.tslibs.tzconversion.Localizer.utc_val_to_local_val&#10;  File &quot;tzconversion.pyx&quot;, line 755, in pandas._libs.tslibs.tzconversion._tz_localize_using_tzinfo_api&#10;  File &quot;tzconversion.pyx&quot;, line 787, in pandas._libs.tslibs.tzconversion._astimezone&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 144, in fromutc&#10;    return f(self, dt)&#10;           ^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 261, in fromutc&#10;    _fold = self._fold_status(dt, dt_wall)&#10;            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 196, in _fold_status&#10;    if self.is_ambiguous(dt_wall):&#10;       ^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py&quot;, line 254, in is_ambiguous&#10;    naive_dst = self._naive_is_dst(dt)&#10;                ^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py&quot;, line 260, in _naive_is_dst&#10;    return time.localtime(timestamp + time.timezone).tm_isdst&#10;           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;OSError: [Errno 22] Invalid argument">cls = &lt;class '_pytest.runner.CallInfo'&gt;
func = &lt;function call_and_report.&lt;locals&gt;.&lt;lambda&gt; at 0x0000015D285434C0&gt;
when = 'call'
reraise = (&lt;class '_pytest.outcomes.Exit'&gt;, &lt;class 'KeyboardInterrupt'&gt;)

    @classmethod
    def from_call(
        cls,
        func: Callable[[], TResult],
        when: Literal["collect", "setup", "call", "teardown"],
        reraise: type[BaseException] | tuple[type[BaseException], ...] | None = None,
    ) -&gt; CallInfo[TResult]:
        """Call func, wrapping the result in a CallInfo.
    
        :param func:
            The function to call. Called without arguments.
        :type func: Callable[[], _pytest.runner.TResult]
        :param when:
            The phase in which the function is called.
        :param reraise:
            Exception or exceptions that shall propagate if raised by the
            function, instead of being wrapped in the CallInfo.
        """
        excinfo = None
        start = timing.time()
        precise_start = timing.perf_counter()
        try:
&gt;           result: TResult | None = func()

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\runner.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\runner.py:242: in &lt;lambda&gt;
    lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pluggy\_hooks.py:513: in __call__
    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pluggy\_manager.py:120: in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\threadexception.py:92: in pytest_runtest_call
    yield from thread_exception_runtest_hook()
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\threadexception.py:68: in thread_exception_runtest_hook
    yield
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\unraisableexception.py:95: in pytest_runtest_call
    yield from unraisable_exception_runtest_hook()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

    def unraisable_exception_runtest_hook() -&gt; Generator[None, None, None]:
        with catch_unraisable_exception() as cm:
            try:
                yield
            finally:
                if cm.unraisable:
                    if cm.unraisable.err_msg is not None:
                        err_msg = cm.unraisable.err_msg
                    else:
                        err_msg = "Exception ignored in"
                    msg = f"{err_msg}: {cm.unraisable.object!r}\n\n"
                    msg += "".join(
                        traceback.format_exception(
                            cm.unraisable.exc_type,
                            cm.unraisable.exc_value,
                            cm.unraisable.exc_traceback,
                        )
                    )
&gt;                   warnings.warn(pytest.PytestUnraisableExceptionWarning(msg))
E                   pytest.PytestUnraisableExceptionWarning: Exception ignored in: 'pandas._libs.tslibs.conversion._localize_tso'
E                   
E                   Traceback (most recent call last):
E                     File "tzconversion.pyx", line 129, in pandas._libs.tslibs.tzconversion.Localizer.utc_val_to_local_val
E                     File "tzconversion.pyx", line 755, in pandas._libs.tslibs.tzconversion._tz_localize_using_tzinfo_api
E                     File "tzconversion.pyx", line 787, in pandas._libs.tslibs.tzconversion._astimezone
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 144, in fromutc
E                       return f(self, dt)
E                              ^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 261, in fromutc
E                       _fold = self._fold_status(dt, dt_wall)
E                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 196, in _fold_status
E                       if self.is_ambiguous(dt_wall):
E                          ^^^^^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py", line 254, in is_ambiguous
E                       naive_dst = self._naive_is_dst(dt)
E                                   ^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py", line 260, in _naive_is_dst
E                       return time.localtime(timestamp + time.timezone).tm_isdst
E                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E                   OSError: [Errno 22] Invalid argument

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\unraisableexception.py:85: PytestUnraisableExceptionWarning</failure></testcase><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[tzlocal()-array-other3]" time="0.010"><failure message="pytest.PytestUnraisableExceptionWarning: Exception ignored in: 'pandas._libs.tslibs.conversion._localize_tso'&#10;&#10;Traceback (most recent call last):&#10;  File &quot;tzconversion.pyx&quot;, line 129, in pandas._libs.tslibs.tzconversion.Localizer.utc_val_to_local_val&#10;  File &quot;tzconversion.pyx&quot;, line 755, in pandas._libs.tslibs.tzconversion._tz_localize_using_tzinfo_api&#10;  File &quot;tzconversion.pyx&quot;, line 787, in pandas._libs.tslibs.tzconversion._astimezone&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 144, in fromutc&#10;    return f(self, dt)&#10;           ^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 261, in fromutc&#10;    _fold = self._fold_status(dt, dt_wall)&#10;            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 196, in _fold_status&#10;    if self.is_ambiguous(dt_wall):&#10;       ^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py&quot;, line 254, in is_ambiguous&#10;    naive_dst = self._naive_is_dst(dt)&#10;                ^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py&quot;, line 260, in _naive_is_dst&#10;    return time.localtime(timestamp + time.timezone).tm_isdst&#10;           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;OSError: [Errno 22] Invalid argument">self = &lt;pandas.tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons object at 0x0000015D7CA9B380&gt;
other = array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9], dtype=object)
tz_naive_fixture = tzlocal()
box_with_array = &lt;function array at 0x0000015D77427B00&gt;

    @pytest.mark.parametrize(
        "other",
        [
            # GH#4968 invalid date/int comparisons
            list(range(10)),
            np.arange(10),
            np.arange(10).astype(np.float32),
            np.arange(10).astype(object),
            pd.timedelta_range("1ns", periods=10).array,
            np.array(pd.timedelta_range("1ns", periods=10)),
            list(pd.timedelta_range("1ns", periods=10)),
            pd.timedelta_range("1 Day", periods=10).astype(object),
            pd.period_range("1971-01-01", freq="D", periods=10).array,
            pd.period_range("1971-01-01", freq="D", periods=10).astype(object),
        ],
    )
    def test_dt64arr_cmp_arraylike_invalid(
        self, other, tz_naive_fixture, box_with_array
    ):
        tz = tz_naive_fixture
    
        dta = date_range("1970-01-01", freq="ns", periods=10, tz=tz)._data
        obj = tm.box_expected(dta, box_with_array)
&gt;       assert_invalid_comparison(obj, other, box_with_array)

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\arithmetic\test_datetime64.py:117: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\arithmetic\common.py:111: in assert_invalid_comparison
    result = xbox2(left == right)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\ops\common.py:76: in new_method
    return method(self, other)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\arraylike.py:40: in __eq__
    return self._cmp_method(other, operator.eq)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\arrays\datetimelike.py:992: in _cmp_method
    op, np.asarray(self.astype(object)), other
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\arrays\datetimes.py:739: in astype
    return dtl.DatetimeLikeArrayMixin.astype(self, dtype, copy)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\arrays\datetimelike.py:460: in astype
    converted = ints_to_pydatetime(
vectorized.pyx:166: in pandas._libs.tslibs.vectorized.ints_to_pydatetime
    ???
tzconversion.pyx:129: in pandas._libs.tslibs.tzconversion.Localizer.utc_val_to_local_val
    ???
tzconversion.pyx:755: in pandas._libs.tslibs.tzconversion._tz_localize_using_tzinfo_api
    ???
tzconversion.pyx:787: in pandas._libs.tslibs.tzconversion._astimezone
    ???
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py:144: in fromutc
    return f(self, dt)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py:261: in fromutc
    _fold = self._fold_status(dt, dt_wall)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py:196: in _fold_status
    if self.is_ambiguous(dt_wall):
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py:254: in is_ambiguous
    naive_dst = self._naive_is_dst(dt)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = tzlocal(), dt = datetime.datetime(1969, 12, 31, 21, 0, tzinfo=tzlocal())

    def _naive_is_dst(self, dt):
        timestamp = _datetime_to_timestamp(dt)
&gt;       return time.localtime(timestamp + time.timezone).tm_isdst
E       OSError: [Errno 22] Invalid argument

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py:260: OSError

During handling of the above exception, another exception occurred:

cls = &lt;class '_pytest.runner.CallInfo'&gt;
func = &lt;function call_and_report.&lt;locals&gt;.&lt;lambda&gt; at 0x0000015D28542E80&gt;
when = 'call'
reraise = (&lt;class '_pytest.outcomes.Exit'&gt;, &lt;class 'KeyboardInterrupt'&gt;)

    @classmethod
    def from_call(
        cls,
        func: Callable[[], TResult],
        when: Literal["collect", "setup", "call", "teardown"],
        reraise: type[BaseException] | tuple[type[BaseException], ...] | None = None,
    ) -&gt; CallInfo[TResult]:
        """Call func, wrapping the result in a CallInfo.
    
        :param func:
            The function to call. Called without arguments.
        :type func: Callable[[], _pytest.runner.TResult]
        :param when:
            The phase in which the function is called.
        :param reraise:
            Exception or exceptions that shall propagate if raised by the
            function, instead of being wrapped in the CallInfo.
        """
        excinfo = None
        start = timing.time()
        precise_start = timing.perf_counter()
        try:
&gt;           result: TResult | None = func()

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\runner.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\runner.py:242: in &lt;lambda&gt;
    lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pluggy\_hooks.py:513: in __call__
    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pluggy\_manager.py:120: in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\threadexception.py:92: in pytest_runtest_call
    yield from thread_exception_runtest_hook()
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\threadexception.py:68: in thread_exception_runtest_hook
    yield
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\unraisableexception.py:95: in pytest_runtest_call
    yield from unraisable_exception_runtest_hook()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

    def unraisable_exception_runtest_hook() -&gt; Generator[None, None, None]:
        with catch_unraisable_exception() as cm:
            try:
                yield
            finally:
                if cm.unraisable:
                    if cm.unraisable.err_msg is not None:
                        err_msg = cm.unraisable.err_msg
                    else:
                        err_msg = "Exception ignored in"
                    msg = f"{err_msg}: {cm.unraisable.object!r}\n\n"
                    msg += "".join(
                        traceback.format_exception(
                            cm.unraisable.exc_type,
                            cm.unraisable.exc_value,
                            cm.unraisable.exc_traceback,
                        )
                    )
&gt;                   warnings.warn(pytest.PytestUnraisableExceptionWarning(msg))
E                   pytest.PytestUnraisableExceptionWarning: Exception ignored in: 'pandas._libs.tslibs.conversion._localize_tso'
E                   
E                   Traceback (most recent call last):
E                     File "tzconversion.pyx", line 129, in pandas._libs.tslibs.tzconversion.Localizer.utc_val_to_local_val
E                     File "tzconversion.pyx", line 755, in pandas._libs.tslibs.tzconversion._tz_localize_using_tzinfo_api
E                     File "tzconversion.pyx", line 787, in pandas._libs.tslibs.tzconversion._astimezone
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 144, in fromutc
E                       return f(self, dt)
E                              ^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 261, in fromutc
E                       _fold = self._fold_status(dt, dt_wall)
E                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 196, in _fold_status
E                       if self.is_ambiguous(dt_wall):
E                          ^^^^^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py", line 254, in is_ambiguous
E                       naive_dst = self._naive_is_dst(dt)
E                                   ^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py", line 260, in _naive_is_dst
E                       return time.localtime(timestamp + time.timezone).tm_isdst
E                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E                   OSError: [Errno 22] Invalid argument

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\unraisableexception.py:85: PytestUnraisableExceptionWarning</failure></testcase><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[tzlocal()-array-other4]" time="0.012"><failure message="pytest.PytestUnraisableExceptionWarning: Exception ignored in: 'pandas._libs.tslibs.conversion._localize_tso'&#10;&#10;Traceback (most recent call last):&#10;  File &quot;tzconversion.pyx&quot;, line 129, in pandas._libs.tslibs.tzconversion.Localizer.utc_val_to_local_val&#10;  File &quot;tzconversion.pyx&quot;, line 755, in pandas._libs.tslibs.tzconversion._tz_localize_using_tzinfo_api&#10;  File &quot;tzconversion.pyx&quot;, line 787, in pandas._libs.tslibs.tzconversion._astimezone&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 144, in fromutc&#10;    return f(self, dt)&#10;           ^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 261, in fromutc&#10;    _fold = self._fold_status(dt, dt_wall)&#10;            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 196, in _fold_status&#10;    if self.is_ambiguous(dt_wall):&#10;       ^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py&quot;, line 254, in is_ambiguous&#10;    naive_dst = self._naive_is_dst(dt)&#10;                ^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py&quot;, line 260, in _naive_is_dst&#10;    return time.localtime(timestamp + time.timezone).tm_isdst&#10;           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;OSError: [Errno 22] Invalid argument">cls = &lt;class '_pytest.runner.CallInfo'&gt;
func = &lt;function call_and_report.&lt;locals&gt;.&lt;lambda&gt; at 0x0000015D28540EA0&gt;
when = 'call'
reraise = (&lt;class '_pytest.outcomes.Exit'&gt;, &lt;class 'KeyboardInterrupt'&gt;)

    @classmethod
    def from_call(
        cls,
        func: Callable[[], TResult],
        when: Literal["collect", "setup", "call", "teardown"],
        reraise: type[BaseException] | tuple[type[BaseException], ...] | None = None,
    ) -&gt; CallInfo[TResult]:
        """Call func, wrapping the result in a CallInfo.
    
        :param func:
            The function to call. Called without arguments.
        :type func: Callable[[], _pytest.runner.TResult]
        :param when:
            The phase in which the function is called.
        :param reraise:
            Exception or exceptions that shall propagate if raised by the
            function, instead of being wrapped in the CallInfo.
        """
        excinfo = None
        start = timing.time()
        precise_start = timing.perf_counter()
        try:
&gt;           result: TResult | None = func()

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\runner.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\runner.py:242: in &lt;lambda&gt;
    lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pluggy\_hooks.py:513: in __call__
    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pluggy\_manager.py:120: in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\threadexception.py:92: in pytest_runtest_call
    yield from thread_exception_runtest_hook()
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\threadexception.py:68: in thread_exception_runtest_hook
    yield
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\unraisableexception.py:95: in pytest_runtest_call
    yield from unraisable_exception_runtest_hook()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

    def unraisable_exception_runtest_hook() -&gt; Generator[None, None, None]:
        with catch_unraisable_exception() as cm:
            try:
                yield
            finally:
                if cm.unraisable:
                    if cm.unraisable.err_msg is not None:
                        err_msg = cm.unraisable.err_msg
                    else:
                        err_msg = "Exception ignored in"
                    msg = f"{err_msg}: {cm.unraisable.object!r}\n\n"
                    msg += "".join(
                        traceback.format_exception(
                            cm.unraisable.exc_type,
                            cm.unraisable.exc_value,
                            cm.unraisable.exc_traceback,
                        )
                    )
&gt;                   warnings.warn(pytest.PytestUnraisableExceptionWarning(msg))
E                   pytest.PytestUnraisableExceptionWarning: Exception ignored in: 'pandas._libs.tslibs.conversion._localize_tso'
E                   
E                   Traceback (most recent call last):
E                     File "tzconversion.pyx", line 129, in pandas._libs.tslibs.tzconversion.Localizer.utc_val_to_local_val
E                     File "tzconversion.pyx", line 755, in pandas._libs.tslibs.tzconversion._tz_localize_using_tzinfo_api
E                     File "tzconversion.pyx", line 787, in pandas._libs.tslibs.tzconversion._astimezone
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 144, in fromutc
E                       return f(self, dt)
E                              ^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 261, in fromutc
E                       _fold = self._fold_status(dt, dt_wall)
E                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 196, in _fold_status
E                       if self.is_ambiguous(dt_wall):
E                          ^^^^^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py", line 254, in is_ambiguous
E                       naive_dst = self._naive_is_dst(dt)
E                                   ^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py", line 260, in _naive_is_dst
E                       return time.localtime(timestamp + time.timezone).tm_isdst
E                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E                   OSError: [Errno 22] Invalid argument

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\unraisableexception.py:85: PytestUnraisableExceptionWarning</failure></testcase><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[tzlocal()-array-other5]" time="0.011"><failure message="pytest.PytestUnraisableExceptionWarning: Exception ignored in: 'pandas._libs.tslibs.conversion._localize_tso'&#10;&#10;Traceback (most recent call last):&#10;  File &quot;tzconversion.pyx&quot;, line 129, in pandas._libs.tslibs.tzconversion.Localizer.utc_val_to_local_val&#10;  File &quot;tzconversion.pyx&quot;, line 755, in pandas._libs.tslibs.tzconversion._tz_localize_using_tzinfo_api&#10;  File &quot;tzconversion.pyx&quot;, line 787, in pandas._libs.tslibs.tzconversion._astimezone&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 144, in fromutc&#10;    return f(self, dt)&#10;           ^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 261, in fromutc&#10;    _fold = self._fold_status(dt, dt_wall)&#10;            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 196, in _fold_status&#10;    if self.is_ambiguous(dt_wall):&#10;       ^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py&quot;, line 254, in is_ambiguous&#10;    naive_dst = self._naive_is_dst(dt)&#10;                ^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py&quot;, line 260, in _naive_is_dst&#10;    return time.localtime(timestamp + time.timezone).tm_isdst&#10;           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;OSError: [Errno 22] Invalid argument">cls = &lt;class '_pytest.runner.CallInfo'&gt;
func = &lt;function call_and_report.&lt;locals&gt;.&lt;lambda&gt; at 0x0000015D25DCD080&gt;
when = 'call'
reraise = (&lt;class '_pytest.outcomes.Exit'&gt;, &lt;class 'KeyboardInterrupt'&gt;)

    @classmethod
    def from_call(
        cls,
        func: Callable[[], TResult],
        when: Literal["collect", "setup", "call", "teardown"],
        reraise: type[BaseException] | tuple[type[BaseException], ...] | None = None,
    ) -&gt; CallInfo[TResult]:
        """Call func, wrapping the result in a CallInfo.
    
        :param func:
            The function to call. Called without arguments.
        :type func: Callable[[], _pytest.runner.TResult]
        :param when:
            The phase in which the function is called.
        :param reraise:
            Exception or exceptions that shall propagate if raised by the
            function, instead of being wrapped in the CallInfo.
        """
        excinfo = None
        start = timing.time()
        precise_start = timing.perf_counter()
        try:
&gt;           result: TResult | None = func()

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\runner.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\runner.py:242: in &lt;lambda&gt;
    lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pluggy\_hooks.py:513: in __call__
    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pluggy\_manager.py:120: in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\threadexception.py:92: in pytest_runtest_call
    yield from thread_exception_runtest_hook()
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\threadexception.py:68: in thread_exception_runtest_hook
    yield
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\unraisableexception.py:95: in pytest_runtest_call
    yield from unraisable_exception_runtest_hook()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

    def unraisable_exception_runtest_hook() -&gt; Generator[None, None, None]:
        with catch_unraisable_exception() as cm:
            try:
                yield
            finally:
                if cm.unraisable:
                    if cm.unraisable.err_msg is not None:
                        err_msg = cm.unraisable.err_msg
                    else:
                        err_msg = "Exception ignored in"
                    msg = f"{err_msg}: {cm.unraisable.object!r}\n\n"
                    msg += "".join(
                        traceback.format_exception(
                            cm.unraisable.exc_type,
                            cm.unraisable.exc_value,
                            cm.unraisable.exc_traceback,
                        )
                    )
&gt;                   warnings.warn(pytest.PytestUnraisableExceptionWarning(msg))
E                   pytest.PytestUnraisableExceptionWarning: Exception ignored in: 'pandas._libs.tslibs.conversion._localize_tso'
E                   
E                   Traceback (most recent call last):
E                     File "tzconversion.pyx", line 129, in pandas._libs.tslibs.tzconversion.Localizer.utc_val_to_local_val
E                     File "tzconversion.pyx", line 755, in pandas._libs.tslibs.tzconversion._tz_localize_using_tzinfo_api
E                     File "tzconversion.pyx", line 787, in pandas._libs.tslibs.tzconversion._astimezone
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 144, in fromutc
E                       return f(self, dt)
E                              ^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 261, in fromutc
E                       _fold = self._fold_status(dt, dt_wall)
E                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 196, in _fold_status
E                       if self.is_ambiguous(dt_wall):
E                          ^^^^^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py", line 254, in is_ambiguous
E                       naive_dst = self._naive_is_dst(dt)
E                                   ^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py", line 260, in _naive_is_dst
E                       return time.localtime(timestamp + time.timezone).tm_isdst
E                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E                   OSError: [Errno 22] Invalid argument

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\unraisableexception.py:85: PytestUnraisableExceptionWarning</failure></testcase><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[tzlocal()-array-other6]" time="0.010"><failure message="pytest.PytestUnraisableExceptionWarning: Exception ignored in: 'pandas._libs.tslibs.conversion._localize_tso'&#10;&#10;Traceback (most recent call last):&#10;  File &quot;tzconversion.pyx&quot;, line 129, in pandas._libs.tslibs.tzconversion.Localizer.utc_val_to_local_val&#10;  File &quot;tzconversion.pyx&quot;, line 755, in pandas._libs.tslibs.tzconversion._tz_localize_using_tzinfo_api&#10;  File &quot;tzconversion.pyx&quot;, line 787, in pandas._libs.tslibs.tzconversion._astimezone&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 144, in fromutc&#10;    return f(self, dt)&#10;           ^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 261, in fromutc&#10;    _fold = self._fold_status(dt, dt_wall)&#10;            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 196, in _fold_status&#10;    if self.is_ambiguous(dt_wall):&#10;       ^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py&quot;, line 254, in is_ambiguous&#10;    naive_dst = self._naive_is_dst(dt)&#10;                ^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py&quot;, line 260, in _naive_is_dst&#10;    return time.localtime(timestamp + time.timezone).tm_isdst&#10;           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;OSError: [Errno 22] Invalid argument">cls = &lt;class '_pytest.runner.CallInfo'&gt;
func = &lt;function call_and_report.&lt;locals&gt;.&lt;lambda&gt; at 0x0000015D25DCCB80&gt;
when = 'call'
reraise = (&lt;class '_pytest.outcomes.Exit'&gt;, &lt;class 'KeyboardInterrupt'&gt;)

    @classmethod
    def from_call(
        cls,
        func: Callable[[], TResult],
        when: Literal["collect", "setup", "call", "teardown"],
        reraise: type[BaseException] | tuple[type[BaseException], ...] | None = None,
    ) -&gt; CallInfo[TResult]:
        """Call func, wrapping the result in a CallInfo.
    
        :param func:
            The function to call. Called without arguments.
        :type func: Callable[[], _pytest.runner.TResult]
        :param when:
            The phase in which the function is called.
        :param reraise:
            Exception or exceptions that shall propagate if raised by the
            function, instead of being wrapped in the CallInfo.
        """
        excinfo = None
        start = timing.time()
        precise_start = timing.perf_counter()
        try:
&gt;           result: TResult | None = func()

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\runner.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\runner.py:242: in &lt;lambda&gt;
    lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pluggy\_hooks.py:513: in __call__
    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pluggy\_manager.py:120: in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\threadexception.py:92: in pytest_runtest_call
    yield from thread_exception_runtest_hook()
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\threadexception.py:68: in thread_exception_runtest_hook
    yield
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\unraisableexception.py:95: in pytest_runtest_call
    yield from unraisable_exception_runtest_hook()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

    def unraisable_exception_runtest_hook() -&gt; Generator[None, None, None]:
        with catch_unraisable_exception() as cm:
            try:
                yield
            finally:
                if cm.unraisable:
                    if cm.unraisable.err_msg is not None:
                        err_msg = cm.unraisable.err_msg
                    else:
                        err_msg = "Exception ignored in"
                    msg = f"{err_msg}: {cm.unraisable.object!r}\n\n"
                    msg += "".join(
                        traceback.format_exception(
                            cm.unraisable.exc_type,
                            cm.unraisable.exc_value,
                            cm.unraisable.exc_traceback,
                        )
                    )
&gt;                   warnings.warn(pytest.PytestUnraisableExceptionWarning(msg))
E                   pytest.PytestUnraisableExceptionWarning: Exception ignored in: 'pandas._libs.tslibs.conversion._localize_tso'
E                   
E                   Traceback (most recent call last):
E                     File "tzconversion.pyx", line 129, in pandas._libs.tslibs.tzconversion.Localizer.utc_val_to_local_val
E                     File "tzconversion.pyx", line 755, in pandas._libs.tslibs.tzconversion._tz_localize_using_tzinfo_api
E                     File "tzconversion.pyx", line 787, in pandas._libs.tslibs.tzconversion._astimezone
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 144, in fromutc
E                       return f(self, dt)
E                              ^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 261, in fromutc
E                       _fold = self._fold_status(dt, dt_wall)
E                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 196, in _fold_status
E                       if self.is_ambiguous(dt_wall):
E                          ^^^^^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py", line 254, in is_ambiguous
E                       naive_dst = self._naive_is_dst(dt)
E                                   ^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py", line 260, in _naive_is_dst
E                       return time.localtime(timestamp + time.timezone).tm_isdst
E                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E                   OSError: [Errno 22] Invalid argument

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\unraisableexception.py:85: PytestUnraisableExceptionWarning</failure></testcase><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[tzlocal()-array-other7]" time="0.010"><failure message="pytest.PytestUnraisableExceptionWarning: Exception ignored in: 'pandas._libs.tslibs.conversion._localize_tso'&#10;&#10;Traceback (most recent call last):&#10;  File &quot;tzconversion.pyx&quot;, line 129, in pandas._libs.tslibs.tzconversion.Localizer.utc_val_to_local_val&#10;  File &quot;tzconversion.pyx&quot;, line 755, in pandas._libs.tslibs.tzconversion._tz_localize_using_tzinfo_api&#10;  File &quot;tzconversion.pyx&quot;, line 787, in pandas._libs.tslibs.tzconversion._astimezone&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 144, in fromutc&#10;    return f(self, dt)&#10;           ^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 261, in fromutc&#10;    _fold = self._fold_status(dt, dt_wall)&#10;            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 196, in _fold_status&#10;    if self.is_ambiguous(dt_wall):&#10;       ^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py&quot;, line 254, in is_ambiguous&#10;    naive_dst = self._naive_is_dst(dt)&#10;                ^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py&quot;, line 260, in _naive_is_dst&#10;    return time.localtime(timestamp + time.timezone).tm_isdst&#10;           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;OSError: [Errno 22] Invalid argument">self = &lt;pandas.tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons object at 0x0000015D7CA9B680&gt;
other = Index([ 1 days 00:00:00,  2 days 00:00:00,  3 days 00:00:00,  4 days 00:00:00,
        5 days 00:00:00,  6 days 00:00:00,  7 days 00:00:00,  8 days 00:00:00,
        9 days 00:00:00, 10 days 00:00:00],
      dtype='object')
tz_naive_fixture = tzlocal()
box_with_array = &lt;function array at 0x0000015D77427B00&gt;

    @pytest.mark.parametrize(
        "other",
        [
            # GH#4968 invalid date/int comparisons
            list(range(10)),
            np.arange(10),
            np.arange(10).astype(np.float32),
            np.arange(10).astype(object),
            pd.timedelta_range("1ns", periods=10).array,
            np.array(pd.timedelta_range("1ns", periods=10)),
            list(pd.timedelta_range("1ns", periods=10)),
            pd.timedelta_range("1 Day", periods=10).astype(object),
            pd.period_range("1971-01-01", freq="D", periods=10).array,
            pd.period_range("1971-01-01", freq="D", periods=10).astype(object),
        ],
    )
    def test_dt64arr_cmp_arraylike_invalid(
        self, other, tz_naive_fixture, box_with_array
    ):
        tz = tz_naive_fixture
    
        dta = date_range("1970-01-01", freq="ns", periods=10, tz=tz)._data
        obj = tm.box_expected(dta, box_with_array)
&gt;       assert_invalid_comparison(obj, other, box_with_array)

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\arithmetic\test_datetime64.py:117: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\arithmetic\common.py:111: in assert_invalid_comparison
    result = xbox2(left == right)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\ops\common.py:76: in new_method
    return method(self, other)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\arraylike.py:40: in __eq__
    return self._cmp_method(other, operator.eq)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\indexes\base.py:7194: in _cmp_method
    result = op(self._values, other)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\arrays\datetimelike.py:2200: in __array_ufunc__
    return super().__array_ufunc__(ufunc, method, *inputs, **kwargs)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\arrays\base.py:2282: in __array_ufunc__
    result = arraylike.maybe_dispatch_ufunc_to_dunder_op(
ops_dispatch.pyx:113: in pandas._libs.ops_dispatch.maybe_dispatch_ufunc_to_dunder_op
    ???
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\ops\common.py:76: in new_method
    return method(self, other)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\arraylike.py:40: in __eq__
    return self._cmp_method(other, operator.eq)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\arrays\datetimelike.py:992: in _cmp_method
    op, np.asarray(self.astype(object)), other
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\arrays\datetimes.py:739: in astype
    return dtl.DatetimeLikeArrayMixin.astype(self, dtype, copy)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\arrays\datetimelike.py:460: in astype
    converted = ints_to_pydatetime(
vectorized.pyx:166: in pandas._libs.tslibs.vectorized.ints_to_pydatetime
    ???
tzconversion.pyx:129: in pandas._libs.tslibs.tzconversion.Localizer.utc_val_to_local_val
    ???
tzconversion.pyx:755: in pandas._libs.tslibs.tzconversion._tz_localize_using_tzinfo_api
    ???
tzconversion.pyx:787: in pandas._libs.tslibs.tzconversion._astimezone
    ???
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py:144: in fromutc
    return f(self, dt)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py:261: in fromutc
    _fold = self._fold_status(dt, dt_wall)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py:196: in _fold_status
    if self.is_ambiguous(dt_wall):
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py:254: in is_ambiguous
    naive_dst = self._naive_is_dst(dt)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = tzlocal(), dt = datetime.datetime(1969, 12, 31, 21, 0, tzinfo=tzlocal())

    def _naive_is_dst(self, dt):
        timestamp = _datetime_to_timestamp(dt)
&gt;       return time.localtime(timestamp + time.timezone).tm_isdst
E       OSError: [Errno 22] Invalid argument

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py:260: OSError

During handling of the above exception, another exception occurred:

cls = &lt;class '_pytest.runner.CallInfo'&gt;
func = &lt;function call_and_report.&lt;locals&gt;.&lt;lambda&gt; at 0x0000015D25DCC540&gt;
when = 'call'
reraise = (&lt;class '_pytest.outcomes.Exit'&gt;, &lt;class 'KeyboardInterrupt'&gt;)

    @classmethod
    def from_call(
        cls,
        func: Callable[[], TResult],
        when: Literal["collect", "setup", "call", "teardown"],
        reraise: type[BaseException] | tuple[type[BaseException], ...] | None = None,
    ) -&gt; CallInfo[TResult]:
        """Call func, wrapping the result in a CallInfo.
    
        :param func:
            The function to call. Called without arguments.
        :type func: Callable[[], _pytest.runner.TResult]
        :param when:
            The phase in which the function is called.
        :param reraise:
            Exception or exceptions that shall propagate if raised by the
            function, instead of being wrapped in the CallInfo.
        """
        excinfo = None
        start = timing.time()
        precise_start = timing.perf_counter()
        try:
&gt;           result: TResult | None = func()

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\runner.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\runner.py:242: in &lt;lambda&gt;
    lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pluggy\_hooks.py:513: in __call__
    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pluggy\_manager.py:120: in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\threadexception.py:92: in pytest_runtest_call
    yield from thread_exception_runtest_hook()
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\threadexception.py:68: in thread_exception_runtest_hook
    yield
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\unraisableexception.py:95: in pytest_runtest_call
    yield from unraisable_exception_runtest_hook()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

    def unraisable_exception_runtest_hook() -&gt; Generator[None, None, None]:
        with catch_unraisable_exception() as cm:
            try:
                yield
            finally:
                if cm.unraisable:
                    if cm.unraisable.err_msg is not None:
                        err_msg = cm.unraisable.err_msg
                    else:
                        err_msg = "Exception ignored in"
                    msg = f"{err_msg}: {cm.unraisable.object!r}\n\n"
                    msg += "".join(
                        traceback.format_exception(
                            cm.unraisable.exc_type,
                            cm.unraisable.exc_value,
                            cm.unraisable.exc_traceback,
                        )
                    )
&gt;                   warnings.warn(pytest.PytestUnraisableExceptionWarning(msg))
E                   pytest.PytestUnraisableExceptionWarning: Exception ignored in: 'pandas._libs.tslibs.conversion._localize_tso'
E                   
E                   Traceback (most recent call last):
E                     File "tzconversion.pyx", line 129, in pandas._libs.tslibs.tzconversion.Localizer.utc_val_to_local_val
E                     File "tzconversion.pyx", line 755, in pandas._libs.tslibs.tzconversion._tz_localize_using_tzinfo_api
E                     File "tzconversion.pyx", line 787, in pandas._libs.tslibs.tzconversion._astimezone
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 144, in fromutc
E                       return f(self, dt)
E                              ^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 261, in fromutc
E                       _fold = self._fold_status(dt, dt_wall)
E                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 196, in _fold_status
E                       if self.is_ambiguous(dt_wall):
E                          ^^^^^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py", line 254, in is_ambiguous
E                       naive_dst = self._naive_is_dst(dt)
E                                   ^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py", line 260, in _naive_is_dst
E                       return time.localtime(timestamp + time.timezone).tm_isdst
E                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E                   OSError: [Errno 22] Invalid argument

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\unraisableexception.py:85: PytestUnraisableExceptionWarning</failure></testcase><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[tzlocal()-array-other8]" time="0.009"><failure message="pytest.PytestUnraisableExceptionWarning: Exception ignored in: 'pandas._libs.tslibs.conversion._localize_tso'&#10;&#10;Traceback (most recent call last):&#10;  File &quot;tzconversion.pyx&quot;, line 129, in pandas._libs.tslibs.tzconversion.Localizer.utc_val_to_local_val&#10;  File &quot;tzconversion.pyx&quot;, line 755, in pandas._libs.tslibs.tzconversion._tz_localize_using_tzinfo_api&#10;  File &quot;tzconversion.pyx&quot;, line 787, in pandas._libs.tslibs.tzconversion._astimezone&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 144, in fromutc&#10;    return f(self, dt)&#10;           ^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 261, in fromutc&#10;    _fold = self._fold_status(dt, dt_wall)&#10;            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 196, in _fold_status&#10;    if self.is_ambiguous(dt_wall):&#10;       ^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py&quot;, line 254, in is_ambiguous&#10;    naive_dst = self._naive_is_dst(dt)&#10;                ^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py&quot;, line 260, in _naive_is_dst&#10;    return time.localtime(timestamp + time.timezone).tm_isdst&#10;           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;OSError: [Errno 22] Invalid argument">cls = &lt;class '_pytest.runner.CallInfo'&gt;
func = &lt;function call_and_report.&lt;locals&gt;.&lt;lambda&gt; at 0x0000015D25DCEE80&gt;
when = 'call'
reraise = (&lt;class '_pytest.outcomes.Exit'&gt;, &lt;class 'KeyboardInterrupt'&gt;)

    @classmethod
    def from_call(
        cls,
        func: Callable[[], TResult],
        when: Literal["collect", "setup", "call", "teardown"],
        reraise: type[BaseException] | tuple[type[BaseException], ...] | None = None,
    ) -&gt; CallInfo[TResult]:
        """Call func, wrapping the result in a CallInfo.
    
        :param func:
            The function to call. Called without arguments.
        :type func: Callable[[], _pytest.runner.TResult]
        :param when:
            The phase in which the function is called.
        :param reraise:
            Exception or exceptions that shall propagate if raised by the
            function, instead of being wrapped in the CallInfo.
        """
        excinfo = None
        start = timing.time()
        precise_start = timing.perf_counter()
        try:
&gt;           result: TResult | None = func()

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\runner.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\runner.py:242: in &lt;lambda&gt;
    lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pluggy\_hooks.py:513: in __call__
    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pluggy\_manager.py:120: in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\threadexception.py:92: in pytest_runtest_call
    yield from thread_exception_runtest_hook()
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\threadexception.py:68: in thread_exception_runtest_hook
    yield
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\unraisableexception.py:95: in pytest_runtest_call
    yield from unraisable_exception_runtest_hook()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

    def unraisable_exception_runtest_hook() -&gt; Generator[None, None, None]:
        with catch_unraisable_exception() as cm:
            try:
                yield
            finally:
                if cm.unraisable:
                    if cm.unraisable.err_msg is not None:
                        err_msg = cm.unraisable.err_msg
                    else:
                        err_msg = "Exception ignored in"
                    msg = f"{err_msg}: {cm.unraisable.object!r}\n\n"
                    msg += "".join(
                        traceback.format_exception(
                            cm.unraisable.exc_type,
                            cm.unraisable.exc_value,
                            cm.unraisable.exc_traceback,
                        )
                    )
&gt;                   warnings.warn(pytest.PytestUnraisableExceptionWarning(msg))
E                   pytest.PytestUnraisableExceptionWarning: Exception ignored in: 'pandas._libs.tslibs.conversion._localize_tso'
E                   
E                   Traceback (most recent call last):
E                     File "tzconversion.pyx", line 129, in pandas._libs.tslibs.tzconversion.Localizer.utc_val_to_local_val
E                     File "tzconversion.pyx", line 755, in pandas._libs.tslibs.tzconversion._tz_localize_using_tzinfo_api
E                     File "tzconversion.pyx", line 787, in pandas._libs.tslibs.tzconversion._astimezone
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 144, in fromutc
E                       return f(self, dt)
E                              ^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 261, in fromutc
E                       _fold = self._fold_status(dt, dt_wall)
E                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 196, in _fold_status
E                       if self.is_ambiguous(dt_wall):
E                          ^^^^^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py", line 254, in is_ambiguous
E                       naive_dst = self._naive_is_dst(dt)
E                                   ^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py", line 260, in _naive_is_dst
E                       return time.localtime(timestamp + time.timezone).tm_isdst
E                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E                   OSError: [Errno 22] Invalid argument

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\unraisableexception.py:85: PytestUnraisableExceptionWarning</failure></testcase><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[tzlocal()-array-other9]" time="0.013"><failure message="pytest.PytestUnraisableExceptionWarning: Exception ignored in: 'pandas._libs.tslibs.conversion._localize_tso'&#10;&#10;Traceback (most recent call last):&#10;  File &quot;tzconversion.pyx&quot;, line 129, in pandas._libs.tslibs.tzconversion.Localizer.utc_val_to_local_val&#10;  File &quot;tzconversion.pyx&quot;, line 755, in pandas._libs.tslibs.tzconversion._tz_localize_using_tzinfo_api&#10;  File &quot;tzconversion.pyx&quot;, line 787, in pandas._libs.tslibs.tzconversion._astimezone&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 144, in fromutc&#10;    return f(self, dt)&#10;           ^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 261, in fromutc&#10;    _fold = self._fold_status(dt, dt_wall)&#10;            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 196, in _fold_status&#10;    if self.is_ambiguous(dt_wall):&#10;       ^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py&quot;, line 254, in is_ambiguous&#10;    naive_dst = self._naive_is_dst(dt)&#10;                ^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py&quot;, line 260, in _naive_is_dst&#10;    return time.localtime(timestamp + time.timezone).tm_isdst&#10;           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;OSError: [Errno 22] Invalid argument">self = &lt;pandas.tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons object at 0x0000015D7CA9B800&gt;
other = Index([1971-01-01, 1971-01-02, 1971-01-03, 1971-01-04, 1971-01-05, 1971-01-06,
       1971-01-07, 1971-01-08, 1971-01-09, 1971-01-10],
      dtype='object')
tz_naive_fixture = tzlocal()
box_with_array = &lt;function array at 0x0000015D77427B00&gt;

    @pytest.mark.parametrize(
        "other",
        [
            # GH#4968 invalid date/int comparisons
            list(range(10)),
            np.arange(10),
            np.arange(10).astype(np.float32),
            np.arange(10).astype(object),
            pd.timedelta_range("1ns", periods=10).array,
            np.array(pd.timedelta_range("1ns", periods=10)),
            list(pd.timedelta_range("1ns", periods=10)),
            pd.timedelta_range("1 Day", periods=10).astype(object),
            pd.period_range("1971-01-01", freq="D", periods=10).array,
            pd.period_range("1971-01-01", freq="D", periods=10).astype(object),
        ],
    )
    def test_dt64arr_cmp_arraylike_invalid(
        self, other, tz_naive_fixture, box_with_array
    ):
        tz = tz_naive_fixture
    
        dta = date_range("1970-01-01", freq="ns", periods=10, tz=tz)._data
        obj = tm.box_expected(dta, box_with_array)
&gt;       assert_invalid_comparison(obj, other, box_with_array)

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\arithmetic\test_datetime64.py:117: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\arithmetic\common.py:111: in assert_invalid_comparison
    result = xbox2(left == right)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\ops\common.py:76: in new_method
    return method(self, other)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\arraylike.py:40: in __eq__
    return self._cmp_method(other, operator.eq)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\indexes\base.py:7194: in _cmp_method
    result = op(self._values, other)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\arrays\datetimelike.py:2200: in __array_ufunc__
    return super().__array_ufunc__(ufunc, method, *inputs, **kwargs)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\arrays\base.py:2282: in __array_ufunc__
    result = arraylike.maybe_dispatch_ufunc_to_dunder_op(
ops_dispatch.pyx:113: in pandas._libs.ops_dispatch.maybe_dispatch_ufunc_to_dunder_op
    ???
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\ops\common.py:76: in new_method
    return method(self, other)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\arraylike.py:40: in __eq__
    return self._cmp_method(other, operator.eq)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\arrays\datetimelike.py:992: in _cmp_method
    op, np.asarray(self.astype(object)), other
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\arrays\datetimes.py:739: in astype
    return dtl.DatetimeLikeArrayMixin.astype(self, dtype, copy)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\arrays\datetimelike.py:460: in astype
    converted = ints_to_pydatetime(
vectorized.pyx:166: in pandas._libs.tslibs.vectorized.ints_to_pydatetime
    ???
tzconversion.pyx:129: in pandas._libs.tslibs.tzconversion.Localizer.utc_val_to_local_val
    ???
tzconversion.pyx:755: in pandas._libs.tslibs.tzconversion._tz_localize_using_tzinfo_api
    ???
tzconversion.pyx:787: in pandas._libs.tslibs.tzconversion._astimezone
    ???
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py:144: in fromutc
    return f(self, dt)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py:261: in fromutc
    _fold = self._fold_status(dt, dt_wall)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py:196: in _fold_status
    if self.is_ambiguous(dt_wall):
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py:254: in is_ambiguous
    naive_dst = self._naive_is_dst(dt)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = tzlocal(), dt = datetime.datetime(1969, 12, 31, 21, 0, tzinfo=tzlocal())

    def _naive_is_dst(self, dt):
        timestamp = _datetime_to_timestamp(dt)
&gt;       return time.localtime(timestamp + time.timezone).tm_isdst
E       OSError: [Errno 22] Invalid argument

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py:260: OSError

During handling of the above exception, another exception occurred:

cls = &lt;class '_pytest.runner.CallInfo'&gt;
func = &lt;function call_and_report.&lt;locals&gt;.&lt;lambda&gt; at 0x0000015D25DCDF80&gt;
when = 'call'
reraise = (&lt;class '_pytest.outcomes.Exit'&gt;, &lt;class 'KeyboardInterrupt'&gt;)

    @classmethod
    def from_call(
        cls,
        func: Callable[[], TResult],
        when: Literal["collect", "setup", "call", "teardown"],
        reraise: type[BaseException] | tuple[type[BaseException], ...] | None = None,
    ) -&gt; CallInfo[TResult]:
        """Call func, wrapping the result in a CallInfo.
    
        :param func:
            The function to call. Called without arguments.
        :type func: Callable[[], _pytest.runner.TResult]
        :param when:
            The phase in which the function is called.
        :param reraise:
            Exception or exceptions that shall propagate if raised by the
            function, instead of being wrapped in the CallInfo.
        """
        excinfo = None
        start = timing.time()
        precise_start = timing.perf_counter()
        try:
&gt;           result: TResult | None = func()

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\runner.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\runner.py:242: in &lt;lambda&gt;
    lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pluggy\_hooks.py:513: in __call__
    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pluggy\_manager.py:120: in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\threadexception.py:92: in pytest_runtest_call
    yield from thread_exception_runtest_hook()
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\threadexception.py:68: in thread_exception_runtest_hook
    yield
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\unraisableexception.py:95: in pytest_runtest_call
    yield from unraisable_exception_runtest_hook()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

    def unraisable_exception_runtest_hook() -&gt; Generator[None, None, None]:
        with catch_unraisable_exception() as cm:
            try:
                yield
            finally:
                if cm.unraisable:
                    if cm.unraisable.err_msg is not None:
                        err_msg = cm.unraisable.err_msg
                    else:
                        err_msg = "Exception ignored in"
                    msg = f"{err_msg}: {cm.unraisable.object!r}\n\n"
                    msg += "".join(
                        traceback.format_exception(
                            cm.unraisable.exc_type,
                            cm.unraisable.exc_value,
                            cm.unraisable.exc_traceback,
                        )
                    )
&gt;                   warnings.warn(pytest.PytestUnraisableExceptionWarning(msg))
E                   pytest.PytestUnraisableExceptionWarning: Exception ignored in: 'pandas._libs.tslibs.conversion._localize_tso'
E                   
E                   Traceback (most recent call last):
E                     File "tzconversion.pyx", line 129, in pandas._libs.tslibs.tzconversion.Localizer.utc_val_to_local_val
E                     File "tzconversion.pyx", line 755, in pandas._libs.tslibs.tzconversion._tz_localize_using_tzinfo_api
E                     File "tzconversion.pyx", line 787, in pandas._libs.tslibs.tzconversion._astimezone
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 144, in fromutc
E                       return f(self, dt)
E                              ^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 261, in fromutc
E                       _fold = self._fold_status(dt, dt_wall)
E                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 196, in _fold_status
E                       if self.is_ambiguous(dt_wall):
E                          ^^^^^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py", line 254, in is_ambiguous
E                       naive_dst = self._naive_is_dst(dt)
E                                   ^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py", line 260, in _naive_is_dst
E                       return time.localtime(timestamp + time.timezone).tm_isdst
E                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E                   OSError: [Errno 22] Invalid argument

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\unraisableexception.py:85: PytestUnraisableExceptionWarning</failure></testcase><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[pytz.FixedOffset(300)-Index-other0]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[pytz.FixedOffset(300)-Index-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[pytz.FixedOffset(300)-Index-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[pytz.FixedOffset(300)-Index-other3]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[pytz.FixedOffset(300)-Index-other4]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[pytz.FixedOffset(300)-Index-other5]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[pytz.FixedOffset(300)-Index-other6]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[pytz.FixedOffset(300)-Index-other7]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[pytz.FixedOffset(300)-Index-other8]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[pytz.FixedOffset(300)-Index-other9]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[pytz.FixedOffset(300)-Series-other0]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[pytz.FixedOffset(300)-Series-other1]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[pytz.FixedOffset(300)-Series-other2]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[pytz.FixedOffset(300)-Series-other3]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[pytz.FixedOffset(300)-Series-other4]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[pytz.FixedOffset(300)-Series-other5]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[pytz.FixedOffset(300)-Series-other6]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[pytz.FixedOffset(300)-Series-other7]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[pytz.FixedOffset(300)-Series-other8]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[pytz.FixedOffset(300)-Series-other9]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[pytz.FixedOffset(300)-DataFrame-other0]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[pytz.FixedOffset(300)-DataFrame-other1]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[pytz.FixedOffset(300)-DataFrame-other2]" time="0.023" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[pytz.FixedOffset(300)-DataFrame-other3]" time="0.028" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[pytz.FixedOffset(300)-DataFrame-other4]" time="0.020" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[pytz.FixedOffset(300)-DataFrame-other5]" time="0.018" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[pytz.FixedOffset(300)-DataFrame-other6]" time="0.023" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[pytz.FixedOffset(300)-DataFrame-other7]" time="0.026" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[pytz.FixedOffset(300)-DataFrame-other8]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[pytz.FixedOffset(300)-DataFrame-other9]" time="0.019" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[pytz.FixedOffset(300)-array-other0]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[pytz.FixedOffset(300)-array-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[pytz.FixedOffset(300)-array-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[pytz.FixedOffset(300)-array-other3]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[pytz.FixedOffset(300)-array-other4]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[pytz.FixedOffset(300)-array-other5]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[pytz.FixedOffset(300)-array-other6]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[pytz.FixedOffset(300)-array-other7]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[pytz.FixedOffset(300)-array-other8]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[pytz.FixedOffset(300)-array-other9]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[&lt;UTC&gt;-Index-other0]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[&lt;UTC&gt;-Index-other1]" time="0.018" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[&lt;UTC&gt;-Index-other2]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[&lt;UTC&gt;-Index-other3]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[&lt;UTC&gt;-Index-other4]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[&lt;UTC&gt;-Index-other5]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[&lt;UTC&gt;-Index-other6]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[&lt;UTC&gt;-Index-other7]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[&lt;UTC&gt;-Index-other8]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[&lt;UTC&gt;-Index-other9]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[&lt;UTC&gt;-Series-other0]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[&lt;UTC&gt;-Series-other1]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[&lt;UTC&gt;-Series-other2]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[&lt;UTC&gt;-Series-other3]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[&lt;UTC&gt;-Series-other4]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[&lt;UTC&gt;-Series-other5]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[&lt;UTC&gt;-Series-other6]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[&lt;UTC&gt;-Series-other7]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[&lt;UTC&gt;-Series-other8]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[&lt;UTC&gt;-Series-other9]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[&lt;UTC&gt;-DataFrame-other0]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[&lt;UTC&gt;-DataFrame-other1]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[&lt;UTC&gt;-DataFrame-other2]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[&lt;UTC&gt;-DataFrame-other3]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[&lt;UTC&gt;-DataFrame-other4]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[&lt;UTC&gt;-DataFrame-other5]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[&lt;UTC&gt;-DataFrame-other6]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[&lt;UTC&gt;-DataFrame-other7]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[&lt;UTC&gt;-DataFrame-other8]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[&lt;UTC&gt;-DataFrame-other9]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[&lt;UTC&gt;-array-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[&lt;UTC&gt;-array-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[&lt;UTC&gt;-array-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[&lt;UTC&gt;-array-other3]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[&lt;UTC&gt;-array-other4]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[&lt;UTC&gt;-array-other5]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[&lt;UTC&gt;-array-other6]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[&lt;UTC&gt;-array-other7]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[&lt;UTC&gt;-array-other8]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[&lt;UTC&gt;-array-other9]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[pytz.FixedOffset(-300)-Index-other0]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[pytz.FixedOffset(-300)-Index-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[pytz.FixedOffset(-300)-Index-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[pytz.FixedOffset(-300)-Index-other3]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[pytz.FixedOffset(-300)-Index-other4]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[pytz.FixedOffset(-300)-Index-other5]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[pytz.FixedOffset(-300)-Index-other6]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[pytz.FixedOffset(-300)-Index-other7]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[pytz.FixedOffset(-300)-Index-other8]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[pytz.FixedOffset(-300)-Index-other9]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[pytz.FixedOffset(-300)-Series-other0]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[pytz.FixedOffset(-300)-Series-other1]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[pytz.FixedOffset(-300)-Series-other2]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[pytz.FixedOffset(-300)-Series-other3]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[pytz.FixedOffset(-300)-Series-other4]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[pytz.FixedOffset(-300)-Series-other5]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[pytz.FixedOffset(-300)-Series-other6]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[pytz.FixedOffset(-300)-Series-other7]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[pytz.FixedOffset(-300)-Series-other8]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[pytz.FixedOffset(-300)-Series-other9]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[pytz.FixedOffset(-300)-DataFrame-other0]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[pytz.FixedOffset(-300)-DataFrame-other1]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[pytz.FixedOffset(-300)-DataFrame-other2]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[pytz.FixedOffset(-300)-DataFrame-other3]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[pytz.FixedOffset(-300)-DataFrame-other4]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[pytz.FixedOffset(-300)-DataFrame-other5]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[pytz.FixedOffset(-300)-DataFrame-other6]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[pytz.FixedOffset(-300)-DataFrame-other7]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[pytz.FixedOffset(-300)-DataFrame-other8]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[pytz.FixedOffset(-300)-DataFrame-other9]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[pytz.FixedOffset(-300)-array-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[pytz.FixedOffset(-300)-array-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[pytz.FixedOffset(-300)-array-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[pytz.FixedOffset(-300)-array-other3]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[pytz.FixedOffset(-300)-array-other4]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[pytz.FixedOffset(-300)-array-other5]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[pytz.FixedOffset(-300)-array-other6]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[pytz.FixedOffset(-300)-array-other7]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[pytz.FixedOffset(-300)-array-other8]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[pytz.FixedOffset(-300)-array-other9]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone.utc-Index-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone.utc-Index-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone.utc-Index-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone.utc-Index-other3]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone.utc-Index-other4]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone.utc-Index-other5]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone.utc-Index-other6]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone.utc-Index-other7]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone.utc-Index-other8]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone.utc-Index-other9]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone.utc-Series-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone.utc-Series-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone.utc-Series-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone.utc-Series-other3]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone.utc-Series-other4]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone.utc-Series-other5]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone.utc-Series-other6]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone.utc-Series-other7]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone.utc-Series-other8]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone.utc-Series-other9]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone.utc-DataFrame-other0]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone.utc-DataFrame-other1]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone.utc-DataFrame-other2]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone.utc-DataFrame-other3]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone.utc-DataFrame-other4]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone.utc-DataFrame-other5]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone.utc-DataFrame-other6]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone.utc-DataFrame-other7]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone.utc-DataFrame-other8]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone.utc-DataFrame-other9]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone.utc-array-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone.utc-array-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone.utc-array-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone.utc-array-other3]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone.utc-array-other4]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone.utc-array-other5]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone.utc-array-other6]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone.utc-array-other7]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone.utc-array-other8]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone.utc-array-other9]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone(datetime.timedelta(seconds=3600))-Index-other0]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone(datetime.timedelta(seconds=3600))-Index-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone(datetime.timedelta(seconds=3600))-Index-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone(datetime.timedelta(seconds=3600))-Index-other3]" time="0.041" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone(datetime.timedelta(seconds=3600))-Index-other4]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone(datetime.timedelta(seconds=3600))-Index-other5]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone(datetime.timedelta(seconds=3600))-Index-other6]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone(datetime.timedelta(seconds=3600))-Index-other7]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone(datetime.timedelta(seconds=3600))-Index-other8]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone(datetime.timedelta(seconds=3600))-Index-other9]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone(datetime.timedelta(seconds=3600))-Series-other0]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone(datetime.timedelta(seconds=3600))-Series-other1]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone(datetime.timedelta(seconds=3600))-Series-other2]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone(datetime.timedelta(seconds=3600))-Series-other3]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone(datetime.timedelta(seconds=3600))-Series-other4]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone(datetime.timedelta(seconds=3600))-Series-other5]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone(datetime.timedelta(seconds=3600))-Series-other6]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone(datetime.timedelta(seconds=3600))-Series-other7]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone(datetime.timedelta(seconds=3600))-Series-other8]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone(datetime.timedelta(seconds=3600))-Series-other9]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone(datetime.timedelta(seconds=3600))-DataFrame-other0]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone(datetime.timedelta(seconds=3600))-DataFrame-other1]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone(datetime.timedelta(seconds=3600))-DataFrame-other2]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone(datetime.timedelta(seconds=3600))-DataFrame-other3]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone(datetime.timedelta(seconds=3600))-DataFrame-other4]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone(datetime.timedelta(seconds=3600))-DataFrame-other5]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone(datetime.timedelta(seconds=3600))-DataFrame-other6]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone(datetime.timedelta(seconds=3600))-DataFrame-other7]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone(datetime.timedelta(seconds=3600))-DataFrame-other8]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone(datetime.timedelta(seconds=3600))-DataFrame-other9]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone(datetime.timedelta(seconds=3600))-array-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone(datetime.timedelta(seconds=3600))-array-other1]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone(datetime.timedelta(seconds=3600))-array-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone(datetime.timedelta(seconds=3600))-array-other3]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone(datetime.timedelta(seconds=3600))-array-other4]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone(datetime.timedelta(seconds=3600))-array-other5]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone(datetime.timedelta(seconds=3600))-array-other6]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone(datetime.timedelta(seconds=3600))-array-other7]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone(datetime.timedelta(seconds=3600))-array-other8]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone(datetime.timedelta(seconds=3600))-array-other9]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Index-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Index-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Index-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Index-other3]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Index-other4]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Index-other5]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Index-other6]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Index-other7]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Index-other8]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Index-other9]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Series-other0]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Series-other1]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Series-other2]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Series-other3]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Series-other4]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Series-other5]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Series-other6]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Series-other7]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Series-other8]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Series-other9]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-DataFrame-other0]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-DataFrame-other1]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-DataFrame-other2]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-DataFrame-other3]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-DataFrame-other4]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-DataFrame-other5]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-DataFrame-other6]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-DataFrame-other7]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-DataFrame-other8]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-DataFrame-other9]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-array-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-array-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-array-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-array-other3]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-array-other4]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-array-other5]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-array-other6]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-array-other7]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-array-other8]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-array-other9]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[zoneinfo.ZoneInfo(key='US/Pacific')-Index-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[zoneinfo.ZoneInfo(key='US/Pacific')-Index-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[zoneinfo.ZoneInfo(key='US/Pacific')-Index-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[zoneinfo.ZoneInfo(key='US/Pacific')-Index-other3]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[zoneinfo.ZoneInfo(key='US/Pacific')-Index-other4]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[zoneinfo.ZoneInfo(key='US/Pacific')-Index-other5]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[zoneinfo.ZoneInfo(key='US/Pacific')-Index-other6]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[zoneinfo.ZoneInfo(key='US/Pacific')-Index-other7]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[zoneinfo.ZoneInfo(key='US/Pacific')-Index-other8]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[zoneinfo.ZoneInfo(key='US/Pacific')-Index-other9]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[zoneinfo.ZoneInfo(key='US/Pacific')-Series-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[zoneinfo.ZoneInfo(key='US/Pacific')-Series-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[zoneinfo.ZoneInfo(key='US/Pacific')-Series-other2]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[zoneinfo.ZoneInfo(key='US/Pacific')-Series-other3]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[zoneinfo.ZoneInfo(key='US/Pacific')-Series-other4]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[zoneinfo.ZoneInfo(key='US/Pacific')-Series-other5]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[zoneinfo.ZoneInfo(key='US/Pacific')-Series-other6]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[zoneinfo.ZoneInfo(key='US/Pacific')-Series-other7]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[zoneinfo.ZoneInfo(key='US/Pacific')-Series-other8]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[zoneinfo.ZoneInfo(key='US/Pacific')-Series-other9]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[zoneinfo.ZoneInfo(key='US/Pacific')-DataFrame-other0]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[zoneinfo.ZoneInfo(key='US/Pacific')-DataFrame-other1]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[zoneinfo.ZoneInfo(key='US/Pacific')-DataFrame-other2]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[zoneinfo.ZoneInfo(key='US/Pacific')-DataFrame-other3]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[zoneinfo.ZoneInfo(key='US/Pacific')-DataFrame-other4]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[zoneinfo.ZoneInfo(key='US/Pacific')-DataFrame-other5]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[zoneinfo.ZoneInfo(key='US/Pacific')-DataFrame-other6]" time="0.020" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[zoneinfo.ZoneInfo(key='US/Pacific')-DataFrame-other7]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[zoneinfo.ZoneInfo(key='US/Pacific')-DataFrame-other8]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[zoneinfo.ZoneInfo(key='US/Pacific')-DataFrame-other9]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[zoneinfo.ZoneInfo(key='US/Pacific')-array-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[zoneinfo.ZoneInfo(key='US/Pacific')-array-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[zoneinfo.ZoneInfo(key='US/Pacific')-array-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[zoneinfo.ZoneInfo(key='US/Pacific')-array-other3]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[zoneinfo.ZoneInfo(key='US/Pacific')-array-other4]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[zoneinfo.ZoneInfo(key='US/Pacific')-array-other5]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[zoneinfo.ZoneInfo(key='US/Pacific')-array-other6]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[zoneinfo.ZoneInfo(key='US/Pacific')-array-other7]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[zoneinfo.ZoneInfo(key='US/Pacific')-array-other8]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[zoneinfo.ZoneInfo(key='US/Pacific')-array-other9]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[zoneinfo.ZoneInfo(key='UTC')-Index-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[zoneinfo.ZoneInfo(key='UTC')-Index-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[zoneinfo.ZoneInfo(key='UTC')-Index-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[zoneinfo.ZoneInfo(key='UTC')-Index-other3]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[zoneinfo.ZoneInfo(key='UTC')-Index-other4]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[zoneinfo.ZoneInfo(key='UTC')-Index-other5]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[zoneinfo.ZoneInfo(key='UTC')-Index-other6]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[zoneinfo.ZoneInfo(key='UTC')-Index-other7]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[zoneinfo.ZoneInfo(key='UTC')-Index-other8]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[zoneinfo.ZoneInfo(key='UTC')-Index-other9]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[zoneinfo.ZoneInfo(key='UTC')-Series-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[zoneinfo.ZoneInfo(key='UTC')-Series-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[zoneinfo.ZoneInfo(key='UTC')-Series-other2]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[zoneinfo.ZoneInfo(key='UTC')-Series-other3]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[zoneinfo.ZoneInfo(key='UTC')-Series-other4]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[zoneinfo.ZoneInfo(key='UTC')-Series-other5]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[zoneinfo.ZoneInfo(key='UTC')-Series-other6]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[zoneinfo.ZoneInfo(key='UTC')-Series-other7]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[zoneinfo.ZoneInfo(key='UTC')-Series-other8]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[zoneinfo.ZoneInfo(key='UTC')-Series-other9]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[zoneinfo.ZoneInfo(key='UTC')-DataFrame-other0]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[zoneinfo.ZoneInfo(key='UTC')-DataFrame-other1]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[zoneinfo.ZoneInfo(key='UTC')-DataFrame-other2]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[zoneinfo.ZoneInfo(key='UTC')-DataFrame-other3]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[zoneinfo.ZoneInfo(key='UTC')-DataFrame-other4]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[zoneinfo.ZoneInfo(key='UTC')-DataFrame-other5]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[zoneinfo.ZoneInfo(key='UTC')-DataFrame-other6]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[zoneinfo.ZoneInfo(key='UTC')-DataFrame-other7]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[zoneinfo.ZoneInfo(key='UTC')-DataFrame-other8]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[zoneinfo.ZoneInfo(key='UTC')-DataFrame-other9]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[zoneinfo.ZoneInfo(key='UTC')-array-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[zoneinfo.ZoneInfo(key='UTC')-array-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[zoneinfo.ZoneInfo(key='UTC')-array-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[zoneinfo.ZoneInfo(key='UTC')-array-other3]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[zoneinfo.ZoneInfo(key='UTC')-array-other4]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[zoneinfo.ZoneInfo(key='UTC')-array-other5]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[zoneinfo.ZoneInfo(key='UTC')-array-other6]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[zoneinfo.ZoneInfo(key='UTC')-array-other7]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[zoneinfo.ZoneInfo(key='UTC')-array-other8]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_arraylike_invalid[zoneinfo.ZoneInfo(key='UTC')-array-other9]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_mixed_invalid[None]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_mixed_invalid['UTC']" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_mixed_invalid['US/Eastern']" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_mixed_invalid['Asia/Tokyo']" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_mixed_invalid['dateutil/US/Pacific']" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_mixed_invalid['dateutil/Asia/Singapore']" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_mixed_invalid['+01:15']" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_mixed_invalid['-02:15']" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_mixed_invalid['UTC+01:15']" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_mixed_invalid['UTC-02:15']" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_mixed_invalid[tzutc()]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_mixed_invalid[tzlocal()]" time="0.013"><failure message="pytest.PytestUnraisableExceptionWarning: Exception ignored in: 'pandas._libs.tslibs.conversion._localize_tso'&#10;&#10;Traceback (most recent call last):&#10;  File &quot;tzconversion.pyx&quot;, line 129, in pandas._libs.tslibs.tzconversion.Localizer.utc_val_to_local_val&#10;  File &quot;tzconversion.pyx&quot;, line 755, in pandas._libs.tslibs.tzconversion._tz_localize_using_tzinfo_api&#10;  File &quot;tzconversion.pyx&quot;, line 787, in pandas._libs.tslibs.tzconversion._astimezone&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 144, in fromutc&#10;    return f(self, dt)&#10;           ^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 261, in fromutc&#10;    _fold = self._fold_status(dt, dt_wall)&#10;            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py&quot;, line 196, in _fold_status&#10;    if self.is_ambiguous(dt_wall):&#10;       ^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py&quot;, line 254, in is_ambiguous&#10;    naive_dst = self._naive_is_dst(dt)&#10;                ^^^^^^^^^^^^^^^^^^^^^^&#10;  File &quot;C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py&quot;, line 260, in _naive_is_dst&#10;    return time.localtime(timestamp + time.timezone).tm_isdst&#10;           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&#10;OSError: [Errno 22] Invalid argument">self = &lt;pandas.tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons object at 0x0000015D7CB57800&gt;
tz_naive_fixture = tzlocal()

    def test_dt64arr_cmp_mixed_invalid(self, tz_naive_fixture):
        tz = tz_naive_fixture
    
        dta = date_range("1970-01-01", freq="h", periods=5, tz=tz)._data
    
        other = np.array([0, 1, 2, dta[3], Timedelta(days=1)])
&gt;       result = dta == other

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\arithmetic\test_datetime64.py:125: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\ops\common.py:76: in new_method
    return method(self, other)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\arraylike.py:40: in __eq__
    return self._cmp_method(other, operator.eq)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\arrays\datetimelike.py:992: in _cmp_method
    op, np.asarray(self.astype(object)), other
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\arrays\datetimes.py:739: in astype
    return dtl.DatetimeLikeArrayMixin.astype(self, dtype, copy)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\core\arrays\datetimelike.py:460: in astype
    converted = ints_to_pydatetime(
vectorized.pyx:166: in pandas._libs.tslibs.vectorized.ints_to_pydatetime
    ???
tzconversion.pyx:129: in pandas._libs.tslibs.tzconversion.Localizer.utc_val_to_local_val
    ???
tzconversion.pyx:755: in pandas._libs.tslibs.tzconversion._tz_localize_using_tzinfo_api
    ???
tzconversion.pyx:787: in pandas._libs.tslibs.tzconversion._astimezone
    ???
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py:144: in fromutc
    return f(self, dt)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py:261: in fromutc
    _fold = self._fold_status(dt, dt_wall)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py:196: in _fold_status
    if self.is_ambiguous(dt_wall):
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py:254: in is_ambiguous
    naive_dst = self._naive_is_dst(dt)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = tzlocal(), dt = datetime.datetime(1969, 12, 31, 21, 0, tzinfo=tzlocal())

    def _naive_is_dst(self, dt):
        timestamp = _datetime_to_timestamp(dt)
&gt;       return time.localtime(timestamp + time.timezone).tm_isdst
E       OSError: [Errno 22] Invalid argument

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py:260: OSError

During handling of the above exception, another exception occurred:

cls = &lt;class '_pytest.runner.CallInfo'&gt;
func = &lt;function call_and_report.&lt;locals&gt;.&lt;lambda&gt; at 0x0000015D279E0CC0&gt;
when = 'call'
reraise = (&lt;class '_pytest.outcomes.Exit'&gt;, &lt;class 'KeyboardInterrupt'&gt;)

    @classmethod
    def from_call(
        cls,
        func: Callable[[], TResult],
        when: Literal["collect", "setup", "call", "teardown"],
        reraise: type[BaseException] | tuple[type[BaseException], ...] | None = None,
    ) -&gt; CallInfo[TResult]:
        """Call func, wrapping the result in a CallInfo.
    
        :param func:
            The function to call. Called without arguments.
        :type func: Callable[[], _pytest.runner.TResult]
        :param when:
            The phase in which the function is called.
        :param reraise:
            Exception or exceptions that shall propagate if raised by the
            function, instead of being wrapped in the CallInfo.
        """
        excinfo = None
        start = timing.time()
        precise_start = timing.perf_counter()
        try:
&gt;           result: TResult | None = func()

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\runner.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\runner.py:242: in &lt;lambda&gt;
    lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pluggy\_hooks.py:513: in __call__
    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\pluggy\_manager.py:120: in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\threadexception.py:92: in pytest_runtest_call
    yield from thread_exception_runtest_hook()
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\threadexception.py:68: in thread_exception_runtest_hook
    yield
..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\unraisableexception.py:95: in pytest_runtest_call
    yield from unraisable_exception_runtest_hook()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

    def unraisable_exception_runtest_hook() -&gt; Generator[None, None, None]:
        with catch_unraisable_exception() as cm:
            try:
                yield
            finally:
                if cm.unraisable:
                    if cm.unraisable.err_msg is not None:
                        err_msg = cm.unraisable.err_msg
                    else:
                        err_msg = "Exception ignored in"
                    msg = f"{err_msg}: {cm.unraisable.object!r}\n\n"
                    msg += "".join(
                        traceback.format_exception(
                            cm.unraisable.exc_type,
                            cm.unraisable.exc_value,
                            cm.unraisable.exc_traceback,
                        )
                    )
&gt;                   warnings.warn(pytest.PytestUnraisableExceptionWarning(msg))
E                   pytest.PytestUnraisableExceptionWarning: Exception ignored in: 'pandas._libs.tslibs.conversion._localize_tso'
E                   
E                   Traceback (most recent call last):
E                     File "tzconversion.pyx", line 129, in pandas._libs.tslibs.tzconversion.Localizer.utc_val_to_local_val
E                     File "tzconversion.pyx", line 755, in pandas._libs.tslibs.tzconversion._tz_localize_using_tzinfo_api
E                     File "tzconversion.pyx", line 787, in pandas._libs.tslibs.tzconversion._astimezone
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 144, in fromutc
E                       return f(self, dt)
E                              ^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 261, in fromutc
E                       _fold = self._fold_status(dt, dt_wall)
E                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\_common.py", line 196, in _fold_status
E                       if self.is_ambiguous(dt_wall):
E                          ^^^^^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py", line 254, in is_ambiguous
E                       naive_dst = self._naive_is_dst(dt)
E                                   ^^^^^^^^^^^^^^^^^^^^^^
E                     File "C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\dateutil\tz\tz.py", line 260, in _naive_is_dst
E                       return time.localtime(timestamp + time.timezone).tm_isdst
E                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E                   OSError: [Errno 22] Invalid argument

..\..\AppData\Local\Programs\Python\Python312\Lib\site-packages\_pytest\unraisableexception.py:85: PytestUnraisableExceptionWarning</failure></testcase><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_mixed_invalid[pytz.FixedOffset(300)]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_mixed_invalid[&lt;UTC&gt;]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_mixed_invalid[pytz.FixedOffset(-300)]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_mixed_invalid[datetime.timezone.utc]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_mixed_invalid[datetime.timezone(datetime.timedelta(seconds=3600))]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_mixed_invalid[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_mixed_invalid[zoneinfo.ZoneInfo(key='US/Pacific')]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_cmp_mixed_invalid[zoneinfo.ZoneInfo(key='UTC')]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_nat_comparison[None-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_nat_comparison[None-Series]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_nat_comparison[None-DataFrame]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_nat_comparison[None-array]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_nat_comparison['UTC'-Index]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_nat_comparison['UTC'-Series]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_nat_comparison['UTC'-DataFrame]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_nat_comparison['UTC'-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_nat_comparison['US/Eastern'-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_nat_comparison['US/Eastern'-Series]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_nat_comparison['US/Eastern'-DataFrame]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_nat_comparison['US/Eastern'-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_nat_comparison['Asia/Tokyo'-Index]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_nat_comparison['Asia/Tokyo'-Series]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_nat_comparison['Asia/Tokyo'-DataFrame]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_nat_comparison['Asia/Tokyo'-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_nat_comparison['dateutil/US/Pacific'-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_nat_comparison['dateutil/US/Pacific'-Series]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_nat_comparison['dateutil/US/Pacific'-DataFrame]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_nat_comparison['dateutil/US/Pacific'-array]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_nat_comparison['dateutil/Asia/Singapore'-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_nat_comparison['dateutil/Asia/Singapore'-Series]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_nat_comparison['dateutil/Asia/Singapore'-DataFrame]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_nat_comparison['dateutil/Asia/Singapore'-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_nat_comparison['+01:15'-Index]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_nat_comparison['+01:15'-Series]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_nat_comparison['+01:15'-DataFrame]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_nat_comparison['+01:15'-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_nat_comparison['-02:15'-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_nat_comparison['-02:15'-Series]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_nat_comparison['-02:15'-DataFrame]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_nat_comparison['-02:15'-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_nat_comparison['UTC+01:15'-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_nat_comparison['UTC+01:15'-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_nat_comparison['UTC+01:15'-DataFrame]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_nat_comparison['UTC+01:15'-array]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_nat_comparison['UTC-02:15'-Index]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_nat_comparison['UTC-02:15'-Series]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_nat_comparison['UTC-02:15'-DataFrame]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_nat_comparison['UTC-02:15'-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_nat_comparison[tzutc()-Index]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_nat_comparison[tzutc()-Series]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_nat_comparison[tzutc()-DataFrame]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_nat_comparison[tzutc()-array]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_nat_comparison[tzlocal()-Index]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_nat_comparison[tzlocal()-Series]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_nat_comparison[tzlocal()-DataFrame]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_nat_comparison[tzlocal()-array]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_nat_comparison[pytz.FixedOffset(300)-Index]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_nat_comparison[pytz.FixedOffset(300)-Series]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_nat_comparison[pytz.FixedOffset(300)-DataFrame]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_nat_comparison[pytz.FixedOffset(300)-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_nat_comparison[&lt;UTC&gt;-Index]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_nat_comparison[&lt;UTC&gt;-Series]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_nat_comparison[&lt;UTC&gt;-DataFrame]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_nat_comparison[&lt;UTC&gt;-array]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_nat_comparison[pytz.FixedOffset(-300)-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_nat_comparison[pytz.FixedOffset(-300)-Series]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_nat_comparison[pytz.FixedOffset(-300)-DataFrame]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_nat_comparison[pytz.FixedOffset(-300)-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_nat_comparison[datetime.timezone.utc-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_nat_comparison[datetime.timezone.utc-Series]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_nat_comparison[datetime.timezone.utc-DataFrame]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_nat_comparison[datetime.timezone.utc-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_nat_comparison[datetime.timezone(datetime.timedelta(seconds=3600))-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_nat_comparison[datetime.timezone(datetime.timedelta(seconds=3600))-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_nat_comparison[datetime.timezone(datetime.timedelta(seconds=3600))-DataFrame]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_nat_comparison[datetime.timezone(datetime.timedelta(seconds=3600))-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_nat_comparison[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_nat_comparison[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_nat_comparison[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-DataFrame]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_nat_comparison[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_nat_comparison[zoneinfo.ZoneInfo(key='US/Pacific')-Index]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_nat_comparison[zoneinfo.ZoneInfo(key='US/Pacific')-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_nat_comparison[zoneinfo.ZoneInfo(key='US/Pacific')-DataFrame]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_nat_comparison[zoneinfo.ZoneInfo(key='US/Pacific')-array]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_nat_comparison[zoneinfo.ZoneInfo(key='UTC')-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_nat_comparison[zoneinfo.ZoneInfo(key='UTC')-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_nat_comparison[zoneinfo.ZoneInfo(key='UTC')-DataFrame]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64ArrayLikeComparisons" name="test_dt64arr_nat_comparison[zoneinfo.ZoneInfo(key='UTC')-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[index-eq-expected0-None-True-pair0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[index-eq-expected0-None-True-pair1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[index-eq-expected0-None-True-pair2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[index-eq-expected0-None-False-pair0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[index-eq-expected0-None-False-pair1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[index-eq-expected0-None-False-pair2]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[index-eq-expected0-object-True-pair0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[index-eq-expected0-object-True-pair1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[index-eq-expected0-object-True-pair2]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[index-eq-expected0-object-False-pair0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[index-eq-expected0-object-False-pair1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[index-eq-expected0-object-False-pair2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[index-ne-expected1-None-True-pair0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[index-ne-expected1-None-True-pair1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[index-ne-expected1-None-True-pair2]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[index-ne-expected1-None-False-pair0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[index-ne-expected1-None-False-pair1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[index-ne-expected1-None-False-pair2]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[index-ne-expected1-object-True-pair0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[index-ne-expected1-object-True-pair1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[index-ne-expected1-object-True-pair2]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[index-ne-expected1-object-False-pair0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[index-ne-expected1-object-False-pair1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[index-ne-expected1-object-False-pair2]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[index-lt-expected2-None-True-pair0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[index-lt-expected2-None-True-pair1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[index-lt-expected2-None-True-pair2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[index-lt-expected2-None-False-pair0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[index-lt-expected2-None-False-pair1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[index-lt-expected2-None-False-pair2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[index-lt-expected2-object-True-pair0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[index-lt-expected2-object-True-pair1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[index-lt-expected2-object-True-pair2]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[index-lt-expected2-object-False-pair0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[index-lt-expected2-object-False-pair1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[index-lt-expected2-object-False-pair2]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[index-gt-expected3-None-True-pair0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[index-gt-expected3-None-True-pair1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[index-gt-expected3-None-True-pair2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[index-gt-expected3-None-False-pair0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[index-gt-expected3-None-False-pair1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[index-gt-expected3-None-False-pair2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[index-gt-expected3-object-True-pair0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[index-gt-expected3-object-True-pair1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[index-gt-expected3-object-True-pair2]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[index-gt-expected3-object-False-pair0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[index-gt-expected3-object-False-pair1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[index-gt-expected3-object-False-pair2]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[index-ge-expected4-None-True-pair0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[index-ge-expected4-None-True-pair1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[index-ge-expected4-None-True-pair2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[index-ge-expected4-None-False-pair0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[index-ge-expected4-None-False-pair1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[index-ge-expected4-None-False-pair2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[index-ge-expected4-object-True-pair0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[index-ge-expected4-object-True-pair1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[index-ge-expected4-object-True-pair2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[index-ge-expected4-object-False-pair0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[index-ge-expected4-object-False-pair1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[index-ge-expected4-object-False-pair2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[index-le-expected5-None-True-pair0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[index-le-expected5-None-True-pair1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[index-le-expected5-None-True-pair2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[index-le-expected5-None-False-pair0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[index-le-expected5-None-False-pair1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[index-le-expected5-None-False-pair2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[index-le-expected5-object-True-pair0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[index-le-expected5-object-True-pair1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[index-le-expected5-object-True-pair2]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[index-le-expected5-object-False-pair0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[index-le-expected5-object-False-pair1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[index-le-expected5-object-False-pair2]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[series-eq-expected0-None-True-pair0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[series-eq-expected0-None-True-pair1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[series-eq-expected0-None-True-pair2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[series-eq-expected0-None-False-pair0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[series-eq-expected0-None-False-pair1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[series-eq-expected0-None-False-pair2]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[series-eq-expected0-object-True-pair0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[series-eq-expected0-object-True-pair1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[series-eq-expected0-object-True-pair2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[series-eq-expected0-object-False-pair0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[series-eq-expected0-object-False-pair1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[series-eq-expected0-object-False-pair2]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[series-ne-expected1-None-True-pair0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[series-ne-expected1-None-True-pair1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[series-ne-expected1-None-True-pair2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[series-ne-expected1-None-False-pair0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[series-ne-expected1-None-False-pair1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[series-ne-expected1-None-False-pair2]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[series-ne-expected1-object-True-pair0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[series-ne-expected1-object-True-pair1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[series-ne-expected1-object-True-pair2]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[series-ne-expected1-object-False-pair0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[series-ne-expected1-object-False-pair1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[series-ne-expected1-object-False-pair2]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[series-lt-expected2-None-True-pair0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[series-lt-expected2-None-True-pair1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[series-lt-expected2-None-True-pair2]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[series-lt-expected2-None-False-pair0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[series-lt-expected2-None-False-pair1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[series-lt-expected2-None-False-pair2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[series-lt-expected2-object-True-pair0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[series-lt-expected2-object-True-pair1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[series-lt-expected2-object-True-pair2]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[series-lt-expected2-object-False-pair0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[series-lt-expected2-object-False-pair1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[series-lt-expected2-object-False-pair2]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[series-gt-expected3-None-True-pair0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[series-gt-expected3-None-True-pair1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[series-gt-expected3-None-True-pair2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[series-gt-expected3-None-False-pair0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[series-gt-expected3-None-False-pair1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[series-gt-expected3-None-False-pair2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[series-gt-expected3-object-True-pair0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[series-gt-expected3-object-True-pair1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[series-gt-expected3-object-True-pair2]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[series-gt-expected3-object-False-pair0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[series-gt-expected3-object-False-pair1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[series-gt-expected3-object-False-pair2]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[series-ge-expected4-None-True-pair0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[series-ge-expected4-None-True-pair1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[series-ge-expected4-None-True-pair2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[series-ge-expected4-None-False-pair0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[series-ge-expected4-None-False-pair1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[series-ge-expected4-None-False-pair2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[series-ge-expected4-object-True-pair0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[series-ge-expected4-object-True-pair1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[series-ge-expected4-object-True-pair2]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[series-ge-expected4-object-False-pair0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[series-ge-expected4-object-False-pair1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[series-ge-expected4-object-False-pair2]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[series-le-expected5-None-True-pair0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[series-le-expected5-None-True-pair1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[series-le-expected5-None-True-pair2]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[series-le-expected5-None-False-pair0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[series-le-expected5-None-False-pair1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[series-le-expected5-None-False-pair2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[series-le-expected5-object-True-pair0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[series-le-expected5-object-True-pair1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[series-le-expected5-object-True-pair2]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[series-le-expected5-object-False-pair0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[series-le-expected5-object-False-pair1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons[series-le-expected5-object-False-pair2]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons_scalar[Index-None-data0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons_scalar[Index-None-data1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons_scalar[Index-None-data2]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons_scalar[Index-object-data0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons_scalar[Index-object-data1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons_scalar[Index-object-data2]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons_scalar[Series-None-data0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons_scalar[Series-None-data1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons_scalar[Series-None-data2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons_scalar[Series-object-data0]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons_scalar[Series-object-data1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons_scalar[Series-object-data2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons_scalar[DataFrame-None-data0]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons_scalar[DataFrame-None-data1]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons_scalar[DataFrame-None-data2]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons_scalar[DataFrame-object-data0]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons_scalar[DataFrame-object-data1]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons_scalar[DataFrame-object-data2]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons_scalar[array-None-data0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons_scalar[array-None-data1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons_scalar[array-None-data2]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons_scalar[array-object-data0]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons_scalar[array-object-data1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_nat_comparisons_scalar[array-object-data2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_series_comparison_scalars[val0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_series_comparison_scalars[val1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_timestamp_compare_series[lt-gt]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_timestamp_compare_series[le-ge]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_timestamp_compare_series[eq-eq]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_timestamp_compare_series[ne-ne]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_dt64arr_timestamp_equality[Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_dt64arr_timestamp_equality[Series]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_dt64arr_timestamp_equality[DataFrame]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_dt64arr_timestamp_equality[array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_dt64_compare_datetime_scalar[lt-expected0-datetimelike0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_dt64_compare_datetime_scalar[lt-expected0-datetimelike1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_dt64_compare_datetime_scalar[lt-expected0-datetimelike2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_dt64_compare_datetime_scalar[le-expected1-datetimelike0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_dt64_compare_datetime_scalar[le-expected1-datetimelike1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_dt64_compare_datetime_scalar[le-expected1-datetimelike2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_dt64_compare_datetime_scalar[eq-expected2-datetimelike0]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_dt64_compare_datetime_scalar[eq-expected2-datetimelike1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_dt64_compare_datetime_scalar[eq-expected2-datetimelike2]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_dt64_compare_datetime_scalar[gt-expected3-datetimelike0]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_dt64_compare_datetime_scalar[gt-expected3-datetimelike1]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64SeriesComparison" name="test_dt64_compare_datetime_scalar[gt-expected3-datetimelike2]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_comparators[eq]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_comparators[ne]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_comparators[gt]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_comparators[ge]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_comparators[lt]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_comparators[le]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_dti_cmp_datetimelike[None-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_dti_cmp_datetimelike[None-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_dti_cmp_datetimelike[None-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_dti_cmp_datetimelike['UTC'-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_dti_cmp_datetimelike['UTC'-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_dti_cmp_datetimelike['UTC'-other2]" time="0.001"><skipped type="pytest.skip" message="datetime64 is not tz aware">C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\arithmetic\test_datetime64.py:417: datetime64 is not tz aware</skipped></testcase><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_dti_cmp_datetimelike['US/Eastern'-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_dti_cmp_datetimelike['US/Eastern'-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_dti_cmp_datetimelike['US/Eastern'-other2]" time="0.002"><skipped type="pytest.skip" message="datetime64 is not tz aware">C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\arithmetic\test_datetime64.py:417: datetime64 is not tz aware</skipped></testcase><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_dti_cmp_datetimelike['Asia/Tokyo'-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_dti_cmp_datetimelike['Asia/Tokyo'-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_dti_cmp_datetimelike['Asia/Tokyo'-other2]" time="0.003"><skipped type="pytest.skip" message="datetime64 is not tz aware">C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\arithmetic\test_datetime64.py:417: datetime64 is not tz aware</skipped></testcase><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_dti_cmp_datetimelike['dateutil/US/Pacific'-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_dti_cmp_datetimelike['dateutil/US/Pacific'-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_dti_cmp_datetimelike['dateutil/US/Pacific'-other2]" time="0.002"><skipped type="pytest.skip" message="datetime64 is not tz aware">C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\arithmetic\test_datetime64.py:417: datetime64 is not tz aware</skipped></testcase><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_dti_cmp_datetimelike['dateutil/Asia/Singapore'-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_dti_cmp_datetimelike['dateutil/Asia/Singapore'-other1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_dti_cmp_datetimelike['dateutil/Asia/Singapore'-other2]" time="0.002"><skipped type="pytest.skip" message="datetime64 is not tz aware">C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\arithmetic\test_datetime64.py:417: datetime64 is not tz aware</skipped></testcase><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_dti_cmp_datetimelike['+01:15'-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_dti_cmp_datetimelike['+01:15'-other1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_dti_cmp_datetimelike['+01:15'-other2]" time="0.001"><skipped type="pytest.skip" message="datetime64 is not tz aware">C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\arithmetic\test_datetime64.py:417: datetime64 is not tz aware</skipped></testcase><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_dti_cmp_datetimelike['-02:15'-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_dti_cmp_datetimelike['-02:15'-other1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_dti_cmp_datetimelike['-02:15'-other2]" time="0.001"><skipped type="pytest.skip" message="datetime64 is not tz aware">C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\arithmetic\test_datetime64.py:417: datetime64 is not tz aware</skipped></testcase><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_dti_cmp_datetimelike['UTC+01:15'-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_dti_cmp_datetimelike['UTC+01:15'-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_dti_cmp_datetimelike['UTC+01:15'-other2]" time="0.001"><skipped type="pytest.skip" message="datetime64 is not tz aware">C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\arithmetic\test_datetime64.py:417: datetime64 is not tz aware</skipped></testcase><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_dti_cmp_datetimelike['UTC-02:15'-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_dti_cmp_datetimelike['UTC-02:15'-other1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_dti_cmp_datetimelike['UTC-02:15'-other2]" time="0.001"><skipped type="pytest.skip" message="datetime64 is not tz aware">C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\arithmetic\test_datetime64.py:417: datetime64 is not tz aware</skipped></testcase><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_dti_cmp_datetimelike[tzutc()-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_dti_cmp_datetimelike[tzutc()-other1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_dti_cmp_datetimelike[tzutc()-other2]" time="0.001"><skipped type="pytest.skip" message="datetime64 is not tz aware">C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\arithmetic\test_datetime64.py:417: datetime64 is not tz aware</skipped></testcase><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_dti_cmp_datetimelike[tzlocal()-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_dti_cmp_datetimelike[tzlocal()-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_dti_cmp_datetimelike[tzlocal()-other2]" time="0.001"><skipped type="pytest.skip" message="datetime64 is not tz aware">C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\arithmetic\test_datetime64.py:417: datetime64 is not tz aware</skipped></testcase><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_dti_cmp_datetimelike[pytz.FixedOffset(300)-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_dti_cmp_datetimelike[pytz.FixedOffset(300)-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_dti_cmp_datetimelike[pytz.FixedOffset(300)-other2]" time="0.001"><skipped type="pytest.skip" message="datetime64 is not tz aware">C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\arithmetic\test_datetime64.py:417: datetime64 is not tz aware</skipped></testcase><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_dti_cmp_datetimelike[&lt;UTC&gt;-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_dti_cmp_datetimelike[&lt;UTC&gt;-other1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_dti_cmp_datetimelike[&lt;UTC&gt;-other2]" time="0.001"><skipped type="pytest.skip" message="datetime64 is not tz aware">C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\arithmetic\test_datetime64.py:417: datetime64 is not tz aware</skipped></testcase><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_dti_cmp_datetimelike[pytz.FixedOffset(-300)-other0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_dti_cmp_datetimelike[pytz.FixedOffset(-300)-other1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_dti_cmp_datetimelike[pytz.FixedOffset(-300)-other2]" time="0.001"><skipped type="pytest.skip" message="datetime64 is not tz aware">C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\arithmetic\test_datetime64.py:417: datetime64 is not tz aware</skipped></testcase><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_dti_cmp_datetimelike[datetime.timezone.utc-other0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_dti_cmp_datetimelike[datetime.timezone.utc-other1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_dti_cmp_datetimelike[datetime.timezone.utc-other2]" time="0.001"><skipped type="pytest.skip" message="datetime64 is not tz aware">C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\arithmetic\test_datetime64.py:417: datetime64 is not tz aware</skipped></testcase><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_dti_cmp_datetimelike[datetime.timezone(datetime.timedelta(seconds=3600))-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_dti_cmp_datetimelike[datetime.timezone(datetime.timedelta(seconds=3600))-other1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_dti_cmp_datetimelike[datetime.timezone(datetime.timedelta(seconds=3600))-other2]" time="0.001"><skipped type="pytest.skip" message="datetime64 is not tz aware">C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\arithmetic\test_datetime64.py:417: datetime64 is not tz aware</skipped></testcase><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_dti_cmp_datetimelike[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-other0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_dti_cmp_datetimelike[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-other1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_dti_cmp_datetimelike[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-other2]" time="0.001"><skipped type="pytest.skip" message="datetime64 is not tz aware">C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\arithmetic\test_datetime64.py:417: datetime64 is not tz aware</skipped></testcase><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_dti_cmp_datetimelike[zoneinfo.ZoneInfo(key='US/Pacific')-other0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_dti_cmp_datetimelike[zoneinfo.ZoneInfo(key='US/Pacific')-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_dti_cmp_datetimelike[zoneinfo.ZoneInfo(key='US/Pacific')-other2]" time="0.001"><skipped type="pytest.skip" message="datetime64 is not tz aware">C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\arithmetic\test_datetime64.py:417: datetime64 is not tz aware</skipped></testcase><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_dti_cmp_datetimelike[zoneinfo.ZoneInfo(key='UTC')-other0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_dti_cmp_datetimelike[zoneinfo.ZoneInfo(key='UTC')-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_dti_cmp_datetimelike[zoneinfo.ZoneInfo(key='UTC')-other2]" time="0.001"><skipped type="pytest.skip" message="datetime64 is not tz aware">C:\Users\Dell\AppData\Local\Programs\Python\Python312\Lib\site-packages\pandas\tests\arithmetic\test_datetime64.py:417: datetime64 is not tz aware</skipped></testcase><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_dti_cmp_nat[Index-None]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_dti_cmp_nat[Index-object]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_dti_cmp_nat[Series-None]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_dti_cmp_nat[Series-object]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_dti_cmp_nat[DataFrame-None]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_dti_cmp_nat[DataFrame-object]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_dti_cmp_nat[array-None]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_dti_cmp_nat[array-object]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_dti_cmp_nat_behaves_like_float_cmp_nan" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_comparison_tzawareness_compat[eq-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_comparison_tzawareness_compat[eq-Series]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_comparison_tzawareness_compat[eq-DataFrame]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_comparison_tzawareness_compat[eq-array]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_comparison_tzawareness_compat[ne-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_comparison_tzawareness_compat[ne-Series]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_comparison_tzawareness_compat[ne-DataFrame]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_comparison_tzawareness_compat[ne-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_comparison_tzawareness_compat[gt-Index]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_comparison_tzawareness_compat[gt-Series]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_comparison_tzawareness_compat[gt-DataFrame]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_comparison_tzawareness_compat[gt-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_comparison_tzawareness_compat[ge-Index]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_comparison_tzawareness_compat[ge-Series]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_comparison_tzawareness_compat[ge-DataFrame]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_comparison_tzawareness_compat[ge-array]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_comparison_tzawareness_compat[lt-Index]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_comparison_tzawareness_compat[lt-Series]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_comparison_tzawareness_compat[lt-DataFrame]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_comparison_tzawareness_compat[lt-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_comparison_tzawareness_compat[le-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_comparison_tzawareness_compat[le-Series]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_comparison_tzawareness_compat[le-DataFrame]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_comparison_tzawareness_compat[le-array]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_comparison_tzawareness_compat_scalars[eq-Index]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_comparison_tzawareness_compat_scalars[eq-Series]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_comparison_tzawareness_compat_scalars[eq-DataFrame]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_comparison_tzawareness_compat_scalars[eq-array]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_comparison_tzawareness_compat_scalars[ne-Index]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_comparison_tzawareness_compat_scalars[ne-Series]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_comparison_tzawareness_compat_scalars[ne-DataFrame]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_comparison_tzawareness_compat_scalars[ne-array]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_comparison_tzawareness_compat_scalars[gt-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_comparison_tzawareness_compat_scalars[gt-Series]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_comparison_tzawareness_compat_scalars[gt-DataFrame]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_comparison_tzawareness_compat_scalars[gt-array]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_comparison_tzawareness_compat_scalars[ge-Index]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_comparison_tzawareness_compat_scalars[ge-Series]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_comparison_tzawareness_compat_scalars[ge-DataFrame]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_comparison_tzawareness_compat_scalars[ge-array]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_comparison_tzawareness_compat_scalars[lt-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_comparison_tzawareness_compat_scalars[lt-Series]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_comparison_tzawareness_compat_scalars[lt-DataFrame]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_comparison_tzawareness_compat_scalars[lt-array]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_comparison_tzawareness_compat_scalars[le-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_comparison_tzawareness_compat_scalars[le-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_comparison_tzawareness_compat_scalars[le-DataFrame]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_comparison_tzawareness_compat_scalars[le-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'UTC'-Index-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'UTC'-Index-other1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'UTC'-Index-other2]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'UTC'-Series-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'UTC'-Series-other1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'UTC'-Series-other2]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'UTC'-DataFrame-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'UTC'-DataFrame-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'UTC'-DataFrame-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'UTC'-array-other0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'UTC'-array-other1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'UTC'-array-other2]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'US/Eastern'-Index-other0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'US/Eastern'-Index-other1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'US/Eastern'-Index-other2]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'US/Eastern'-Series-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'US/Eastern'-Series-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'US/Eastern'-Series-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'US/Eastern'-DataFrame-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'US/Eastern'-DataFrame-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'US/Eastern'-DataFrame-other2]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'US/Eastern'-array-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'US/Eastern'-array-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'US/Eastern'-array-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'Asia/Tokyo'-Index-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'Asia/Tokyo'-Index-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'Asia/Tokyo'-Index-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'Asia/Tokyo'-Series-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'Asia/Tokyo'-Series-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'Asia/Tokyo'-Series-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'Asia/Tokyo'-DataFrame-other0]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'Asia/Tokyo'-DataFrame-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'Asia/Tokyo'-DataFrame-other2]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'Asia/Tokyo'-array-other0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'Asia/Tokyo'-array-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'Asia/Tokyo'-array-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'dateutil/US/Pacific'-Index-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'dateutil/US/Pacific'-Index-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'dateutil/US/Pacific'-Index-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'dateutil/US/Pacific'-Series-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'dateutil/US/Pacific'-Series-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'dateutil/US/Pacific'-Series-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'dateutil/US/Pacific'-DataFrame-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'dateutil/US/Pacific'-DataFrame-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'dateutil/US/Pacific'-DataFrame-other2]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'dateutil/US/Pacific'-array-other0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'dateutil/US/Pacific'-array-other1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'dateutil/US/Pacific'-array-other2]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'dateutil/Asia/Singapore'-Index-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'dateutil/Asia/Singapore'-Index-other1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'dateutil/Asia/Singapore'-Index-other2]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'dateutil/Asia/Singapore'-Series-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'dateutil/Asia/Singapore'-Series-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'dateutil/Asia/Singapore'-Series-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'dateutil/Asia/Singapore'-DataFrame-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'dateutil/Asia/Singapore'-DataFrame-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'dateutil/Asia/Singapore'-DataFrame-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'dateutil/Asia/Singapore'-array-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'dateutil/Asia/Singapore'-array-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'dateutil/Asia/Singapore'-array-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'+01:15'-Index-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'+01:15'-Index-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'+01:15'-Index-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'+01:15'-Series-other0]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'+01:15'-Series-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'+01:15'-Series-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'+01:15'-DataFrame-other0]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'+01:15'-DataFrame-other1]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'+01:15'-DataFrame-other2]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'+01:15'-array-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'+01:15'-array-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'+01:15'-array-other2]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'-02:15'-Index-other0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'-02:15'-Index-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'-02:15'-Index-other2]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'-02:15'-Series-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'-02:15'-Series-other1]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'-02:15'-Series-other2]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'-02:15'-DataFrame-other0]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'-02:15'-DataFrame-other1]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'-02:15'-DataFrame-other2]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'-02:15'-array-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'-02:15'-array-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'-02:15'-array-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'UTC+01:15'-Index-other0]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'UTC+01:15'-Index-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'UTC+01:15'-Index-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'UTC+01:15'-Series-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'UTC+01:15'-Series-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'UTC+01:15'-Series-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'UTC+01:15'-DataFrame-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'UTC+01:15'-DataFrame-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'UTC+01:15'-DataFrame-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'UTC+01:15'-array-other0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'UTC+01:15'-array-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'UTC+01:15'-array-other2]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'UTC-02:15'-Index-other0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'UTC-02:15'-Index-other1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'UTC-02:15'-Index-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'UTC-02:15'-Series-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'UTC-02:15'-Series-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'UTC-02:15'-Series-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'UTC-02:15'-DataFrame-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'UTC-02:15'-DataFrame-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'UTC-02:15'-DataFrame-other2]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'UTC-02:15'-array-other0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'UTC-02:15'-array-other1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-'UTC-02:15'-array-other2]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-tzutc()-Index-other0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-tzutc()-Index-other1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-tzutc()-Index-other2]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-tzutc()-Series-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-tzutc()-Series-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-tzutc()-Series-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-tzutc()-DataFrame-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-tzutc()-DataFrame-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-tzutc()-DataFrame-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-tzutc()-array-other0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-tzutc()-array-other1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-tzutc()-array-other2]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-tzlocal()-Index-other0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-tzlocal()-Index-other1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-tzlocal()-Index-other2]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-tzlocal()-Series-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-tzlocal()-Series-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-tzlocal()-Series-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-tzlocal()-DataFrame-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-tzlocal()-DataFrame-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-tzlocal()-DataFrame-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-tzlocal()-array-other0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-tzlocal()-array-other1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-tzlocal()-array-other2]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-pytz.FixedOffset(300)-Index-other0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-pytz.FixedOffset(300)-Index-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-pytz.FixedOffset(300)-Index-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-pytz.FixedOffset(300)-Series-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-pytz.FixedOffset(300)-Series-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-pytz.FixedOffset(300)-Series-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-pytz.FixedOffset(300)-DataFrame-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-pytz.FixedOffset(300)-DataFrame-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-pytz.FixedOffset(300)-DataFrame-other2]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-pytz.FixedOffset(300)-array-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-pytz.FixedOffset(300)-array-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-pytz.FixedOffset(300)-array-other2]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-&lt;UTC&gt;-Index-other0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-&lt;UTC&gt;-Index-other1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-&lt;UTC&gt;-Index-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-&lt;UTC&gt;-Series-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-&lt;UTC&gt;-Series-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-&lt;UTC&gt;-Series-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-&lt;UTC&gt;-DataFrame-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-&lt;UTC&gt;-DataFrame-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-&lt;UTC&gt;-DataFrame-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-&lt;UTC&gt;-array-other0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-&lt;UTC&gt;-array-other1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-&lt;UTC&gt;-array-other2]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-pytz.FixedOffset(-300)-Index-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-pytz.FixedOffset(-300)-Index-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-pytz.FixedOffset(-300)-Index-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-pytz.FixedOffset(-300)-Series-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-pytz.FixedOffset(-300)-Series-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-pytz.FixedOffset(-300)-Series-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-pytz.FixedOffset(-300)-DataFrame-other0]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-pytz.FixedOffset(-300)-DataFrame-other1]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-pytz.FixedOffset(-300)-DataFrame-other2]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-pytz.FixedOffset(-300)-array-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-pytz.FixedOffset(-300)-array-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-pytz.FixedOffset(-300)-array-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-datetime.timezone.utc-Index-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-datetime.timezone.utc-Index-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-datetime.timezone.utc-Index-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-datetime.timezone.utc-Series-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-datetime.timezone.utc-Series-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-datetime.timezone.utc-Series-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-datetime.timezone.utc-DataFrame-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-datetime.timezone.utc-DataFrame-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-datetime.timezone.utc-DataFrame-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-datetime.timezone.utc-array-other0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-datetime.timezone.utc-array-other1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-datetime.timezone.utc-array-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-datetime.timezone(datetime.timedelta(seconds=3600))-Index-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-datetime.timezone(datetime.timedelta(seconds=3600))-Index-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-datetime.timezone(datetime.timedelta(seconds=3600))-Index-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-datetime.timezone(datetime.timedelta(seconds=3600))-Series-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-datetime.timezone(datetime.timedelta(seconds=3600))-Series-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-datetime.timezone(datetime.timedelta(seconds=3600))-Series-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-datetime.timezone(datetime.timedelta(seconds=3600))-DataFrame-other0]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-datetime.timezone(datetime.timedelta(seconds=3600))-DataFrame-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-datetime.timezone(datetime.timedelta(seconds=3600))-DataFrame-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-datetime.timezone(datetime.timedelta(seconds=3600))-array-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-datetime.timezone(datetime.timedelta(seconds=3600))-array-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-datetime.timezone(datetime.timedelta(seconds=3600))-array-other2]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Index-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Index-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Index-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Series-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Series-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Series-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-DataFrame-other0]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-DataFrame-other1]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-DataFrame-other2]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-array-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-array-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-array-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-zoneinfo.ZoneInfo(key='US/Pacific')-Index-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-zoneinfo.ZoneInfo(key='US/Pacific')-Index-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-zoneinfo.ZoneInfo(key='US/Pacific')-Index-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-zoneinfo.ZoneInfo(key='US/Pacific')-Series-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-zoneinfo.ZoneInfo(key='US/Pacific')-Series-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-zoneinfo.ZoneInfo(key='US/Pacific')-Series-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-zoneinfo.ZoneInfo(key='US/Pacific')-DataFrame-other0]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-zoneinfo.ZoneInfo(key='US/Pacific')-DataFrame-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-zoneinfo.ZoneInfo(key='US/Pacific')-DataFrame-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-zoneinfo.ZoneInfo(key='US/Pacific')-array-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-zoneinfo.ZoneInfo(key='US/Pacific')-array-other1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-zoneinfo.ZoneInfo(key='US/Pacific')-array-other2]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-zoneinfo.ZoneInfo(key='UTC')-Index-other0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-zoneinfo.ZoneInfo(key='UTC')-Index-other1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-zoneinfo.ZoneInfo(key='UTC')-Index-other2]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-zoneinfo.ZoneInfo(key='UTC')-Series-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-zoneinfo.ZoneInfo(key='UTC')-Series-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-zoneinfo.ZoneInfo(key='UTC')-Series-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-zoneinfo.ZoneInfo(key='UTC')-DataFrame-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-zoneinfo.ZoneInfo(key='UTC')-DataFrame-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-zoneinfo.ZoneInfo(key='UTC')-DataFrame-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-zoneinfo.ZoneInfo(key='UTC')-array-other0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-zoneinfo.ZoneInfo(key='UTC')-array-other1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[eq-zoneinfo.ZoneInfo(key='UTC')-array-other2]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'UTC'-Index-other0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'UTC'-Index-other1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'UTC'-Index-other2]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'UTC'-Series-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'UTC'-Series-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'UTC'-Series-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'UTC'-DataFrame-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'UTC'-DataFrame-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'UTC'-DataFrame-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'UTC'-array-other0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'UTC'-array-other1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'UTC'-array-other2]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'US/Eastern'-Index-other0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'US/Eastern'-Index-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'US/Eastern'-Index-other2]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'US/Eastern'-Series-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'US/Eastern'-Series-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'US/Eastern'-Series-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'US/Eastern'-DataFrame-other0]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'US/Eastern'-DataFrame-other1]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'US/Eastern'-DataFrame-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'US/Eastern'-array-other0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'US/Eastern'-array-other1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'US/Eastern'-array-other2]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'Asia/Tokyo'-Index-other0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'Asia/Tokyo'-Index-other1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'Asia/Tokyo'-Index-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'Asia/Tokyo'-Series-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'Asia/Tokyo'-Series-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'Asia/Tokyo'-Series-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'Asia/Tokyo'-DataFrame-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'Asia/Tokyo'-DataFrame-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'Asia/Tokyo'-DataFrame-other2]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'Asia/Tokyo'-array-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'Asia/Tokyo'-array-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'Asia/Tokyo'-array-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'dateutil/US/Pacific'-Index-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'dateutil/US/Pacific'-Index-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'dateutil/US/Pacific'-Index-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'dateutil/US/Pacific'-Series-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'dateutil/US/Pacific'-Series-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'dateutil/US/Pacific'-Series-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'dateutil/US/Pacific'-DataFrame-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'dateutil/US/Pacific'-DataFrame-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'dateutil/US/Pacific'-DataFrame-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'dateutil/US/Pacific'-array-other0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'dateutil/US/Pacific'-array-other1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'dateutil/US/Pacific'-array-other2]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'dateutil/Asia/Singapore'-Index-other0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'dateutil/Asia/Singapore'-Index-other1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'dateutil/Asia/Singapore'-Index-other2]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'dateutil/Asia/Singapore'-Series-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'dateutil/Asia/Singapore'-Series-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'dateutil/Asia/Singapore'-Series-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'dateutil/Asia/Singapore'-DataFrame-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'dateutil/Asia/Singapore'-DataFrame-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'dateutil/Asia/Singapore'-DataFrame-other2]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'dateutil/Asia/Singapore'-array-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'dateutil/Asia/Singapore'-array-other1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'dateutil/Asia/Singapore'-array-other2]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'+01:15'-Index-other0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'+01:15'-Index-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'+01:15'-Index-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'+01:15'-Series-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'+01:15'-Series-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'+01:15'-Series-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'+01:15'-DataFrame-other0]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'+01:15'-DataFrame-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'+01:15'-DataFrame-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'+01:15'-array-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'+01:15'-array-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'+01:15'-array-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'-02:15'-Index-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'-02:15'-Index-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'-02:15'-Index-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'-02:15'-Series-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'-02:15'-Series-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'-02:15'-Series-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'-02:15'-DataFrame-other0]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'-02:15'-DataFrame-other1]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'-02:15'-DataFrame-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'-02:15'-array-other0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'-02:15'-array-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'-02:15'-array-other2]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'UTC+01:15'-Index-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'UTC+01:15'-Index-other1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'UTC+01:15'-Index-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'UTC+01:15'-Series-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'UTC+01:15'-Series-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'UTC+01:15'-Series-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'UTC+01:15'-DataFrame-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'UTC+01:15'-DataFrame-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'UTC+01:15'-DataFrame-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'UTC+01:15'-array-other0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'UTC+01:15'-array-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'UTC+01:15'-array-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'UTC-02:15'-Index-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'UTC-02:15'-Index-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'UTC-02:15'-Index-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'UTC-02:15'-Series-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'UTC-02:15'-Series-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'UTC-02:15'-Series-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'UTC-02:15'-DataFrame-other0]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'UTC-02:15'-DataFrame-other1]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'UTC-02:15'-DataFrame-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'UTC-02:15'-array-other0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'UTC-02:15'-array-other1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-'UTC-02:15'-array-other2]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-tzutc()-Index-other0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-tzutc()-Index-other1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-tzutc()-Index-other2]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-tzutc()-Series-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-tzutc()-Series-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-tzutc()-Series-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-tzutc()-DataFrame-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-tzutc()-DataFrame-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-tzutc()-DataFrame-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-tzutc()-array-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-tzutc()-array-other1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-tzutc()-array-other2]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-tzlocal()-Index-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-tzlocal()-Index-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-tzlocal()-Index-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-tzlocal()-Series-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-tzlocal()-Series-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-tzlocal()-Series-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-tzlocal()-DataFrame-other0]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-tzlocal()-DataFrame-other1]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-tzlocal()-DataFrame-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-tzlocal()-array-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-tzlocal()-array-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-tzlocal()-array-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-pytz.FixedOffset(300)-Index-other0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-pytz.FixedOffset(300)-Index-other1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-pytz.FixedOffset(300)-Index-other2]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-pytz.FixedOffset(300)-Series-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-pytz.FixedOffset(300)-Series-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-pytz.FixedOffset(300)-Series-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-pytz.FixedOffset(300)-DataFrame-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-pytz.FixedOffset(300)-DataFrame-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-pytz.FixedOffset(300)-DataFrame-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-pytz.FixedOffset(300)-array-other0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-pytz.FixedOffset(300)-array-other1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-pytz.FixedOffset(300)-array-other2]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-&lt;UTC&gt;-Index-other0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-&lt;UTC&gt;-Index-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-&lt;UTC&gt;-Index-other2]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-&lt;UTC&gt;-Series-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-&lt;UTC&gt;-Series-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-&lt;UTC&gt;-Series-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-&lt;UTC&gt;-DataFrame-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-&lt;UTC&gt;-DataFrame-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-&lt;UTC&gt;-DataFrame-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-&lt;UTC&gt;-array-other0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-&lt;UTC&gt;-array-other1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-&lt;UTC&gt;-array-other2]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-pytz.FixedOffset(-300)-Index-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-pytz.FixedOffset(-300)-Index-other1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-pytz.FixedOffset(-300)-Index-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-pytz.FixedOffset(-300)-Series-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-pytz.FixedOffset(-300)-Series-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-pytz.FixedOffset(-300)-Series-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-pytz.FixedOffset(-300)-DataFrame-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-pytz.FixedOffset(-300)-DataFrame-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-pytz.FixedOffset(-300)-DataFrame-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-pytz.FixedOffset(-300)-array-other0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-pytz.FixedOffset(-300)-array-other1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-pytz.FixedOffset(-300)-array-other2]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-datetime.timezone.utc-Index-other0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-datetime.timezone.utc-Index-other1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-datetime.timezone.utc-Index-other2]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-datetime.timezone.utc-Series-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-datetime.timezone.utc-Series-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-datetime.timezone.utc-Series-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-datetime.timezone.utc-DataFrame-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-datetime.timezone.utc-DataFrame-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-datetime.timezone.utc-DataFrame-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-datetime.timezone.utc-array-other0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-datetime.timezone.utc-array-other1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-datetime.timezone.utc-array-other2]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-datetime.timezone(datetime.timedelta(seconds=3600))-Index-other0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-datetime.timezone(datetime.timedelta(seconds=3600))-Index-other1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-datetime.timezone(datetime.timedelta(seconds=3600))-Index-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-datetime.timezone(datetime.timedelta(seconds=3600))-Series-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-datetime.timezone(datetime.timedelta(seconds=3600))-Series-other1]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-datetime.timezone(datetime.timedelta(seconds=3600))-Series-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-datetime.timezone(datetime.timedelta(seconds=3600))-DataFrame-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-datetime.timezone(datetime.timedelta(seconds=3600))-DataFrame-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-datetime.timezone(datetime.timedelta(seconds=3600))-DataFrame-other2]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-datetime.timezone(datetime.timedelta(seconds=3600))-array-other0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-datetime.timezone(datetime.timedelta(seconds=3600))-array-other1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-datetime.timezone(datetime.timedelta(seconds=3600))-array-other2]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Index-other0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Index-other1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Index-other2]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Series-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Series-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Series-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-DataFrame-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-DataFrame-other1]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-DataFrame-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-array-other0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-array-other1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-array-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-zoneinfo.ZoneInfo(key='US/Pacific')-Index-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-zoneinfo.ZoneInfo(key='US/Pacific')-Index-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-zoneinfo.ZoneInfo(key='US/Pacific')-Index-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-zoneinfo.ZoneInfo(key='US/Pacific')-Series-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-zoneinfo.ZoneInfo(key='US/Pacific')-Series-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-zoneinfo.ZoneInfo(key='US/Pacific')-Series-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-zoneinfo.ZoneInfo(key='US/Pacific')-DataFrame-other0]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-zoneinfo.ZoneInfo(key='US/Pacific')-DataFrame-other1]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-zoneinfo.ZoneInfo(key='US/Pacific')-DataFrame-other2]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-zoneinfo.ZoneInfo(key='US/Pacific')-array-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-zoneinfo.ZoneInfo(key='US/Pacific')-array-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-zoneinfo.ZoneInfo(key='US/Pacific')-array-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-zoneinfo.ZoneInfo(key='UTC')-Index-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-zoneinfo.ZoneInfo(key='UTC')-Index-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-zoneinfo.ZoneInfo(key='UTC')-Index-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-zoneinfo.ZoneInfo(key='UTC')-Series-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-zoneinfo.ZoneInfo(key='UTC')-Series-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-zoneinfo.ZoneInfo(key='UTC')-Series-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-zoneinfo.ZoneInfo(key='UTC')-DataFrame-other0]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-zoneinfo.ZoneInfo(key='UTC')-DataFrame-other1]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-zoneinfo.ZoneInfo(key='UTC')-DataFrame-other2]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-zoneinfo.ZoneInfo(key='UTC')-array-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-zoneinfo.ZoneInfo(key='UTC')-array-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ne-zoneinfo.ZoneInfo(key='UTC')-array-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'UTC'-Index-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'UTC'-Index-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'UTC'-Index-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'UTC'-Series-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'UTC'-Series-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'UTC'-Series-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'UTC'-DataFrame-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'UTC'-DataFrame-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'UTC'-DataFrame-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'UTC'-array-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'UTC'-array-other1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'UTC'-array-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'US/Eastern'-Index-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'US/Eastern'-Index-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'US/Eastern'-Index-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'US/Eastern'-Series-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'US/Eastern'-Series-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'US/Eastern'-Series-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'US/Eastern'-DataFrame-other0]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'US/Eastern'-DataFrame-other1]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'US/Eastern'-DataFrame-other2]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'US/Eastern'-array-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'US/Eastern'-array-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'US/Eastern'-array-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'Asia/Tokyo'-Index-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'Asia/Tokyo'-Index-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'Asia/Tokyo'-Index-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'Asia/Tokyo'-Series-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'Asia/Tokyo'-Series-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'Asia/Tokyo'-Series-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'Asia/Tokyo'-DataFrame-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'Asia/Tokyo'-DataFrame-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'Asia/Tokyo'-DataFrame-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'Asia/Tokyo'-array-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'Asia/Tokyo'-array-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'Asia/Tokyo'-array-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'dateutil/US/Pacific'-Index-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'dateutil/US/Pacific'-Index-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'dateutil/US/Pacific'-Index-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'dateutil/US/Pacific'-Series-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'dateutil/US/Pacific'-Series-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'dateutil/US/Pacific'-Series-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'dateutil/US/Pacific'-DataFrame-other0]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'dateutil/US/Pacific'-DataFrame-other1]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'dateutil/US/Pacific'-DataFrame-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'dateutil/US/Pacific'-array-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'dateutil/US/Pacific'-array-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'dateutil/US/Pacific'-array-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'dateutil/Asia/Singapore'-Index-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'dateutil/Asia/Singapore'-Index-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'dateutil/Asia/Singapore'-Index-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'dateutil/Asia/Singapore'-Series-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'dateutil/Asia/Singapore'-Series-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'dateutil/Asia/Singapore'-Series-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'dateutil/Asia/Singapore'-DataFrame-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'dateutil/Asia/Singapore'-DataFrame-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'dateutil/Asia/Singapore'-DataFrame-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'dateutil/Asia/Singapore'-array-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'dateutil/Asia/Singapore'-array-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'dateutil/Asia/Singapore'-array-other2]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'+01:15'-Index-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'+01:15'-Index-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'+01:15'-Index-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'+01:15'-Series-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'+01:15'-Series-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'+01:15'-Series-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'+01:15'-DataFrame-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'+01:15'-DataFrame-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'+01:15'-DataFrame-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'+01:15'-array-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'+01:15'-array-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'+01:15'-array-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'-02:15'-Index-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'-02:15'-Index-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'-02:15'-Index-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'-02:15'-Series-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'-02:15'-Series-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'-02:15'-Series-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'-02:15'-DataFrame-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'-02:15'-DataFrame-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'-02:15'-DataFrame-other2]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'-02:15'-array-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'-02:15'-array-other1]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'-02:15'-array-other2]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'UTC+01:15'-Index-other0]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'UTC+01:15'-Index-other1]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'UTC+01:15'-Index-other2]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'UTC+01:15'-Series-other0]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'UTC+01:15'-Series-other1]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'UTC+01:15'-Series-other2]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'UTC+01:15'-DataFrame-other0]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'UTC+01:15'-DataFrame-other1]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'UTC+01:15'-DataFrame-other2]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'UTC+01:15'-array-other0]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'UTC+01:15'-array-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'UTC+01:15'-array-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'UTC-02:15'-Index-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'UTC-02:15'-Index-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'UTC-02:15'-Index-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'UTC-02:15'-Series-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'UTC-02:15'-Series-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'UTC-02:15'-Series-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'UTC-02:15'-DataFrame-other0]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'UTC-02:15'-DataFrame-other1]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'UTC-02:15'-DataFrame-other2]" time="0.018" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'UTC-02:15'-array-other0]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'UTC-02:15'-array-other1]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-'UTC-02:15'-array-other2]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-tzutc()-Index-other0]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-tzutc()-Index-other1]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-tzutc()-Index-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-tzutc()-Series-other0]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-tzutc()-Series-other1]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-tzutc()-Series-other2]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-tzutc()-DataFrame-other0]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-tzutc()-DataFrame-other1]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-tzutc()-DataFrame-other2]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-tzutc()-array-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-tzutc()-array-other1]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-tzutc()-array-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-tzlocal()-Index-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-tzlocal()-Index-other1]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-tzlocal()-Index-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-tzlocal()-Series-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-tzlocal()-Series-other1]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-tzlocal()-Series-other2]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-tzlocal()-DataFrame-other0]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-tzlocal()-DataFrame-other1]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-tzlocal()-DataFrame-other2]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-tzlocal()-array-other0]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-tzlocal()-array-other1]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-tzlocal()-array-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-pytz.FixedOffset(300)-Index-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-pytz.FixedOffset(300)-Index-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-pytz.FixedOffset(300)-Index-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-pytz.FixedOffset(300)-Series-other0]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-pytz.FixedOffset(300)-Series-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-pytz.FixedOffset(300)-Series-other2]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-pytz.FixedOffset(300)-DataFrame-other0]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-pytz.FixedOffset(300)-DataFrame-other1]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-pytz.FixedOffset(300)-DataFrame-other2]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-pytz.FixedOffset(300)-array-other0]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-pytz.FixedOffset(300)-array-other1]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-pytz.FixedOffset(300)-array-other2]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-&lt;UTC&gt;-Index-other0]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-&lt;UTC&gt;-Index-other1]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-&lt;UTC&gt;-Index-other2]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-&lt;UTC&gt;-Series-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-&lt;UTC&gt;-Series-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-&lt;UTC&gt;-Series-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-&lt;UTC&gt;-DataFrame-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-&lt;UTC&gt;-DataFrame-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-&lt;UTC&gt;-DataFrame-other2]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-&lt;UTC&gt;-array-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-&lt;UTC&gt;-array-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-&lt;UTC&gt;-array-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-pytz.FixedOffset(-300)-Index-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-pytz.FixedOffset(-300)-Index-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-pytz.FixedOffset(-300)-Index-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-pytz.FixedOffset(-300)-Series-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-pytz.FixedOffset(-300)-Series-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-pytz.FixedOffset(-300)-Series-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-pytz.FixedOffset(-300)-DataFrame-other0]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-pytz.FixedOffset(-300)-DataFrame-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-pytz.FixedOffset(-300)-DataFrame-other2]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-pytz.FixedOffset(-300)-array-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-pytz.FixedOffset(-300)-array-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-pytz.FixedOffset(-300)-array-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-datetime.timezone.utc-Index-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-datetime.timezone.utc-Index-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-datetime.timezone.utc-Index-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-datetime.timezone.utc-Series-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-datetime.timezone.utc-Series-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-datetime.timezone.utc-Series-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-datetime.timezone.utc-DataFrame-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-datetime.timezone.utc-DataFrame-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-datetime.timezone.utc-DataFrame-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-datetime.timezone.utc-array-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-datetime.timezone.utc-array-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-datetime.timezone.utc-array-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-datetime.timezone(datetime.timedelta(seconds=3600))-Index-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-datetime.timezone(datetime.timedelta(seconds=3600))-Index-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-datetime.timezone(datetime.timedelta(seconds=3600))-Index-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-datetime.timezone(datetime.timedelta(seconds=3600))-Series-other0]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-datetime.timezone(datetime.timedelta(seconds=3600))-Series-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-datetime.timezone(datetime.timedelta(seconds=3600))-Series-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-datetime.timezone(datetime.timedelta(seconds=3600))-DataFrame-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-datetime.timezone(datetime.timedelta(seconds=3600))-DataFrame-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-datetime.timezone(datetime.timedelta(seconds=3600))-DataFrame-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-datetime.timezone(datetime.timedelta(seconds=3600))-array-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-datetime.timezone(datetime.timedelta(seconds=3600))-array-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-datetime.timezone(datetime.timedelta(seconds=3600))-array-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Index-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Index-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Index-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Series-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Series-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Series-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-DataFrame-other0]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-DataFrame-other1]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-DataFrame-other2]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-array-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-array-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-array-other2]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-zoneinfo.ZoneInfo(key='US/Pacific')-Index-other0]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-zoneinfo.ZoneInfo(key='US/Pacific')-Index-other1]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-zoneinfo.ZoneInfo(key='US/Pacific')-Index-other2]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-zoneinfo.ZoneInfo(key='US/Pacific')-Series-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-zoneinfo.ZoneInfo(key='US/Pacific')-Series-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-zoneinfo.ZoneInfo(key='US/Pacific')-Series-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-zoneinfo.ZoneInfo(key='US/Pacific')-DataFrame-other0]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-zoneinfo.ZoneInfo(key='US/Pacific')-DataFrame-other1]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-zoneinfo.ZoneInfo(key='US/Pacific')-DataFrame-other2]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-zoneinfo.ZoneInfo(key='US/Pacific')-array-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-zoneinfo.ZoneInfo(key='US/Pacific')-array-other1]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-zoneinfo.ZoneInfo(key='US/Pacific')-array-other2]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-zoneinfo.ZoneInfo(key='UTC')-Index-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-zoneinfo.ZoneInfo(key='UTC')-Index-other1]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-zoneinfo.ZoneInfo(key='UTC')-Index-other2]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-zoneinfo.ZoneInfo(key='UTC')-Series-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-zoneinfo.ZoneInfo(key='UTC')-Series-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-zoneinfo.ZoneInfo(key='UTC')-Series-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-zoneinfo.ZoneInfo(key='UTC')-DataFrame-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-zoneinfo.ZoneInfo(key='UTC')-DataFrame-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-zoneinfo.ZoneInfo(key='UTC')-DataFrame-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-zoneinfo.ZoneInfo(key='UTC')-array-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-zoneinfo.ZoneInfo(key='UTC')-array-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[gt-zoneinfo.ZoneInfo(key='UTC')-array-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'UTC'-Index-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'UTC'-Index-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'UTC'-Index-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'UTC'-Series-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'UTC'-Series-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'UTC'-Series-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'UTC'-DataFrame-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'UTC'-DataFrame-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'UTC'-DataFrame-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'UTC'-array-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'UTC'-array-other1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'UTC'-array-other2]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'US/Eastern'-Index-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'US/Eastern'-Index-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'US/Eastern'-Index-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'US/Eastern'-Series-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'US/Eastern'-Series-other1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'US/Eastern'-Series-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'US/Eastern'-DataFrame-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'US/Eastern'-DataFrame-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'US/Eastern'-DataFrame-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'US/Eastern'-array-other0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'US/Eastern'-array-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'US/Eastern'-array-other2]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'Asia/Tokyo'-Index-other0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'Asia/Tokyo'-Index-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'Asia/Tokyo'-Index-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'Asia/Tokyo'-Series-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'Asia/Tokyo'-Series-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'Asia/Tokyo'-Series-other2]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'Asia/Tokyo'-DataFrame-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'Asia/Tokyo'-DataFrame-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'Asia/Tokyo'-DataFrame-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'Asia/Tokyo'-array-other0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'Asia/Tokyo'-array-other1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'Asia/Tokyo'-array-other2]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'dateutil/US/Pacific'-Index-other0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'dateutil/US/Pacific'-Index-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'dateutil/US/Pacific'-Index-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'dateutil/US/Pacific'-Series-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'dateutil/US/Pacific'-Series-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'dateutil/US/Pacific'-Series-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'dateutil/US/Pacific'-DataFrame-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'dateutil/US/Pacific'-DataFrame-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'dateutil/US/Pacific'-DataFrame-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'dateutil/US/Pacific'-array-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'dateutil/US/Pacific'-array-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'dateutil/US/Pacific'-array-other2]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'dateutil/Asia/Singapore'-Index-other0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'dateutil/Asia/Singapore'-Index-other1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'dateutil/Asia/Singapore'-Index-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'dateutil/Asia/Singapore'-Series-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'dateutil/Asia/Singapore'-Series-other1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'dateutil/Asia/Singapore'-Series-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'dateutil/Asia/Singapore'-DataFrame-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'dateutil/Asia/Singapore'-DataFrame-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'dateutil/Asia/Singapore'-DataFrame-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'dateutil/Asia/Singapore'-array-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'dateutil/Asia/Singapore'-array-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'dateutil/Asia/Singapore'-array-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'+01:15'-Index-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'+01:15'-Index-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'+01:15'-Index-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'+01:15'-Series-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'+01:15'-Series-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'+01:15'-Series-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'+01:15'-DataFrame-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'+01:15'-DataFrame-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'+01:15'-DataFrame-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'+01:15'-array-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'+01:15'-array-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'+01:15'-array-other2]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'-02:15'-Index-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'-02:15'-Index-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'-02:15'-Index-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'-02:15'-Series-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'-02:15'-Series-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'-02:15'-Series-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'-02:15'-DataFrame-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'-02:15'-DataFrame-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'-02:15'-DataFrame-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'-02:15'-array-other0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'-02:15'-array-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'-02:15'-array-other2]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'UTC+01:15'-Index-other0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'UTC+01:15'-Index-other1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'UTC+01:15'-Index-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'UTC+01:15'-Series-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'UTC+01:15'-Series-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'UTC+01:15'-Series-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'UTC+01:15'-DataFrame-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'UTC+01:15'-DataFrame-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'UTC+01:15'-DataFrame-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'UTC+01:15'-array-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'UTC+01:15'-array-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'UTC+01:15'-array-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'UTC-02:15'-Index-other0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'UTC-02:15'-Index-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'UTC-02:15'-Index-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'UTC-02:15'-Series-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'UTC-02:15'-Series-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'UTC-02:15'-Series-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'UTC-02:15'-DataFrame-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'UTC-02:15'-DataFrame-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'UTC-02:15'-DataFrame-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'UTC-02:15'-array-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'UTC-02:15'-array-other1]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-'UTC-02:15'-array-other2]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-tzutc()-Index-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-tzutc()-Index-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-tzutc()-Index-other2]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-tzutc()-Series-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-tzutc()-Series-other1]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-tzutc()-Series-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-tzutc()-DataFrame-other0]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-tzutc()-DataFrame-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-tzutc()-DataFrame-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-tzutc()-array-other0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-tzutc()-array-other1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-tzutc()-array-other2]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-tzlocal()-Index-other0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-tzlocal()-Index-other1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-tzlocal()-Index-other2]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-tzlocal()-Series-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-tzlocal()-Series-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-tzlocal()-Series-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-tzlocal()-DataFrame-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-tzlocal()-DataFrame-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-tzlocal()-DataFrame-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-tzlocal()-array-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-tzlocal()-array-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-tzlocal()-array-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-pytz.FixedOffset(300)-Index-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-pytz.FixedOffset(300)-Index-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-pytz.FixedOffset(300)-Index-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-pytz.FixedOffset(300)-Series-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-pytz.FixedOffset(300)-Series-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-pytz.FixedOffset(300)-Series-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-pytz.FixedOffset(300)-DataFrame-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-pytz.FixedOffset(300)-DataFrame-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-pytz.FixedOffset(300)-DataFrame-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-pytz.FixedOffset(300)-array-other0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-pytz.FixedOffset(300)-array-other1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-pytz.FixedOffset(300)-array-other2]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-&lt;UTC&gt;-Index-other0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-&lt;UTC&gt;-Index-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-&lt;UTC&gt;-Index-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-&lt;UTC&gt;-Series-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-&lt;UTC&gt;-Series-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-&lt;UTC&gt;-Series-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-&lt;UTC&gt;-DataFrame-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-&lt;UTC&gt;-DataFrame-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-&lt;UTC&gt;-DataFrame-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-&lt;UTC&gt;-array-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-&lt;UTC&gt;-array-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-&lt;UTC&gt;-array-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-pytz.FixedOffset(-300)-Index-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-pytz.FixedOffset(-300)-Index-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-pytz.FixedOffset(-300)-Index-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-pytz.FixedOffset(-300)-Series-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-pytz.FixedOffset(-300)-Series-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-pytz.FixedOffset(-300)-Series-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-pytz.FixedOffset(-300)-DataFrame-other0]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-pytz.FixedOffset(-300)-DataFrame-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-pytz.FixedOffset(-300)-DataFrame-other2]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-pytz.FixedOffset(-300)-array-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-pytz.FixedOffset(-300)-array-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-pytz.FixedOffset(-300)-array-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-datetime.timezone.utc-Index-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-datetime.timezone.utc-Index-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-datetime.timezone.utc-Index-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-datetime.timezone.utc-Series-other0]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-datetime.timezone.utc-Series-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-datetime.timezone.utc-Series-other2]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-datetime.timezone.utc-DataFrame-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-datetime.timezone.utc-DataFrame-other1]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-datetime.timezone.utc-DataFrame-other2]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-datetime.timezone.utc-array-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-datetime.timezone.utc-array-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-datetime.timezone.utc-array-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-datetime.timezone(datetime.timedelta(seconds=3600))-Index-other0]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-datetime.timezone(datetime.timedelta(seconds=3600))-Index-other1]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-datetime.timezone(datetime.timedelta(seconds=3600))-Index-other2]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-datetime.timezone(datetime.timedelta(seconds=3600))-Series-other0]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-datetime.timezone(datetime.timedelta(seconds=3600))-Series-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-datetime.timezone(datetime.timedelta(seconds=3600))-Series-other2]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-datetime.timezone(datetime.timedelta(seconds=3600))-DataFrame-other0]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-datetime.timezone(datetime.timedelta(seconds=3600))-DataFrame-other1]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-datetime.timezone(datetime.timedelta(seconds=3600))-DataFrame-other2]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-datetime.timezone(datetime.timedelta(seconds=3600))-array-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-datetime.timezone(datetime.timedelta(seconds=3600))-array-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-datetime.timezone(datetime.timedelta(seconds=3600))-array-other2]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Index-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Index-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Index-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Series-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Series-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Series-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-DataFrame-other0]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-DataFrame-other1]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-DataFrame-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-array-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-array-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-array-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-zoneinfo.ZoneInfo(key='US/Pacific')-Index-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-zoneinfo.ZoneInfo(key='US/Pacific')-Index-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-zoneinfo.ZoneInfo(key='US/Pacific')-Index-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-zoneinfo.ZoneInfo(key='US/Pacific')-Series-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-zoneinfo.ZoneInfo(key='US/Pacific')-Series-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-zoneinfo.ZoneInfo(key='US/Pacific')-Series-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-zoneinfo.ZoneInfo(key='US/Pacific')-DataFrame-other0]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-zoneinfo.ZoneInfo(key='US/Pacific')-DataFrame-other1]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-zoneinfo.ZoneInfo(key='US/Pacific')-DataFrame-other2]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-zoneinfo.ZoneInfo(key='US/Pacific')-array-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-zoneinfo.ZoneInfo(key='US/Pacific')-array-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-zoneinfo.ZoneInfo(key='US/Pacific')-array-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-zoneinfo.ZoneInfo(key='UTC')-Index-other0]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-zoneinfo.ZoneInfo(key='UTC')-Index-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-zoneinfo.ZoneInfo(key='UTC')-Index-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-zoneinfo.ZoneInfo(key='UTC')-Series-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-zoneinfo.ZoneInfo(key='UTC')-Series-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-zoneinfo.ZoneInfo(key='UTC')-Series-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-zoneinfo.ZoneInfo(key='UTC')-DataFrame-other0]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-zoneinfo.ZoneInfo(key='UTC')-DataFrame-other1]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-zoneinfo.ZoneInfo(key='UTC')-DataFrame-other2]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-zoneinfo.ZoneInfo(key='UTC')-array-other0]" time="0.021" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-zoneinfo.ZoneInfo(key='UTC')-array-other1]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[ge-zoneinfo.ZoneInfo(key='UTC')-array-other2]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'UTC'-Index-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'UTC'-Index-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'UTC'-Index-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'UTC'-Series-other0]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'UTC'-Series-other1]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'UTC'-Series-other2]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'UTC'-DataFrame-other0]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'UTC'-DataFrame-other1]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'UTC'-DataFrame-other2]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'UTC'-array-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'UTC'-array-other1]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'UTC'-array-other2]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'US/Eastern'-Index-other0]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'US/Eastern'-Index-other1]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'US/Eastern'-Index-other2]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'US/Eastern'-Series-other0]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'US/Eastern'-Series-other1]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'US/Eastern'-Series-other2]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'US/Eastern'-DataFrame-other0]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'US/Eastern'-DataFrame-other1]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'US/Eastern'-DataFrame-other2]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'US/Eastern'-array-other0]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'US/Eastern'-array-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'US/Eastern'-array-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'Asia/Tokyo'-Index-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'Asia/Tokyo'-Index-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'Asia/Tokyo'-Index-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'Asia/Tokyo'-Series-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'Asia/Tokyo'-Series-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'Asia/Tokyo'-Series-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'Asia/Tokyo'-DataFrame-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'Asia/Tokyo'-DataFrame-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'Asia/Tokyo'-DataFrame-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'Asia/Tokyo'-array-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'Asia/Tokyo'-array-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'Asia/Tokyo'-array-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'dateutil/US/Pacific'-Index-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'dateutil/US/Pacific'-Index-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'dateutil/US/Pacific'-Index-other2]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'dateutil/US/Pacific'-Series-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'dateutil/US/Pacific'-Series-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'dateutil/US/Pacific'-Series-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'dateutil/US/Pacific'-DataFrame-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'dateutil/US/Pacific'-DataFrame-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'dateutil/US/Pacific'-DataFrame-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'dateutil/US/Pacific'-array-other0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'dateutil/US/Pacific'-array-other1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'dateutil/US/Pacific'-array-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'dateutil/Asia/Singapore'-Index-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'dateutil/Asia/Singapore'-Index-other1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'dateutil/Asia/Singapore'-Index-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'dateutil/Asia/Singapore'-Series-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'dateutil/Asia/Singapore'-Series-other1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'dateutil/Asia/Singapore'-Series-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'dateutil/Asia/Singapore'-DataFrame-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'dateutil/Asia/Singapore'-DataFrame-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'dateutil/Asia/Singapore'-DataFrame-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'dateutil/Asia/Singapore'-array-other0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'dateutil/Asia/Singapore'-array-other1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'dateutil/Asia/Singapore'-array-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'+01:15'-Index-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'+01:15'-Index-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'+01:15'-Index-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'+01:15'-Series-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'+01:15'-Series-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'+01:15'-Series-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'+01:15'-DataFrame-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'+01:15'-DataFrame-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'+01:15'-DataFrame-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'+01:15'-array-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'+01:15'-array-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'+01:15'-array-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'-02:15'-Index-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'-02:15'-Index-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'-02:15'-Index-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'-02:15'-Series-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'-02:15'-Series-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'-02:15'-Series-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'-02:15'-DataFrame-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'-02:15'-DataFrame-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'-02:15'-DataFrame-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'-02:15'-array-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'-02:15'-array-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'-02:15'-array-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'UTC+01:15'-Index-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'UTC+01:15'-Index-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'UTC+01:15'-Index-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'UTC+01:15'-Series-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'UTC+01:15'-Series-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'UTC+01:15'-Series-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'UTC+01:15'-DataFrame-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'UTC+01:15'-DataFrame-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'UTC+01:15'-DataFrame-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'UTC+01:15'-array-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'UTC+01:15'-array-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'UTC+01:15'-array-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'UTC-02:15'-Index-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'UTC-02:15'-Index-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'UTC-02:15'-Index-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'UTC-02:15'-Series-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'UTC-02:15'-Series-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'UTC-02:15'-Series-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'UTC-02:15'-DataFrame-other0]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'UTC-02:15'-DataFrame-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'UTC-02:15'-DataFrame-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'UTC-02:15'-array-other0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'UTC-02:15'-array-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-'UTC-02:15'-array-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-tzutc()-Index-other0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-tzutc()-Index-other1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-tzutc()-Index-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-tzutc()-Series-other0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-tzutc()-Series-other1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-tzutc()-Series-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-tzutc()-DataFrame-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-tzutc()-DataFrame-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-tzutc()-DataFrame-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-tzutc()-array-other0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-tzutc()-array-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-tzutc()-array-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-tzlocal()-Index-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-tzlocal()-Index-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-tzlocal()-Index-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-tzlocal()-Series-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-tzlocal()-Series-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-tzlocal()-Series-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-tzlocal()-DataFrame-other0]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-tzlocal()-DataFrame-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-tzlocal()-DataFrame-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-tzlocal()-array-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-tzlocal()-array-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-tzlocal()-array-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-pytz.FixedOffset(300)-Index-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-pytz.FixedOffset(300)-Index-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-pytz.FixedOffset(300)-Index-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-pytz.FixedOffset(300)-Series-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-pytz.FixedOffset(300)-Series-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-pytz.FixedOffset(300)-Series-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-pytz.FixedOffset(300)-DataFrame-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-pytz.FixedOffset(300)-DataFrame-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-pytz.FixedOffset(300)-DataFrame-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-pytz.FixedOffset(300)-array-other0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-pytz.FixedOffset(300)-array-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-pytz.FixedOffset(300)-array-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-&lt;UTC&gt;-Index-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-&lt;UTC&gt;-Index-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-&lt;UTC&gt;-Index-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-&lt;UTC&gt;-Series-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-&lt;UTC&gt;-Series-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-&lt;UTC&gt;-Series-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-&lt;UTC&gt;-DataFrame-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-&lt;UTC&gt;-DataFrame-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-&lt;UTC&gt;-DataFrame-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-&lt;UTC&gt;-array-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-&lt;UTC&gt;-array-other1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-&lt;UTC&gt;-array-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-pytz.FixedOffset(-300)-Index-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-pytz.FixedOffset(-300)-Index-other1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-pytz.FixedOffset(-300)-Index-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-pytz.FixedOffset(-300)-Series-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-pytz.FixedOffset(-300)-Series-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-pytz.FixedOffset(-300)-Series-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-pytz.FixedOffset(-300)-DataFrame-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-pytz.FixedOffset(-300)-DataFrame-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-pytz.FixedOffset(-300)-DataFrame-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-pytz.FixedOffset(-300)-array-other0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-pytz.FixedOffset(-300)-array-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-pytz.FixedOffset(-300)-array-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-datetime.timezone.utc-Index-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-datetime.timezone.utc-Index-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-datetime.timezone.utc-Index-other2]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-datetime.timezone.utc-Series-other0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-datetime.timezone.utc-Series-other1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-datetime.timezone.utc-Series-other2]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-datetime.timezone.utc-DataFrame-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-datetime.timezone.utc-DataFrame-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-datetime.timezone.utc-DataFrame-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-datetime.timezone.utc-array-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-datetime.timezone.utc-array-other1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-datetime.timezone.utc-array-other2]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-datetime.timezone(datetime.timedelta(seconds=3600))-Index-other0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-datetime.timezone(datetime.timedelta(seconds=3600))-Index-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-datetime.timezone(datetime.timedelta(seconds=3600))-Index-other2]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-datetime.timezone(datetime.timedelta(seconds=3600))-Series-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-datetime.timezone(datetime.timedelta(seconds=3600))-Series-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-datetime.timezone(datetime.timedelta(seconds=3600))-Series-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-datetime.timezone(datetime.timedelta(seconds=3600))-DataFrame-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-datetime.timezone(datetime.timedelta(seconds=3600))-DataFrame-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-datetime.timezone(datetime.timedelta(seconds=3600))-DataFrame-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-datetime.timezone(datetime.timedelta(seconds=3600))-array-other0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-datetime.timezone(datetime.timedelta(seconds=3600))-array-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-datetime.timezone(datetime.timedelta(seconds=3600))-array-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Index-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Index-other1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Index-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Series-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Series-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Series-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-DataFrame-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-DataFrame-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-DataFrame-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-array-other0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-array-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-array-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-zoneinfo.ZoneInfo(key='US/Pacific')-Index-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-zoneinfo.ZoneInfo(key='US/Pacific')-Index-other1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-zoneinfo.ZoneInfo(key='US/Pacific')-Index-other2]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-zoneinfo.ZoneInfo(key='US/Pacific')-Series-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-zoneinfo.ZoneInfo(key='US/Pacific')-Series-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-zoneinfo.ZoneInfo(key='US/Pacific')-Series-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-zoneinfo.ZoneInfo(key='US/Pacific')-DataFrame-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-zoneinfo.ZoneInfo(key='US/Pacific')-DataFrame-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-zoneinfo.ZoneInfo(key='US/Pacific')-DataFrame-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-zoneinfo.ZoneInfo(key='US/Pacific')-array-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-zoneinfo.ZoneInfo(key='US/Pacific')-array-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-zoneinfo.ZoneInfo(key='US/Pacific')-array-other2]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-zoneinfo.ZoneInfo(key='UTC')-Index-other0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-zoneinfo.ZoneInfo(key='UTC')-Index-other1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-zoneinfo.ZoneInfo(key='UTC')-Index-other2]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-zoneinfo.ZoneInfo(key='UTC')-Series-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-zoneinfo.ZoneInfo(key='UTC')-Series-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-zoneinfo.ZoneInfo(key='UTC')-Series-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-zoneinfo.ZoneInfo(key='UTC')-DataFrame-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-zoneinfo.ZoneInfo(key='UTC')-DataFrame-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-zoneinfo.ZoneInfo(key='UTC')-DataFrame-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-zoneinfo.ZoneInfo(key='UTC')-array-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-zoneinfo.ZoneInfo(key='UTC')-array-other1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[lt-zoneinfo.ZoneInfo(key='UTC')-array-other2]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'UTC'-Index-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'UTC'-Index-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'UTC'-Index-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'UTC'-Series-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'UTC'-Series-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'UTC'-Series-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'UTC'-DataFrame-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'UTC'-DataFrame-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'UTC'-DataFrame-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'UTC'-array-other0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'UTC'-array-other1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'UTC'-array-other2]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'US/Eastern'-Index-other0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'US/Eastern'-Index-other1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'US/Eastern'-Index-other2]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'US/Eastern'-Series-other0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'US/Eastern'-Series-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'US/Eastern'-Series-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'US/Eastern'-DataFrame-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'US/Eastern'-DataFrame-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'US/Eastern'-DataFrame-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'US/Eastern'-array-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'US/Eastern'-array-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'US/Eastern'-array-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'Asia/Tokyo'-Index-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'Asia/Tokyo'-Index-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'Asia/Tokyo'-Index-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'Asia/Tokyo'-Series-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'Asia/Tokyo'-Series-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'Asia/Tokyo'-Series-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'Asia/Tokyo'-DataFrame-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'Asia/Tokyo'-DataFrame-other1]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'Asia/Tokyo'-DataFrame-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'Asia/Tokyo'-array-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'Asia/Tokyo'-array-other1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'Asia/Tokyo'-array-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'dateutil/US/Pacific'-Index-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'dateutil/US/Pacific'-Index-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'dateutil/US/Pacific'-Index-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'dateutil/US/Pacific'-Series-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'dateutil/US/Pacific'-Series-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'dateutil/US/Pacific'-Series-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'dateutil/US/Pacific'-DataFrame-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'dateutil/US/Pacific'-DataFrame-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'dateutil/US/Pacific'-DataFrame-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'dateutil/US/Pacific'-array-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'dateutil/US/Pacific'-array-other1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'dateutil/US/Pacific'-array-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'dateutil/Asia/Singapore'-Index-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'dateutil/Asia/Singapore'-Index-other1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'dateutil/Asia/Singapore'-Index-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'dateutil/Asia/Singapore'-Series-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'dateutil/Asia/Singapore'-Series-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'dateutil/Asia/Singapore'-Series-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'dateutil/Asia/Singapore'-DataFrame-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'dateutil/Asia/Singapore'-DataFrame-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'dateutil/Asia/Singapore'-DataFrame-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'dateutil/Asia/Singapore'-array-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'dateutil/Asia/Singapore'-array-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'dateutil/Asia/Singapore'-array-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'+01:15'-Index-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'+01:15'-Index-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'+01:15'-Index-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'+01:15'-Series-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'+01:15'-Series-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'+01:15'-Series-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'+01:15'-DataFrame-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'+01:15'-DataFrame-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'+01:15'-DataFrame-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'+01:15'-array-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'+01:15'-array-other1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'+01:15'-array-other2]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'-02:15'-Index-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'-02:15'-Index-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'-02:15'-Index-other2]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'-02:15'-Series-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'-02:15'-Series-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'-02:15'-Series-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'-02:15'-DataFrame-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'-02:15'-DataFrame-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'-02:15'-DataFrame-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'-02:15'-array-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'-02:15'-array-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'-02:15'-array-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'UTC+01:15'-Index-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'UTC+01:15'-Index-other1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'UTC+01:15'-Index-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'UTC+01:15'-Series-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'UTC+01:15'-Series-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'UTC+01:15'-Series-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'UTC+01:15'-DataFrame-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'UTC+01:15'-DataFrame-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'UTC+01:15'-DataFrame-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'UTC+01:15'-array-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'UTC+01:15'-array-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'UTC+01:15'-array-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'UTC-02:15'-Index-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'UTC-02:15'-Index-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'UTC-02:15'-Index-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'UTC-02:15'-Series-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'UTC-02:15'-Series-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'UTC-02:15'-Series-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'UTC-02:15'-DataFrame-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'UTC-02:15'-DataFrame-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'UTC-02:15'-DataFrame-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'UTC-02:15'-array-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'UTC-02:15'-array-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-'UTC-02:15'-array-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-tzutc()-Index-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-tzutc()-Index-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-tzutc()-Index-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-tzutc()-Series-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-tzutc()-Series-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-tzutc()-Series-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-tzutc()-DataFrame-other0]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-tzutc()-DataFrame-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-tzutc()-DataFrame-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-tzutc()-array-other0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-tzutc()-array-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-tzutc()-array-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-tzlocal()-Index-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-tzlocal()-Index-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-tzlocal()-Index-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-tzlocal()-Series-other0]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-tzlocal()-Series-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-tzlocal()-Series-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-tzlocal()-DataFrame-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-tzlocal()-DataFrame-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-tzlocal()-DataFrame-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-tzlocal()-array-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-tzlocal()-array-other1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-tzlocal()-array-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-pytz.FixedOffset(300)-Index-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-pytz.FixedOffset(300)-Index-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-pytz.FixedOffset(300)-Index-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-pytz.FixedOffset(300)-Series-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-pytz.FixedOffset(300)-Series-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-pytz.FixedOffset(300)-Series-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-pytz.FixedOffset(300)-DataFrame-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-pytz.FixedOffset(300)-DataFrame-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-pytz.FixedOffset(300)-DataFrame-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-pytz.FixedOffset(300)-array-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-pytz.FixedOffset(300)-array-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-pytz.FixedOffset(300)-array-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-&lt;UTC&gt;-Index-other0]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-&lt;UTC&gt;-Index-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-&lt;UTC&gt;-Index-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-&lt;UTC&gt;-Series-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-&lt;UTC&gt;-Series-other1]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-&lt;UTC&gt;-Series-other2]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-&lt;UTC&gt;-DataFrame-other0]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-&lt;UTC&gt;-DataFrame-other1]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-&lt;UTC&gt;-DataFrame-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-&lt;UTC&gt;-array-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-&lt;UTC&gt;-array-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-&lt;UTC&gt;-array-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-pytz.FixedOffset(-300)-Index-other0]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-pytz.FixedOffset(-300)-Index-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-pytz.FixedOffset(-300)-Index-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-pytz.FixedOffset(-300)-Series-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-pytz.FixedOffset(-300)-Series-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-pytz.FixedOffset(-300)-Series-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-pytz.FixedOffset(-300)-DataFrame-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-pytz.FixedOffset(-300)-DataFrame-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-pytz.FixedOffset(-300)-DataFrame-other2]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-pytz.FixedOffset(-300)-array-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-pytz.FixedOffset(-300)-array-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-pytz.FixedOffset(-300)-array-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-datetime.timezone.utc-Index-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-datetime.timezone.utc-Index-other1]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-datetime.timezone.utc-Index-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-datetime.timezone.utc-Series-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-datetime.timezone.utc-Series-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-datetime.timezone.utc-Series-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-datetime.timezone.utc-DataFrame-other0]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-datetime.timezone.utc-DataFrame-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-datetime.timezone.utc-DataFrame-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-datetime.timezone.utc-array-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-datetime.timezone.utc-array-other1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-datetime.timezone.utc-array-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-datetime.timezone(datetime.timedelta(seconds=3600))-Index-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-datetime.timezone(datetime.timedelta(seconds=3600))-Index-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-datetime.timezone(datetime.timedelta(seconds=3600))-Index-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-datetime.timezone(datetime.timedelta(seconds=3600))-Series-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-datetime.timezone(datetime.timedelta(seconds=3600))-Series-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-datetime.timezone(datetime.timedelta(seconds=3600))-Series-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-datetime.timezone(datetime.timedelta(seconds=3600))-DataFrame-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-datetime.timezone(datetime.timedelta(seconds=3600))-DataFrame-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-datetime.timezone(datetime.timedelta(seconds=3600))-DataFrame-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-datetime.timezone(datetime.timedelta(seconds=3600))-array-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-datetime.timezone(datetime.timedelta(seconds=3600))-array-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-datetime.timezone(datetime.timedelta(seconds=3600))-array-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Index-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Index-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Index-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Series-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Series-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Series-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-DataFrame-other0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-DataFrame-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-DataFrame-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-array-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-array-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-array-other2]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-zoneinfo.ZoneInfo(key='US/Pacific')-Index-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-zoneinfo.ZoneInfo(key='US/Pacific')-Index-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-zoneinfo.ZoneInfo(key='US/Pacific')-Index-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-zoneinfo.ZoneInfo(key='US/Pacific')-Series-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-zoneinfo.ZoneInfo(key='US/Pacific')-Series-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-zoneinfo.ZoneInfo(key='US/Pacific')-Series-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-zoneinfo.ZoneInfo(key='US/Pacific')-DataFrame-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-zoneinfo.ZoneInfo(key='US/Pacific')-DataFrame-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-zoneinfo.ZoneInfo(key='US/Pacific')-DataFrame-other2]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-zoneinfo.ZoneInfo(key='US/Pacific')-array-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-zoneinfo.ZoneInfo(key='US/Pacific')-array-other1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-zoneinfo.ZoneInfo(key='US/Pacific')-array-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-zoneinfo.ZoneInfo(key='UTC')-Index-other0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-zoneinfo.ZoneInfo(key='UTC')-Index-other1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-zoneinfo.ZoneInfo(key='UTC')-Index-other2]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-zoneinfo.ZoneInfo(key='UTC')-Series-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-zoneinfo.ZoneInfo(key='UTC')-Series-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-zoneinfo.ZoneInfo(key='UTC')-Series-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-zoneinfo.ZoneInfo(key='UTC')-DataFrame-other0]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-zoneinfo.ZoneInfo(key='UTC')-DataFrame-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-zoneinfo.ZoneInfo(key='UTC')-DataFrame-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-zoneinfo.ZoneInfo(key='UTC')-array-other0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-zoneinfo.ZoneInfo(key='UTC')-array-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_scalar_comparison_tzawareness[le-zoneinfo.ZoneInfo(key='UTC')-array-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_nat_comparison_tzawareness[eq]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_nat_comparison_tzawareness[ne]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_nat_comparison_tzawareness[gt]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_nat_comparison_tzawareness[ge]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_nat_comparison_tzawareness[lt]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_nat_comparison_tzawareness[le]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_dti_cmp_str[None]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_dti_cmp_str['UTC']" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_dti_cmp_str['US/Eastern']" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_dti_cmp_str['Asia/Tokyo']" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_dti_cmp_str['dateutil/US/Pacific']" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_dti_cmp_str['dateutil/Asia/Singapore']" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_dti_cmp_str['+01:15']" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_dti_cmp_str['-02:15']" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_dti_cmp_str['UTC+01:15']" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_dti_cmp_str['UTC-02:15']" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_dti_cmp_str[tzutc()]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_dti_cmp_str[tzlocal()]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_dti_cmp_str[pytz.FixedOffset(300)]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_dti_cmp_str[&lt;UTC&gt;]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_dti_cmp_str[pytz.FixedOffset(-300)]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_dti_cmp_str[datetime.timezone.utc]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_dti_cmp_str[datetime.timezone(datetime.timedelta(seconds=3600))]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_dti_cmp_str[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_dti_cmp_str[zoneinfo.ZoneInfo(key='US/Pacific')]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_dti_cmp_str[zoneinfo.ZoneInfo(key='UTC')]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_dti_cmp_list" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_dti_cmp_tdi_tzawareness[TimedeltaIndex]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_dti_cmp_tdi_tzawareness[Series]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_dti_cmp_tdi_tzawareness[ndarray]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetimeIndexComparisons" name="test_dti_cmp_object_dtype" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[None-Hour-Index]" time="0.022" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[None-Hour-Series]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[None-Hour-DataFrame]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[None-Hour-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[None-Minute-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[None-Minute-Series]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[None-Minute-DataFrame]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[None-Minute-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[None-timedelta-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[None-timedelta-Series]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[None-timedelta-DataFrame]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[None-timedelta-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[None-Timedelta-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[None-Timedelta-Series]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[None-Timedelta-DataFrame]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[None-Timedelta-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[None-timedelta64_0-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[None-timedelta64_0-Series]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[None-timedelta64_0-DataFrame]" time="0.019" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[None-timedelta64_0-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[None-timedelta64_1-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[None-timedelta64_1-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[None-timedelta64_1-DataFrame]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[None-timedelta64_1-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['UTC'-Hour-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['UTC'-Hour-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['UTC'-Hour-DataFrame]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['UTC'-Hour-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['UTC'-Minute-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['UTC'-Minute-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['UTC'-Minute-DataFrame]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['UTC'-Minute-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['UTC'-timedelta-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['UTC'-timedelta-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['UTC'-timedelta-DataFrame]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['UTC'-timedelta-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['UTC'-Timedelta-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['UTC'-Timedelta-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['UTC'-Timedelta-DataFrame]" time="0.020" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['UTC'-Timedelta-array]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['UTC'-timedelta64_0-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['UTC'-timedelta64_0-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['UTC'-timedelta64_0-DataFrame]" time="0.020" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['UTC'-timedelta64_0-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['UTC'-timedelta64_1-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['UTC'-timedelta64_1-Series]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['UTC'-timedelta64_1-DataFrame]" time="0.022" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['UTC'-timedelta64_1-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['US/Eastern'-Hour-Index]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['US/Eastern'-Hour-Series]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['US/Eastern'-Hour-DataFrame]" time="0.018" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['US/Eastern'-Hour-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['US/Eastern'-Minute-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['US/Eastern'-Minute-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['US/Eastern'-Minute-DataFrame]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['US/Eastern'-Minute-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['US/Eastern'-timedelta-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['US/Eastern'-timedelta-Series]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['US/Eastern'-timedelta-DataFrame]" time="0.022" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['US/Eastern'-timedelta-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['US/Eastern'-Timedelta-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['US/Eastern'-Timedelta-Series]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['US/Eastern'-Timedelta-DataFrame]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['US/Eastern'-Timedelta-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['US/Eastern'-timedelta64_0-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['US/Eastern'-timedelta64_0-Series]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['US/Eastern'-timedelta64_0-DataFrame]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['US/Eastern'-timedelta64_0-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['US/Eastern'-timedelta64_1-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['US/Eastern'-timedelta64_1-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['US/Eastern'-timedelta64_1-DataFrame]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['US/Eastern'-timedelta64_1-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['Asia/Tokyo'-Hour-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['Asia/Tokyo'-Hour-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['Asia/Tokyo'-Hour-DataFrame]" time="0.019" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['Asia/Tokyo'-Hour-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['Asia/Tokyo'-Minute-Index]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['Asia/Tokyo'-Minute-Series]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['Asia/Tokyo'-Minute-DataFrame]" time="0.030" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['Asia/Tokyo'-Minute-array]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['Asia/Tokyo'-timedelta-Index]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['Asia/Tokyo'-timedelta-Series]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['Asia/Tokyo'-timedelta-DataFrame]" time="0.031" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['Asia/Tokyo'-timedelta-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['Asia/Tokyo'-Timedelta-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['Asia/Tokyo'-Timedelta-Series]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['Asia/Tokyo'-Timedelta-DataFrame]" time="0.020" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['Asia/Tokyo'-Timedelta-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['Asia/Tokyo'-timedelta64_0-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['Asia/Tokyo'-timedelta64_0-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['Asia/Tokyo'-timedelta64_0-DataFrame]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['Asia/Tokyo'-timedelta64_0-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['Asia/Tokyo'-timedelta64_1-Index]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['Asia/Tokyo'-timedelta64_1-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['Asia/Tokyo'-timedelta64_1-DataFrame]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['Asia/Tokyo'-timedelta64_1-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['dateutil/US/Pacific'-Hour-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['dateutil/US/Pacific'-Hour-Series]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['dateutil/US/Pacific'-Hour-DataFrame]" time="0.019" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['dateutil/US/Pacific'-Hour-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['dateutil/US/Pacific'-Minute-Index]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['dateutil/US/Pacific'-Minute-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['dateutil/US/Pacific'-Minute-DataFrame]" time="0.023" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['dateutil/US/Pacific'-Minute-array]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['dateutil/US/Pacific'-timedelta-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['dateutil/US/Pacific'-timedelta-Series]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['dateutil/US/Pacific'-timedelta-DataFrame]" time="0.026" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['dateutil/US/Pacific'-timedelta-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['dateutil/US/Pacific'-Timedelta-Index]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['dateutil/US/Pacific'-Timedelta-Series]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['dateutil/US/Pacific'-Timedelta-DataFrame]" time="0.020" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['dateutil/US/Pacific'-Timedelta-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['dateutil/US/Pacific'-timedelta64_0-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['dateutil/US/Pacific'-timedelta64_0-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['dateutil/US/Pacific'-timedelta64_0-DataFrame]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['dateutil/US/Pacific'-timedelta64_0-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['dateutil/US/Pacific'-timedelta64_1-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['dateutil/US/Pacific'-timedelta64_1-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['dateutil/US/Pacific'-timedelta64_1-DataFrame]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['dateutil/US/Pacific'-timedelta64_1-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['dateutil/Asia/Singapore'-Hour-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['dateutil/Asia/Singapore'-Hour-Series]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['dateutil/Asia/Singapore'-Hour-DataFrame]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['dateutil/Asia/Singapore'-Hour-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['dateutil/Asia/Singapore'-Minute-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['dateutil/Asia/Singapore'-Minute-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['dateutil/Asia/Singapore'-Minute-DataFrame]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['dateutil/Asia/Singapore'-Minute-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['dateutil/Asia/Singapore'-timedelta-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['dateutil/Asia/Singapore'-timedelta-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['dateutil/Asia/Singapore'-timedelta-DataFrame]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['dateutil/Asia/Singapore'-timedelta-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['dateutil/Asia/Singapore'-Timedelta-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['dateutil/Asia/Singapore'-Timedelta-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['dateutil/Asia/Singapore'-Timedelta-DataFrame]" time="0.019" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['dateutil/Asia/Singapore'-Timedelta-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['dateutil/Asia/Singapore'-timedelta64_0-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['dateutil/Asia/Singapore'-timedelta64_0-Series]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['dateutil/Asia/Singapore'-timedelta64_0-DataFrame]" time="0.020" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['dateutil/Asia/Singapore'-timedelta64_0-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['dateutil/Asia/Singapore'-timedelta64_1-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['dateutil/Asia/Singapore'-timedelta64_1-Series]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['dateutil/Asia/Singapore'-timedelta64_1-DataFrame]" time="0.020" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['dateutil/Asia/Singapore'-timedelta64_1-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['+01:15'-Hour-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['+01:15'-Hour-Series]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['+01:15'-Hour-DataFrame]" time="0.026" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['+01:15'-Hour-array]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['+01:15'-Minute-Index]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['+01:15'-Minute-Series]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['+01:15'-Minute-DataFrame]" time="0.027" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['+01:15'-Minute-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['+01:15'-timedelta-Index]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['+01:15'-timedelta-Series]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['+01:15'-timedelta-DataFrame]" time="0.033" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['+01:15'-timedelta-array]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['+01:15'-Timedelta-Index]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['+01:15'-Timedelta-Series]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['+01:15'-Timedelta-DataFrame]" time="0.021" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['+01:15'-Timedelta-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['+01:15'-timedelta64_0-Index]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['+01:15'-timedelta64_0-Series]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['+01:15'-timedelta64_0-DataFrame]" time="0.025" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['+01:15'-timedelta64_0-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['+01:15'-timedelta64_1-Index]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['+01:15'-timedelta64_1-Series]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['+01:15'-timedelta64_1-DataFrame]" time="0.030" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['+01:15'-timedelta64_1-array]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['-02:15'-Hour-Index]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['-02:15'-Hour-Series]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['-02:15'-Hour-DataFrame]" time="0.019" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['-02:15'-Hour-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['-02:15'-Minute-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['-02:15'-Minute-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['-02:15'-Minute-DataFrame]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['-02:15'-Minute-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['-02:15'-timedelta-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['-02:15'-timedelta-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['-02:15'-timedelta-DataFrame]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['-02:15'-timedelta-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['-02:15'-Timedelta-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['-02:15'-Timedelta-Series]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['-02:15'-Timedelta-DataFrame]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['-02:15'-Timedelta-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['-02:15'-timedelta64_0-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['-02:15'-timedelta64_0-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['-02:15'-timedelta64_0-DataFrame]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['-02:15'-timedelta64_0-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['-02:15'-timedelta64_1-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['-02:15'-timedelta64_1-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['-02:15'-timedelta64_1-DataFrame]" time="0.019" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['-02:15'-timedelta64_1-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['UTC+01:15'-Hour-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['UTC+01:15'-Hour-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['UTC+01:15'-Hour-DataFrame]" time="0.018" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['UTC+01:15'-Hour-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['UTC+01:15'-Minute-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['UTC+01:15'-Minute-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['UTC+01:15'-Minute-DataFrame]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['UTC+01:15'-Minute-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['UTC+01:15'-timedelta-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['UTC+01:15'-timedelta-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['UTC+01:15'-timedelta-DataFrame]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['UTC+01:15'-timedelta-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['UTC+01:15'-Timedelta-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['UTC+01:15'-Timedelta-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['UTC+01:15'-Timedelta-DataFrame]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['UTC+01:15'-Timedelta-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['UTC+01:15'-timedelta64_0-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['UTC+01:15'-timedelta64_0-Series]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['UTC+01:15'-timedelta64_0-DataFrame]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['UTC+01:15'-timedelta64_0-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['UTC+01:15'-timedelta64_1-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['UTC+01:15'-timedelta64_1-Series]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['UTC+01:15'-timedelta64_1-DataFrame]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['UTC+01:15'-timedelta64_1-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['UTC-02:15'-Hour-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['UTC-02:15'-Hour-Series]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['UTC-02:15'-Hour-DataFrame]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['UTC-02:15'-Hour-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['UTC-02:15'-Minute-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['UTC-02:15'-Minute-Series]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['UTC-02:15'-Minute-DataFrame]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['UTC-02:15'-Minute-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['UTC-02:15'-timedelta-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['UTC-02:15'-timedelta-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['UTC-02:15'-timedelta-DataFrame]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['UTC-02:15'-timedelta-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['UTC-02:15'-Timedelta-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['UTC-02:15'-Timedelta-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['UTC-02:15'-Timedelta-DataFrame]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['UTC-02:15'-Timedelta-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['UTC-02:15'-timedelta64_0-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['UTC-02:15'-timedelta64_0-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['UTC-02:15'-timedelta64_0-DataFrame]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['UTC-02:15'-timedelta64_0-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['UTC-02:15'-timedelta64_1-Index]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['UTC-02:15'-timedelta64_1-Series]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['UTC-02:15'-timedelta64_1-DataFrame]" time="0.025" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar['UTC-02:15'-timedelta64_1-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[tzutc()-Hour-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[tzutc()-Hour-Series]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[tzutc()-Hour-DataFrame]" time="0.023" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[tzutc()-Hour-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[tzutc()-Minute-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[tzutc()-Minute-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[tzutc()-Minute-DataFrame]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[tzutc()-Minute-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[tzutc()-timedelta-Index]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[tzutc()-timedelta-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[tzutc()-timedelta-DataFrame]" time="0.026" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[tzutc()-timedelta-array]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[tzutc()-Timedelta-Index]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[tzutc()-Timedelta-Series]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[tzutc()-Timedelta-DataFrame]" time="1.234" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[tzutc()-Timedelta-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[tzutc()-timedelta64_0-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[tzutc()-timedelta64_0-Series]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[tzutc()-timedelta64_0-DataFrame]" time="0.023" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[tzutc()-timedelta64_0-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[tzutc()-timedelta64_1-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[tzutc()-timedelta64_1-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[tzutc()-timedelta64_1-DataFrame]" time="0.028" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[tzutc()-timedelta64_1-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[tzlocal()-Hour-Index]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[tzlocal()-Hour-Series]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[tzlocal()-Hour-DataFrame]" time="0.026" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[tzlocal()-Hour-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[tzlocal()-Minute-Index]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[tzlocal()-Minute-Series]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[tzlocal()-Minute-DataFrame]" time="0.027" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[tzlocal()-Minute-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[tzlocal()-timedelta-Index]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[tzlocal()-timedelta-Series]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[tzlocal()-timedelta-DataFrame]" time="0.043" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[tzlocal()-timedelta-array]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[tzlocal()-Timedelta-Index]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[tzlocal()-Timedelta-Series]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[tzlocal()-Timedelta-DataFrame]" time="0.055" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[tzlocal()-Timedelta-array]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[tzlocal()-timedelta64_0-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[tzlocal()-timedelta64_0-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[tzlocal()-timedelta64_0-DataFrame]" time="0.018" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[tzlocal()-timedelta64_0-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[tzlocal()-timedelta64_1-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[tzlocal()-timedelta64_1-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[tzlocal()-timedelta64_1-DataFrame]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[tzlocal()-timedelta64_1-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[pytz.FixedOffset(300)-Hour-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[pytz.FixedOffset(300)-Hour-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[pytz.FixedOffset(300)-Hour-DataFrame]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[pytz.FixedOffset(300)-Hour-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[pytz.FixedOffset(300)-Minute-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[pytz.FixedOffset(300)-Minute-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[pytz.FixedOffset(300)-Minute-DataFrame]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[pytz.FixedOffset(300)-Minute-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[pytz.FixedOffset(300)-timedelta-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[pytz.FixedOffset(300)-timedelta-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[pytz.FixedOffset(300)-timedelta-DataFrame]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[pytz.FixedOffset(300)-timedelta-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[pytz.FixedOffset(300)-Timedelta-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[pytz.FixedOffset(300)-Timedelta-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[pytz.FixedOffset(300)-Timedelta-DataFrame]" time="0.019" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[pytz.FixedOffset(300)-Timedelta-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[pytz.FixedOffset(300)-timedelta64_0-Index]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[pytz.FixedOffset(300)-timedelta64_0-Series]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[pytz.FixedOffset(300)-timedelta64_0-DataFrame]" time="0.024" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[pytz.FixedOffset(300)-timedelta64_0-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[pytz.FixedOffset(300)-timedelta64_1-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[pytz.FixedOffset(300)-timedelta64_1-Series]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[pytz.FixedOffset(300)-timedelta64_1-DataFrame]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[pytz.FixedOffset(300)-timedelta64_1-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[&lt;UTC&gt;-Hour-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[&lt;UTC&gt;-Hour-Series]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[&lt;UTC&gt;-Hour-DataFrame]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[&lt;UTC&gt;-Hour-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[&lt;UTC&gt;-Minute-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[&lt;UTC&gt;-Minute-Series]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[&lt;UTC&gt;-Minute-DataFrame]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[&lt;UTC&gt;-Minute-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[&lt;UTC&gt;-timedelta-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[&lt;UTC&gt;-timedelta-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[&lt;UTC&gt;-timedelta-DataFrame]" time="0.018" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[&lt;UTC&gt;-timedelta-array]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[&lt;UTC&gt;-Timedelta-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[&lt;UTC&gt;-Timedelta-Series]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[&lt;UTC&gt;-Timedelta-DataFrame]" time="0.025" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[&lt;UTC&gt;-Timedelta-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[&lt;UTC&gt;-timedelta64_0-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[&lt;UTC&gt;-timedelta64_0-Series]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[&lt;UTC&gt;-timedelta64_0-DataFrame]" time="0.019" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[&lt;UTC&gt;-timedelta64_0-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[&lt;UTC&gt;-timedelta64_1-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[&lt;UTC&gt;-timedelta64_1-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[&lt;UTC&gt;-timedelta64_1-DataFrame]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[&lt;UTC&gt;-timedelta64_1-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[pytz.FixedOffset(-300)-Hour-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[pytz.FixedOffset(-300)-Hour-Series]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[pytz.FixedOffset(-300)-Hour-DataFrame]" time="0.023" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[pytz.FixedOffset(-300)-Hour-array]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[pytz.FixedOffset(-300)-Minute-Index]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[pytz.FixedOffset(-300)-Minute-Series]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[pytz.FixedOffset(-300)-Minute-DataFrame]" time="0.035" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[pytz.FixedOffset(-300)-Minute-array]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[pytz.FixedOffset(-300)-timedelta-Index]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[pytz.FixedOffset(-300)-timedelta-Series]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[pytz.FixedOffset(-300)-timedelta-DataFrame]" time="0.027" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[pytz.FixedOffset(-300)-timedelta-array]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[pytz.FixedOffset(-300)-Timedelta-Index]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[pytz.FixedOffset(-300)-Timedelta-Series]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[pytz.FixedOffset(-300)-Timedelta-DataFrame]" time="0.028" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[pytz.FixedOffset(-300)-Timedelta-array]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[pytz.FixedOffset(-300)-timedelta64_0-Index]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[pytz.FixedOffset(-300)-timedelta64_0-Series]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[pytz.FixedOffset(-300)-timedelta64_0-DataFrame]" time="0.034" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[pytz.FixedOffset(-300)-timedelta64_0-array]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[pytz.FixedOffset(-300)-timedelta64_1-Index]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[pytz.FixedOffset(-300)-timedelta64_1-Series]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[pytz.FixedOffset(-300)-timedelta64_1-DataFrame]" time="0.112" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[pytz.FixedOffset(-300)-timedelta64_1-array]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[datetime.timezone.utc-Hour-Index]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[datetime.timezone.utc-Hour-Series]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[datetime.timezone.utc-Hour-DataFrame]" time="0.037" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[datetime.timezone.utc-Hour-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[datetime.timezone.utc-Minute-Index]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[datetime.timezone.utc-Minute-Series]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[datetime.timezone.utc-Minute-DataFrame]" time="0.041" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[datetime.timezone.utc-Minute-array]" time="0.022" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[datetime.timezone.utc-timedelta-Index]" time="0.019" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[datetime.timezone.utc-timedelta-Series]" time="0.032" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[datetime.timezone.utc-timedelta-DataFrame]" time="0.073" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[datetime.timezone.utc-timedelta-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[datetime.timezone.utc-Timedelta-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[datetime.timezone.utc-Timedelta-Series]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[datetime.timezone.utc-Timedelta-DataFrame]" time="0.039" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[datetime.timezone.utc-Timedelta-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[datetime.timezone.utc-timedelta64_0-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[datetime.timezone.utc-timedelta64_0-Series]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[datetime.timezone.utc-timedelta64_0-DataFrame]" time="0.025" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[datetime.timezone.utc-timedelta64_0-array]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[datetime.timezone.utc-timedelta64_1-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[datetime.timezone.utc-timedelta64_1-Series]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[datetime.timezone.utc-timedelta64_1-DataFrame]" time="0.027" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[datetime.timezone.utc-timedelta64_1-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[datetime.timezone(datetime.timedelta(seconds=3600))-Hour-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[datetime.timezone(datetime.timedelta(seconds=3600))-Hour-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[datetime.timezone(datetime.timedelta(seconds=3600))-Hour-DataFrame]" time="0.020" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[datetime.timezone(datetime.timedelta(seconds=3600))-Hour-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[datetime.timezone(datetime.timedelta(seconds=3600))-Minute-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[datetime.timezone(datetime.timedelta(seconds=3600))-Minute-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[datetime.timezone(datetime.timedelta(seconds=3600))-Minute-DataFrame]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[datetime.timezone(datetime.timedelta(seconds=3600))-Minute-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[datetime.timezone(datetime.timedelta(seconds=3600))-timedelta-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[datetime.timezone(datetime.timedelta(seconds=3600))-timedelta-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[datetime.timezone(datetime.timedelta(seconds=3600))-timedelta-DataFrame]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[datetime.timezone(datetime.timedelta(seconds=3600))-timedelta-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[datetime.timezone(datetime.timedelta(seconds=3600))-Timedelta-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[datetime.timezone(datetime.timedelta(seconds=3600))-Timedelta-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[datetime.timezone(datetime.timedelta(seconds=3600))-Timedelta-DataFrame]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[datetime.timezone(datetime.timedelta(seconds=3600))-Timedelta-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[datetime.timezone(datetime.timedelta(seconds=3600))-timedelta64_0-Index]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[datetime.timezone(datetime.timedelta(seconds=3600))-timedelta64_0-Series]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[datetime.timezone(datetime.timedelta(seconds=3600))-timedelta64_0-DataFrame]" time="0.020" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[datetime.timezone(datetime.timedelta(seconds=3600))-timedelta64_0-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[datetime.timezone(datetime.timedelta(seconds=3600))-timedelta64_1-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[datetime.timezone(datetime.timedelta(seconds=3600))-timedelta64_1-Series]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[datetime.timezone(datetime.timedelta(seconds=3600))-timedelta64_1-DataFrame]" time="0.021" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[datetime.timezone(datetime.timedelta(seconds=3600))-timedelta64_1-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Hour-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Hour-Series]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Hour-DataFrame]" time="0.021" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Hour-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Minute-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Minute-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Minute-DataFrame]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Minute-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-timedelta-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-timedelta-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-timedelta-DataFrame]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-timedelta-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Timedelta-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Timedelta-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Timedelta-DataFrame]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Timedelta-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-timedelta64_0-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-timedelta64_0-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-timedelta64_0-DataFrame]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-timedelta64_0-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-timedelta64_1-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-timedelta64_1-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-timedelta64_1-DataFrame]" time="0.019" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-timedelta64_1-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[zoneinfo.ZoneInfo(key='US/Pacific')-Hour-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[zoneinfo.ZoneInfo(key='US/Pacific')-Hour-Series]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[zoneinfo.ZoneInfo(key='US/Pacific')-Hour-DataFrame]" time="0.022" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[zoneinfo.ZoneInfo(key='US/Pacific')-Hour-array]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[zoneinfo.ZoneInfo(key='US/Pacific')-Minute-Index]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[zoneinfo.ZoneInfo(key='US/Pacific')-Minute-Series]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[zoneinfo.ZoneInfo(key='US/Pacific')-Minute-DataFrame]" time="0.027" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[zoneinfo.ZoneInfo(key='US/Pacific')-Minute-array]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[zoneinfo.ZoneInfo(key='US/Pacific')-timedelta-Index]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[zoneinfo.ZoneInfo(key='US/Pacific')-timedelta-Series]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[zoneinfo.ZoneInfo(key='US/Pacific')-timedelta-DataFrame]" time="0.021" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[zoneinfo.ZoneInfo(key='US/Pacific')-timedelta-array]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[zoneinfo.ZoneInfo(key='US/Pacific')-Timedelta-Index]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[zoneinfo.ZoneInfo(key='US/Pacific')-Timedelta-Series]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[zoneinfo.ZoneInfo(key='US/Pacific')-Timedelta-DataFrame]" time="0.026" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[zoneinfo.ZoneInfo(key='US/Pacific')-Timedelta-array]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[zoneinfo.ZoneInfo(key='US/Pacific')-timedelta64_0-Index]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[zoneinfo.ZoneInfo(key='US/Pacific')-timedelta64_0-Series]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[zoneinfo.ZoneInfo(key='US/Pacific')-timedelta64_0-DataFrame]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[zoneinfo.ZoneInfo(key='US/Pacific')-timedelta64_0-array]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[zoneinfo.ZoneInfo(key='US/Pacific')-timedelta64_1-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[zoneinfo.ZoneInfo(key='US/Pacific')-timedelta64_1-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[zoneinfo.ZoneInfo(key='US/Pacific')-timedelta64_1-DataFrame]" time="0.019" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[zoneinfo.ZoneInfo(key='US/Pacific')-timedelta64_1-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[zoneinfo.ZoneInfo(key='UTC')-Hour-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[zoneinfo.ZoneInfo(key='UTC')-Hour-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[zoneinfo.ZoneInfo(key='UTC')-Hour-DataFrame]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[zoneinfo.ZoneInfo(key='UTC')-Hour-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[zoneinfo.ZoneInfo(key='UTC')-Minute-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[zoneinfo.ZoneInfo(key='UTC')-Minute-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[zoneinfo.ZoneInfo(key='UTC')-Minute-DataFrame]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[zoneinfo.ZoneInfo(key='UTC')-Minute-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[zoneinfo.ZoneInfo(key='UTC')-timedelta-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[zoneinfo.ZoneInfo(key='UTC')-timedelta-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[zoneinfo.ZoneInfo(key='UTC')-timedelta-DataFrame]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[zoneinfo.ZoneInfo(key='UTC')-timedelta-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[zoneinfo.ZoneInfo(key='UTC')-Timedelta-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[zoneinfo.ZoneInfo(key='UTC')-Timedelta-Series]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[zoneinfo.ZoneInfo(key='UTC')-Timedelta-DataFrame]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[zoneinfo.ZoneInfo(key='UTC')-Timedelta-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[zoneinfo.ZoneInfo(key='UTC')-timedelta64_0-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[zoneinfo.ZoneInfo(key='UTC')-timedelta64_0-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[zoneinfo.ZoneInfo(key='UTC')-timedelta64_0-DataFrame]" time="0.023" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[zoneinfo.ZoneInfo(key='UTC')-timedelta64_0-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[zoneinfo.ZoneInfo(key='UTC')-timedelta64_1-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[zoneinfo.ZoneInfo(key='UTC')-timedelta64_1-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[zoneinfo.ZoneInfo(key='UTC')-timedelta64_1-DataFrame]" time="0.022" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_timedeltalike_scalar[zoneinfo.ZoneInfo(key='UTC')-timedelta64_1-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[None-Hour-Index]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[None-Hour-Series]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[None-Hour-DataFrame]" time="0.019" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[None-Hour-array]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[None-Minute-Index]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[None-Minute-Series]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[None-Minute-DataFrame]" time="0.025" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[None-Minute-array]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[None-timedelta-Index]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[None-timedelta-Series]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[None-timedelta-DataFrame]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[None-timedelta-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[None-Timedelta-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[None-Timedelta-Series]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[None-Timedelta-DataFrame]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[None-Timedelta-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[None-timedelta64_0-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[None-timedelta64_0-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[None-timedelta64_0-DataFrame]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[None-timedelta64_0-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[None-timedelta64_1-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[None-timedelta64_1-Series]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[None-timedelta64_1-DataFrame]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[None-timedelta64_1-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['UTC'-Hour-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['UTC'-Hour-Series]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['UTC'-Hour-DataFrame]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['UTC'-Hour-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['UTC'-Minute-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['UTC'-Minute-Series]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['UTC'-Minute-DataFrame]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['UTC'-Minute-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['UTC'-timedelta-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['UTC'-timedelta-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['UTC'-timedelta-DataFrame]" time="0.018" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['UTC'-timedelta-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['UTC'-Timedelta-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['UTC'-Timedelta-Series]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['UTC'-Timedelta-DataFrame]" time="0.019" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['UTC'-Timedelta-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['UTC'-timedelta64_0-Index]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['UTC'-timedelta64_0-Series]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['UTC'-timedelta64_0-DataFrame]" time="0.023" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['UTC'-timedelta64_0-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['UTC'-timedelta64_1-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['UTC'-timedelta64_1-Series]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['UTC'-timedelta64_1-DataFrame]" time="0.018" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['UTC'-timedelta64_1-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['US/Eastern'-Hour-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['US/Eastern'-Hour-Series]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['US/Eastern'-Hour-DataFrame]" time="0.022" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['US/Eastern'-Hour-array]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['US/Eastern'-Minute-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['US/Eastern'-Minute-Series]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['US/Eastern'-Minute-DataFrame]" time="0.018" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['US/Eastern'-Minute-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['US/Eastern'-timedelta-Index]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['US/Eastern'-timedelta-Series]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['US/Eastern'-timedelta-DataFrame]" time="0.023" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['US/Eastern'-timedelta-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['US/Eastern'-Timedelta-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['US/Eastern'-Timedelta-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['US/Eastern'-Timedelta-DataFrame]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['US/Eastern'-Timedelta-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['US/Eastern'-timedelta64_0-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['US/Eastern'-timedelta64_0-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['US/Eastern'-timedelta64_0-DataFrame]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['US/Eastern'-timedelta64_0-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['US/Eastern'-timedelta64_1-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['US/Eastern'-timedelta64_1-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['US/Eastern'-timedelta64_1-DataFrame]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['US/Eastern'-timedelta64_1-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['Asia/Tokyo'-Hour-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['Asia/Tokyo'-Hour-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['Asia/Tokyo'-Hour-DataFrame]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['Asia/Tokyo'-Hour-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['Asia/Tokyo'-Minute-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['Asia/Tokyo'-Minute-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['Asia/Tokyo'-Minute-DataFrame]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['Asia/Tokyo'-Minute-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['Asia/Tokyo'-timedelta-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['Asia/Tokyo'-timedelta-Series]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['Asia/Tokyo'-timedelta-DataFrame]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['Asia/Tokyo'-timedelta-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['Asia/Tokyo'-Timedelta-Index]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['Asia/Tokyo'-Timedelta-Series]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['Asia/Tokyo'-Timedelta-DataFrame]" time="0.025" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['Asia/Tokyo'-Timedelta-array]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['Asia/Tokyo'-timedelta64_0-Index]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['Asia/Tokyo'-timedelta64_0-Series]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['Asia/Tokyo'-timedelta64_0-DataFrame]" time="0.036" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['Asia/Tokyo'-timedelta64_0-array]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['Asia/Tokyo'-timedelta64_1-Index]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['Asia/Tokyo'-timedelta64_1-Series]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['Asia/Tokyo'-timedelta64_1-DataFrame]" time="0.023" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['Asia/Tokyo'-timedelta64_1-array]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['dateutil/US/Pacific'-Hour-Index]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['dateutil/US/Pacific'-Hour-Series]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['dateutil/US/Pacific'-Hour-DataFrame]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['dateutil/US/Pacific'-Hour-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['dateutil/US/Pacific'-Minute-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['dateutil/US/Pacific'-Minute-Series]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['dateutil/US/Pacific'-Minute-DataFrame]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['dateutil/US/Pacific'-Minute-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['dateutil/US/Pacific'-timedelta-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['dateutil/US/Pacific'-timedelta-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['dateutil/US/Pacific'-timedelta-DataFrame]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['dateutil/US/Pacific'-timedelta-array]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['dateutil/US/Pacific'-Timedelta-Index]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['dateutil/US/Pacific'-Timedelta-Series]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['dateutil/US/Pacific'-Timedelta-DataFrame]" time="0.020" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['dateutil/US/Pacific'-Timedelta-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['dateutil/US/Pacific'-timedelta64_0-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['dateutil/US/Pacific'-timedelta64_0-Series]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['dateutil/US/Pacific'-timedelta64_0-DataFrame]" time="0.019" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['dateutil/US/Pacific'-timedelta64_0-array]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['dateutil/US/Pacific'-timedelta64_1-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['dateutil/US/Pacific'-timedelta64_1-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['dateutil/US/Pacific'-timedelta64_1-DataFrame]" time="0.018" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['dateutil/US/Pacific'-timedelta64_1-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['dateutil/Asia/Singapore'-Hour-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['dateutil/Asia/Singapore'-Hour-Series]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['dateutil/Asia/Singapore'-Hour-DataFrame]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['dateutil/Asia/Singapore'-Hour-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['dateutil/Asia/Singapore'-Minute-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['dateutil/Asia/Singapore'-Minute-Series]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['dateutil/Asia/Singapore'-Minute-DataFrame]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['dateutil/Asia/Singapore'-Minute-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['dateutil/Asia/Singapore'-timedelta-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['dateutil/Asia/Singapore'-timedelta-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['dateutil/Asia/Singapore'-timedelta-DataFrame]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['dateutil/Asia/Singapore'-timedelta-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['dateutil/Asia/Singapore'-Timedelta-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['dateutil/Asia/Singapore'-Timedelta-Series]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['dateutil/Asia/Singapore'-Timedelta-DataFrame]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['dateutil/Asia/Singapore'-Timedelta-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['dateutil/Asia/Singapore'-timedelta64_0-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['dateutil/Asia/Singapore'-timedelta64_0-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['dateutil/Asia/Singapore'-timedelta64_0-DataFrame]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['dateutil/Asia/Singapore'-timedelta64_0-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['dateutil/Asia/Singapore'-timedelta64_1-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['dateutil/Asia/Singapore'-timedelta64_1-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['dateutil/Asia/Singapore'-timedelta64_1-DataFrame]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['dateutil/Asia/Singapore'-timedelta64_1-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['+01:15'-Hour-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['+01:15'-Hour-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['+01:15'-Hour-DataFrame]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['+01:15'-Hour-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['+01:15'-Minute-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['+01:15'-Minute-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['+01:15'-Minute-DataFrame]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['+01:15'-Minute-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['+01:15'-timedelta-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['+01:15'-timedelta-Series]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['+01:15'-timedelta-DataFrame]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['+01:15'-timedelta-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['+01:15'-Timedelta-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['+01:15'-Timedelta-Series]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['+01:15'-Timedelta-DataFrame]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['+01:15'-Timedelta-array]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['+01:15'-timedelta64_0-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['+01:15'-timedelta64_0-Series]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['+01:15'-timedelta64_0-DataFrame]" time="0.021" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['+01:15'-timedelta64_0-array]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['+01:15'-timedelta64_1-Index]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['+01:15'-timedelta64_1-Series]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['+01:15'-timedelta64_1-DataFrame]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['+01:15'-timedelta64_1-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['-02:15'-Hour-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['-02:15'-Hour-Series]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['-02:15'-Hour-DataFrame]" time="0.019" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['-02:15'-Hour-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['-02:15'-Minute-Index]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['-02:15'-Minute-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['-02:15'-Minute-DataFrame]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['-02:15'-Minute-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['-02:15'-timedelta-Index]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['-02:15'-timedelta-Series]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['-02:15'-timedelta-DataFrame]" time="0.019" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['-02:15'-timedelta-array]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['-02:15'-Timedelta-Index]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['-02:15'-Timedelta-Series]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['-02:15'-Timedelta-DataFrame]" time="0.022" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['-02:15'-Timedelta-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['-02:15'-timedelta64_0-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['-02:15'-timedelta64_0-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['-02:15'-timedelta64_0-DataFrame]" time="0.020" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['-02:15'-timedelta64_0-array]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['-02:15'-timedelta64_1-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['-02:15'-timedelta64_1-Series]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['-02:15'-timedelta64_1-DataFrame]" time="0.022" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['-02:15'-timedelta64_1-array]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['UTC+01:15'-Hour-Index]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['UTC+01:15'-Hour-Series]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['UTC+01:15'-Hour-DataFrame]" time="0.027" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['UTC+01:15'-Hour-array]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['UTC+01:15'-Minute-Index]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['UTC+01:15'-Minute-Series]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['UTC+01:15'-Minute-DataFrame]" time="0.035" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['UTC+01:15'-Minute-array]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['UTC+01:15'-timedelta-Index]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['UTC+01:15'-timedelta-Series]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['UTC+01:15'-timedelta-DataFrame]" time="0.020" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['UTC+01:15'-timedelta-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['UTC+01:15'-Timedelta-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['UTC+01:15'-Timedelta-Series]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['UTC+01:15'-Timedelta-DataFrame]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['UTC+01:15'-Timedelta-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['UTC+01:15'-timedelta64_0-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['UTC+01:15'-timedelta64_0-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['UTC+01:15'-timedelta64_0-DataFrame]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['UTC+01:15'-timedelta64_0-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['UTC+01:15'-timedelta64_1-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['UTC+01:15'-timedelta64_1-Series]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['UTC+01:15'-timedelta64_1-DataFrame]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['UTC+01:15'-timedelta64_1-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['UTC-02:15'-Hour-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['UTC-02:15'-Hour-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['UTC-02:15'-Hour-DataFrame]" time="0.018" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['UTC-02:15'-Hour-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['UTC-02:15'-Minute-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['UTC-02:15'-Minute-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['UTC-02:15'-Minute-DataFrame]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['UTC-02:15'-Minute-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['UTC-02:15'-timedelta-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['UTC-02:15'-timedelta-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['UTC-02:15'-timedelta-DataFrame]" time="0.018" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['UTC-02:15'-timedelta-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['UTC-02:15'-Timedelta-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['UTC-02:15'-Timedelta-Series]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['UTC-02:15'-Timedelta-DataFrame]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['UTC-02:15'-Timedelta-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['UTC-02:15'-timedelta64_0-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['UTC-02:15'-timedelta64_0-Series]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['UTC-02:15'-timedelta64_0-DataFrame]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['UTC-02:15'-timedelta64_0-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['UTC-02:15'-timedelta64_1-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['UTC-02:15'-timedelta64_1-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['UTC-02:15'-timedelta64_1-DataFrame]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar['UTC-02:15'-timedelta64_1-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[tzutc()-Hour-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[tzutc()-Hour-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[tzutc()-Hour-DataFrame]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[tzutc()-Hour-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[tzutc()-Minute-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[tzutc()-Minute-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[tzutc()-Minute-DataFrame]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[tzutc()-Minute-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[tzutc()-timedelta-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[tzutc()-timedelta-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[tzutc()-timedelta-DataFrame]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[tzutc()-timedelta-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[tzutc()-Timedelta-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[tzutc()-Timedelta-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[tzutc()-Timedelta-DataFrame]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[tzutc()-Timedelta-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[tzutc()-timedelta64_0-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[tzutc()-timedelta64_0-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[tzutc()-timedelta64_0-DataFrame]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[tzutc()-timedelta64_0-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[tzutc()-timedelta64_1-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[tzutc()-timedelta64_1-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[tzutc()-timedelta64_1-DataFrame]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[tzutc()-timedelta64_1-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[tzlocal()-Hour-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[tzlocal()-Hour-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[tzlocal()-Hour-DataFrame]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[tzlocal()-Hour-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[tzlocal()-Minute-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[tzlocal()-Minute-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[tzlocal()-Minute-DataFrame]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[tzlocal()-Minute-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[tzlocal()-timedelta-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[tzlocal()-timedelta-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[tzlocal()-timedelta-DataFrame]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[tzlocal()-timedelta-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[tzlocal()-Timedelta-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[tzlocal()-Timedelta-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[tzlocal()-Timedelta-DataFrame]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[tzlocal()-Timedelta-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[tzlocal()-timedelta64_0-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[tzlocal()-timedelta64_0-Series]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[tzlocal()-timedelta64_0-DataFrame]" time="0.019" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[tzlocal()-timedelta64_0-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[tzlocal()-timedelta64_1-Index]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[tzlocal()-timedelta64_1-Series]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[tzlocal()-timedelta64_1-DataFrame]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[tzlocal()-timedelta64_1-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[pytz.FixedOffset(300)-Hour-Index]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[pytz.FixedOffset(300)-Hour-Series]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[pytz.FixedOffset(300)-Hour-DataFrame]" time="0.023" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[pytz.FixedOffset(300)-Hour-array]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[pytz.FixedOffset(300)-Minute-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[pytz.FixedOffset(300)-Minute-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[pytz.FixedOffset(300)-Minute-DataFrame]" time="0.018" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[pytz.FixedOffset(300)-Minute-array]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[pytz.FixedOffset(300)-timedelta-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[pytz.FixedOffset(300)-timedelta-Series]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[pytz.FixedOffset(300)-timedelta-DataFrame]" time="0.023" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[pytz.FixedOffset(300)-timedelta-array]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[pytz.FixedOffset(300)-Timedelta-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[pytz.FixedOffset(300)-Timedelta-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[pytz.FixedOffset(300)-Timedelta-DataFrame]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[pytz.FixedOffset(300)-Timedelta-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[pytz.FixedOffset(300)-timedelta64_0-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[pytz.FixedOffset(300)-timedelta64_0-Series]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[pytz.FixedOffset(300)-timedelta64_0-DataFrame]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[pytz.FixedOffset(300)-timedelta64_0-array]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[pytz.FixedOffset(300)-timedelta64_1-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[pytz.FixedOffset(300)-timedelta64_1-Series]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[pytz.FixedOffset(300)-timedelta64_1-DataFrame]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[pytz.FixedOffset(300)-timedelta64_1-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[&lt;UTC&gt;-Hour-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[&lt;UTC&gt;-Hour-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[&lt;UTC&gt;-Hour-DataFrame]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[&lt;UTC&gt;-Hour-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[&lt;UTC&gt;-Minute-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[&lt;UTC&gt;-Minute-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[&lt;UTC&gt;-Minute-DataFrame]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[&lt;UTC&gt;-Minute-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[&lt;UTC&gt;-timedelta-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[&lt;UTC&gt;-timedelta-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[&lt;UTC&gt;-timedelta-DataFrame]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[&lt;UTC&gt;-timedelta-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[&lt;UTC&gt;-Timedelta-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[&lt;UTC&gt;-Timedelta-Series]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[&lt;UTC&gt;-Timedelta-DataFrame]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[&lt;UTC&gt;-Timedelta-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[&lt;UTC&gt;-timedelta64_0-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[&lt;UTC&gt;-timedelta64_0-Series]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[&lt;UTC&gt;-timedelta64_0-DataFrame]" time="0.018" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[&lt;UTC&gt;-timedelta64_0-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[&lt;UTC&gt;-timedelta64_1-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[&lt;UTC&gt;-timedelta64_1-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[&lt;UTC&gt;-timedelta64_1-DataFrame]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[&lt;UTC&gt;-timedelta64_1-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[pytz.FixedOffset(-300)-Hour-Index]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[pytz.FixedOffset(-300)-Hour-Series]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[pytz.FixedOffset(-300)-Hour-DataFrame]" time="0.018" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[pytz.FixedOffset(-300)-Hour-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[pytz.FixedOffset(-300)-Minute-Index]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[pytz.FixedOffset(-300)-Minute-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[pytz.FixedOffset(-300)-Minute-DataFrame]" time="0.019" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[pytz.FixedOffset(-300)-Minute-array]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[pytz.FixedOffset(-300)-timedelta-Index]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[pytz.FixedOffset(-300)-timedelta-Series]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[pytz.FixedOffset(-300)-timedelta-DataFrame]" time="0.020" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[pytz.FixedOffset(-300)-timedelta-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[pytz.FixedOffset(-300)-Timedelta-Index]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[pytz.FixedOffset(-300)-Timedelta-Series]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[pytz.FixedOffset(-300)-Timedelta-DataFrame]" time="0.018" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[pytz.FixedOffset(-300)-Timedelta-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[pytz.FixedOffset(-300)-timedelta64_0-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[pytz.FixedOffset(-300)-timedelta64_0-Series]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[pytz.FixedOffset(-300)-timedelta64_0-DataFrame]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[pytz.FixedOffset(-300)-timedelta64_0-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[pytz.FixedOffset(-300)-timedelta64_1-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[pytz.FixedOffset(-300)-timedelta64_1-Series]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[pytz.FixedOffset(-300)-timedelta64_1-DataFrame]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[pytz.FixedOffset(-300)-timedelta64_1-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[datetime.timezone.utc-Hour-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[datetime.timezone.utc-Hour-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[datetime.timezone.utc-Hour-DataFrame]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[datetime.timezone.utc-Hour-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[datetime.timezone.utc-Minute-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[datetime.timezone.utc-Minute-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[datetime.timezone.utc-Minute-DataFrame]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[datetime.timezone.utc-Minute-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[datetime.timezone.utc-timedelta-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[datetime.timezone.utc-timedelta-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[datetime.timezone.utc-timedelta-DataFrame]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[datetime.timezone.utc-timedelta-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[datetime.timezone.utc-Timedelta-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[datetime.timezone.utc-Timedelta-Series]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[datetime.timezone.utc-Timedelta-DataFrame]" time="0.019" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[datetime.timezone.utc-Timedelta-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[datetime.timezone.utc-timedelta64_0-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[datetime.timezone.utc-timedelta64_0-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[datetime.timezone.utc-timedelta64_0-DataFrame]" time="0.023" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[datetime.timezone.utc-timedelta64_0-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[datetime.timezone.utc-timedelta64_1-Index]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[datetime.timezone.utc-timedelta64_1-Series]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[datetime.timezone.utc-timedelta64_1-DataFrame]" time="0.021" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[datetime.timezone.utc-timedelta64_1-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[datetime.timezone(datetime.timedelta(seconds=3600))-Hour-Index]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[datetime.timezone(datetime.timedelta(seconds=3600))-Hour-Series]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[datetime.timezone(datetime.timedelta(seconds=3600))-Hour-DataFrame]" time="0.024" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[datetime.timezone(datetime.timedelta(seconds=3600))-Hour-array]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[datetime.timezone(datetime.timedelta(seconds=3600))-Minute-Index]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[datetime.timezone(datetime.timedelta(seconds=3600))-Minute-Series]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[datetime.timezone(datetime.timedelta(seconds=3600))-Minute-DataFrame]" time="0.026" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[datetime.timezone(datetime.timedelta(seconds=3600))-Minute-array]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[datetime.timezone(datetime.timedelta(seconds=3600))-timedelta-Index]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[datetime.timezone(datetime.timedelta(seconds=3600))-timedelta-Series]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[datetime.timezone(datetime.timedelta(seconds=3600))-timedelta-DataFrame]" time="0.020" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[datetime.timezone(datetime.timedelta(seconds=3600))-timedelta-array]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[datetime.timezone(datetime.timedelta(seconds=3600))-Timedelta-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[datetime.timezone(datetime.timedelta(seconds=3600))-Timedelta-Series]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[datetime.timezone(datetime.timedelta(seconds=3600))-Timedelta-DataFrame]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[datetime.timezone(datetime.timedelta(seconds=3600))-Timedelta-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[datetime.timezone(datetime.timedelta(seconds=3600))-timedelta64_0-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[datetime.timezone(datetime.timedelta(seconds=3600))-timedelta64_0-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[datetime.timezone(datetime.timedelta(seconds=3600))-timedelta64_0-DataFrame]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[datetime.timezone(datetime.timedelta(seconds=3600))-timedelta64_0-array]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[datetime.timezone(datetime.timedelta(seconds=3600))-timedelta64_1-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[datetime.timezone(datetime.timedelta(seconds=3600))-timedelta64_1-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[datetime.timezone(datetime.timedelta(seconds=3600))-timedelta64_1-DataFrame]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[datetime.timezone(datetime.timedelta(seconds=3600))-timedelta64_1-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Hour-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Hour-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Hour-DataFrame]" time="0.020" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Hour-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Minute-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Minute-Series]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Minute-DataFrame]" time="0.023" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Minute-array]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-timedelta-Index]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-timedelta-Series]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-timedelta-DataFrame]" time="0.020" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-timedelta-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Timedelta-Index]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Timedelta-Series]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Timedelta-DataFrame]" time="0.019" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Timedelta-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-timedelta64_0-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-timedelta64_0-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-timedelta64_0-DataFrame]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-timedelta64_0-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-timedelta64_1-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-timedelta64_1-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-timedelta64_1-DataFrame]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-timedelta64_1-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[zoneinfo.ZoneInfo(key='US/Pacific')-Hour-Index]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[zoneinfo.ZoneInfo(key='US/Pacific')-Hour-Series]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[zoneinfo.ZoneInfo(key='US/Pacific')-Hour-DataFrame]" time="0.024" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[zoneinfo.ZoneInfo(key='US/Pacific')-Hour-array]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[zoneinfo.ZoneInfo(key='US/Pacific')-Minute-Index]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[zoneinfo.ZoneInfo(key='US/Pacific')-Minute-Series]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[zoneinfo.ZoneInfo(key='US/Pacific')-Minute-DataFrame]" time="0.027" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[zoneinfo.ZoneInfo(key='US/Pacific')-Minute-array]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[zoneinfo.ZoneInfo(key='US/Pacific')-timedelta-Index]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[zoneinfo.ZoneInfo(key='US/Pacific')-timedelta-Series]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[zoneinfo.ZoneInfo(key='US/Pacific')-timedelta-DataFrame]" time="0.022" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[zoneinfo.ZoneInfo(key='US/Pacific')-timedelta-array]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[zoneinfo.ZoneInfo(key='US/Pacific')-Timedelta-Index]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[zoneinfo.ZoneInfo(key='US/Pacific')-Timedelta-Series]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[zoneinfo.ZoneInfo(key='US/Pacific')-Timedelta-DataFrame]" time="0.025" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[zoneinfo.ZoneInfo(key='US/Pacific')-Timedelta-array]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[zoneinfo.ZoneInfo(key='US/Pacific')-timedelta64_0-Index]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[zoneinfo.ZoneInfo(key='US/Pacific')-timedelta64_0-Series]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[zoneinfo.ZoneInfo(key='US/Pacific')-timedelta64_0-DataFrame]" time="0.022" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[zoneinfo.ZoneInfo(key='US/Pacific')-timedelta64_0-array]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[zoneinfo.ZoneInfo(key='US/Pacific')-timedelta64_1-Index]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[zoneinfo.ZoneInfo(key='US/Pacific')-timedelta64_1-Series]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[zoneinfo.ZoneInfo(key='US/Pacific')-timedelta64_1-DataFrame]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[zoneinfo.ZoneInfo(key='US/Pacific')-timedelta64_1-array]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[zoneinfo.ZoneInfo(key='UTC')-Hour-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[zoneinfo.ZoneInfo(key='UTC')-Hour-Series]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[zoneinfo.ZoneInfo(key='UTC')-Hour-DataFrame]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[zoneinfo.ZoneInfo(key='UTC')-Hour-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[zoneinfo.ZoneInfo(key='UTC')-Minute-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[zoneinfo.ZoneInfo(key='UTC')-Minute-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[zoneinfo.ZoneInfo(key='UTC')-Minute-DataFrame]" time="0.020" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[zoneinfo.ZoneInfo(key='UTC')-Minute-array]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[zoneinfo.ZoneInfo(key='UTC')-timedelta-Index]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[zoneinfo.ZoneInfo(key='UTC')-timedelta-Series]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[zoneinfo.ZoneInfo(key='UTC')-timedelta-DataFrame]" time="0.022" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[zoneinfo.ZoneInfo(key='UTC')-timedelta-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[zoneinfo.ZoneInfo(key='UTC')-Timedelta-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[zoneinfo.ZoneInfo(key='UTC')-Timedelta-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[zoneinfo.ZoneInfo(key='UTC')-Timedelta-DataFrame]" time="0.018" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[zoneinfo.ZoneInfo(key='UTC')-Timedelta-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[zoneinfo.ZoneInfo(key='UTC')-timedelta64_0-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[zoneinfo.ZoneInfo(key='UTC')-timedelta64_0-Series]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[zoneinfo.ZoneInfo(key='UTC')-timedelta64_0-DataFrame]" time="0.019" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[zoneinfo.ZoneInfo(key='UTC')-timedelta64_0-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[zoneinfo.ZoneInfo(key='UTC')-timedelta64_1-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[zoneinfo.ZoneInfo(key='UTC')-timedelta64_1-Series]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[zoneinfo.ZoneInfo(key='UTC')-timedelta64_1-DataFrame]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timedeltalike_scalar[zoneinfo.ZoneInfo(key='UTC')-timedelta64_1-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64_array_sub_dt_with_different_timezone[Index]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64_array_sub_dt_with_different_timezone[Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64_array_sub_dt_with_different_timezone[DataFrame]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64_array_sub_dt_with_different_timezone[array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64_array_sub_dt64_array_with_different_timezone[Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64_array_sub_dt64_array_with_different_timezone[Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64_array_sub_dt64_array_with_different_timezone[DataFrame]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64_array_sub_dt64_array_with_different_timezone[array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64_nat[Index-None]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64_nat[Index-'UTC']" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64_nat[Index-'US/Eastern']" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64_nat[Index-'Asia/Tokyo']" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64_nat[Index-'dateutil/US/Pacific']" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64_nat[Index-'dateutil/Asia/Singapore']" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64_nat[Index-'+01:15']" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64_nat[Index-'-02:15']" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64_nat[Index-'UTC+01:15']" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64_nat[Index-'UTC-02:15']" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64_nat[Index-tzutc()]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64_nat[Index-tzlocal()]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64_nat[Index-pytz.FixedOffset(300)]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64_nat[Index-&lt;UTC&gt;]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64_nat[Index-pytz.FixedOffset(-300)]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64_nat[Index-datetime.timezone.utc]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64_nat[Index-datetime.timezone(datetime.timedelta(seconds=3600))]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64_nat[Index-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64_nat[Index-zoneinfo.ZoneInfo(key='US/Pacific')]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64_nat[Index-zoneinfo.ZoneInfo(key='UTC')]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64_nat[Series-None]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64_nat[Series-'UTC']" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64_nat[Series-'US/Eastern']" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64_nat[Series-'Asia/Tokyo']" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64_nat[Series-'dateutil/US/Pacific']" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64_nat[Series-'dateutil/Asia/Singapore']" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64_nat[Series-'+01:15']" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64_nat[Series-'-02:15']" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64_nat[Series-'UTC+01:15']" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64_nat[Series-'UTC-02:15']" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64_nat[Series-tzutc()]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64_nat[Series-tzlocal()]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64_nat[Series-pytz.FixedOffset(300)]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64_nat[Series-&lt;UTC&gt;]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64_nat[Series-pytz.FixedOffset(-300)]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64_nat[Series-datetime.timezone.utc]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64_nat[Series-datetime.timezone(datetime.timedelta(seconds=3600))]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64_nat[Series-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64_nat[Series-zoneinfo.ZoneInfo(key='US/Pacific')]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64_nat[Series-zoneinfo.ZoneInfo(key='UTC')]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64_nat[DataFrame-None]" time="0.018" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64_nat[DataFrame-'UTC']" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64_nat[DataFrame-'US/Eastern']" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64_nat[DataFrame-'Asia/Tokyo']" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64_nat[DataFrame-'dateutil/US/Pacific']" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64_nat[DataFrame-'dateutil/Asia/Singapore']" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64_nat[DataFrame-'+01:15']" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64_nat[DataFrame-'-02:15']" time="0.020" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64_nat[DataFrame-'UTC+01:15']" time="0.018" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64_nat[DataFrame-'UTC-02:15']" time="0.018" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64_nat[DataFrame-tzutc()]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64_nat[DataFrame-tzlocal()]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64_nat[DataFrame-pytz.FixedOffset(300)]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64_nat[DataFrame-&lt;UTC&gt;]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64_nat[DataFrame-pytz.FixedOffset(-300)]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64_nat[DataFrame-datetime.timezone.utc]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64_nat[DataFrame-datetime.timezone(datetime.timedelta(seconds=3600))]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64_nat[DataFrame-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64_nat[DataFrame-zoneinfo.ZoneInfo(key='US/Pacific')]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64_nat[DataFrame-zoneinfo.ZoneInfo(key='UTC')]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64_nat[array-None]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64_nat[array-'UTC']" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64_nat[array-'US/Eastern']" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64_nat[array-'Asia/Tokyo']" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64_nat[array-'dateutil/US/Pacific']" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64_nat[array-'dateutil/Asia/Singapore']" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64_nat[array-'+01:15']" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64_nat[array-'-02:15']" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64_nat[array-'UTC+01:15']" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64_nat[array-'UTC-02:15']" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64_nat[array-tzutc()]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64_nat[array-tzlocal()]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64_nat[array-pytz.FixedOffset(300)]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64_nat[array-&lt;UTC&gt;]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64_nat[array-pytz.FixedOffset(-300)]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64_nat[array-datetime.timezone.utc]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64_nat[array-datetime.timezone(datetime.timedelta(seconds=3600))]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64_nat[array-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64_nat[array-zoneinfo.ZoneInfo(key='US/Pacific')]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64_nat[array-zoneinfo.ZoneInfo(key='UTC')]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64ndarray[None-Index]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64ndarray[None-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64ndarray[None-DataFrame]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64ndarray[None-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64ndarray['UTC'-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64ndarray['UTC'-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64ndarray['UTC'-DataFrame]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64ndarray['UTC'-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64ndarray['US/Eastern'-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64ndarray['US/Eastern'-Series]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64ndarray['US/Eastern'-DataFrame]" time="0.018" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64ndarray['US/Eastern'-array]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64ndarray['Asia/Tokyo'-Index]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64ndarray['Asia/Tokyo'-Series]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64ndarray['Asia/Tokyo'-DataFrame]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64ndarray['Asia/Tokyo'-array]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64ndarray['dateutil/US/Pacific'-Index]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64ndarray['dateutil/US/Pacific'-Series]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64ndarray['dateutil/US/Pacific'-DataFrame]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64ndarray['dateutil/US/Pacific'-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64ndarray['dateutil/Asia/Singapore'-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64ndarray['dateutil/Asia/Singapore'-Series]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64ndarray['dateutil/Asia/Singapore'-DataFrame]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64ndarray['dateutil/Asia/Singapore'-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64ndarray['+01:15'-Index]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64ndarray['+01:15'-Series]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64ndarray['+01:15'-DataFrame]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64ndarray['+01:15'-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64ndarray['-02:15'-Index]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64ndarray['-02:15'-Series]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64ndarray['-02:15'-DataFrame]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64ndarray['-02:15'-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64ndarray['UTC+01:15'-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64ndarray['UTC+01:15'-Series]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64ndarray['UTC+01:15'-DataFrame]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64ndarray['UTC+01:15'-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64ndarray['UTC-02:15'-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64ndarray['UTC-02:15'-Series]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64ndarray['UTC-02:15'-DataFrame]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64ndarray['UTC-02:15'-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64ndarray[tzutc()-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64ndarray[tzutc()-Series]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64ndarray[tzutc()-DataFrame]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64ndarray[tzutc()-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64ndarray[tzlocal()-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64ndarray[tzlocal()-Series]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64ndarray[tzlocal()-DataFrame]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64ndarray[tzlocal()-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64ndarray[pytz.FixedOffset(300)-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64ndarray[pytz.FixedOffset(300)-Series]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64ndarray[pytz.FixedOffset(300)-DataFrame]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64ndarray[pytz.FixedOffset(300)-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64ndarray[&lt;UTC&gt;-Index]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64ndarray[&lt;UTC&gt;-Series]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64ndarray[&lt;UTC&gt;-DataFrame]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64ndarray[&lt;UTC&gt;-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64ndarray[pytz.FixedOffset(-300)-Index]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64ndarray[pytz.FixedOffset(-300)-Series]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64ndarray[pytz.FixedOffset(-300)-DataFrame]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64ndarray[pytz.FixedOffset(-300)-array]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64ndarray[datetime.timezone.utc-Index]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64ndarray[datetime.timezone.utc-Series]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64ndarray[datetime.timezone.utc-DataFrame]" time="0.020" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64ndarray[datetime.timezone.utc-array]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64ndarray[datetime.timezone(datetime.timedelta(seconds=3600))-Index]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64ndarray[datetime.timezone(datetime.timedelta(seconds=3600))-Series]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64ndarray[datetime.timezone(datetime.timedelta(seconds=3600))-DataFrame]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64ndarray[datetime.timezone(datetime.timedelta(seconds=3600))-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64ndarray[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Index]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64ndarray[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Series]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64ndarray[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-DataFrame]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64ndarray[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64ndarray[zoneinfo.ZoneInfo(key='US/Pacific')-Index]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64ndarray[zoneinfo.ZoneInfo(key='US/Pacific')-Series]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64ndarray[zoneinfo.ZoneInfo(key='US/Pacific')-DataFrame]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64ndarray[zoneinfo.ZoneInfo(key='US/Pacific')-array]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64ndarray[zoneinfo.ZoneInfo(key='UTC')-Index]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64ndarray[zoneinfo.ZoneInfo(key='UTC')-Series]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64ndarray[zoneinfo.ZoneInfo(key='UTC')-DataFrame]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_td64ndarray[zoneinfo.ZoneInfo(key='UTC')-array]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_dtscalar[Index-ts0]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_dtscalar[Index-ts1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_dtscalar[Index-ts2]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_dtscalar[Index-ts3]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_dtscalar[Series-ts0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_dtscalar[Series-ts1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_dtscalar[Series-ts2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_dtscalar[Series-ts3]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_dtscalar[DataFrame-ts0]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_dtscalar[DataFrame-ts1]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_dtscalar[DataFrame-ts2]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_dtscalar[DataFrame-ts3]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_dtscalar[array-ts0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_dtscalar[array-ts1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_dtscalar[array-ts2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_dtscalar[array-ts3]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timestamp_tzaware[Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timestamp_tzaware[Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timestamp_tzaware[DataFrame]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_timestamp_tzaware[array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_NaT[Index-s]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_NaT[Index-ms]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_NaT[Index-us]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_NaT[Index-ns]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_NaT[Series-s]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_NaT[Series-ms]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_NaT[Series-us]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_NaT[Series-ns]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_NaT[DataFrame-s]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_NaT[DataFrame-ms]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_NaT[DataFrame-us]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_NaT[DataFrame-ns]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_NaT[array-s]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_NaT[array-ms]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_NaT[array-us]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_NaT[array-ns]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_dt64object_array[Index-None]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_dt64object_array[Index-'UTC']" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_dt64object_array[Index-'US/Eastern']" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_dt64object_array[Index-'Asia/Tokyo']" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_dt64object_array[Index-'dateutil/US/Pacific']" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_dt64object_array[Index-'dateutil/Asia/Singapore']" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_dt64object_array[Index-'+01:15']" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_dt64object_array[Index-'-02:15']" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_dt64object_array[Index-'UTC+01:15']" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_dt64object_array[Index-'UTC-02:15']" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_dt64object_array[Index-tzutc()]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_dt64object_array[Index-tzlocal()]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_dt64object_array[Index-pytz.FixedOffset(300)]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_dt64object_array[Index-&lt;UTC&gt;]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_dt64object_array[Index-pytz.FixedOffset(-300)]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_dt64object_array[Index-datetime.timezone.utc]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_dt64object_array[Index-datetime.timezone(datetime.timedelta(seconds=3600))]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_dt64object_array[Index-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_dt64object_array[Index-zoneinfo.ZoneInfo(key='US/Pacific')]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_dt64object_array[Index-zoneinfo.ZoneInfo(key='UTC')]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_dt64object_array[Series-None]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_dt64object_array[Series-'UTC']" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_dt64object_array[Series-'US/Eastern']" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_dt64object_array[Series-'Asia/Tokyo']" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_dt64object_array[Series-'dateutil/US/Pacific']" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_dt64object_array[Series-'dateutil/Asia/Singapore']" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_dt64object_array[Series-'+01:15']" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_dt64object_array[Series-'-02:15']" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_dt64object_array[Series-'UTC+01:15']" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_dt64object_array[Series-'UTC-02:15']" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_dt64object_array[Series-tzutc()]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_dt64object_array[Series-tzlocal()]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_dt64object_array[Series-pytz.FixedOffset(300)]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_dt64object_array[Series-&lt;UTC&gt;]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_dt64object_array[Series-pytz.FixedOffset(-300)]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_dt64object_array[Series-datetime.timezone.utc]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_dt64object_array[Series-datetime.timezone(datetime.timedelta(seconds=3600))]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_dt64object_array[Series-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_dt64object_array[Series-zoneinfo.ZoneInfo(key='US/Pacific')]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_dt64object_array[Series-zoneinfo.ZoneInfo(key='UTC')]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_dt64object_array[DataFrame-None]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_dt64object_array[DataFrame-'UTC']" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_dt64object_array[DataFrame-'US/Eastern']" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_dt64object_array[DataFrame-'Asia/Tokyo']" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_dt64object_array[DataFrame-'dateutil/US/Pacific']" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_dt64object_array[DataFrame-'dateutil/Asia/Singapore']" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_dt64object_array[DataFrame-'+01:15']" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_dt64object_array[DataFrame-'-02:15']" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_dt64object_array[DataFrame-'UTC+01:15']" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_dt64object_array[DataFrame-'UTC-02:15']" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_dt64object_array[DataFrame-tzutc()]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_dt64object_array[DataFrame-tzlocal()]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_dt64object_array[DataFrame-pytz.FixedOffset(300)]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_dt64object_array[DataFrame-&lt;UTC&gt;]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_dt64object_array[DataFrame-pytz.FixedOffset(-300)]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_dt64object_array[DataFrame-datetime.timezone.utc]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_dt64object_array[DataFrame-datetime.timezone(datetime.timedelta(seconds=3600))]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_dt64object_array[DataFrame-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_dt64object_array[DataFrame-zoneinfo.ZoneInfo(key='US/Pacific')]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_dt64object_array[DataFrame-zoneinfo.ZoneInfo(key='UTC')]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_dt64object_array[array-None]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_dt64object_array[array-'UTC']" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_dt64object_array[array-'US/Eastern']" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_dt64object_array[array-'Asia/Tokyo']" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_dt64object_array[array-'dateutil/US/Pacific']" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_dt64object_array[array-'dateutil/Asia/Singapore']" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_dt64object_array[array-'+01:15']" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_dt64object_array[array-'-02:15']" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_dt64object_array[array-'UTC+01:15']" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_dt64object_array[array-'UTC-02:15']" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_dt64object_array[array-tzutc()]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_dt64object_array[array-tzlocal()]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_dt64object_array[array-pytz.FixedOffset(300)]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_dt64object_array[array-&lt;UTC&gt;]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_dt64object_array[array-pytz.FixedOffset(-300)]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_dt64object_array[array-datetime.timezone.utc]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_dt64object_array[array-datetime.timezone(datetime.timedelta(seconds=3600))]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_dt64object_array[array-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_dt64object_array[array-zoneinfo.ZoneInfo(key='US/Pacific')]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_sub_dt64object_array[array-zoneinfo.ZoneInfo(key='UTC')]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_naive_sub_dt64ndarray[Index]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_naive_sub_dt64ndarray[Series]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_naive_sub_dt64ndarray[DataFrame]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_naive_sub_dt64ndarray[array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_aware_sub_dt64ndarray_raises['UTC'-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_aware_sub_dt64ndarray_raises['UTC'-Series]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_aware_sub_dt64ndarray_raises['UTC'-DataFrame]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_aware_sub_dt64ndarray_raises['UTC'-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_aware_sub_dt64ndarray_raises['US/Eastern'-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_aware_sub_dt64ndarray_raises['US/Eastern'-Series]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_aware_sub_dt64ndarray_raises['US/Eastern'-DataFrame]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_aware_sub_dt64ndarray_raises['US/Eastern'-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_aware_sub_dt64ndarray_raises['Asia/Tokyo'-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_aware_sub_dt64ndarray_raises['Asia/Tokyo'-Series]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_aware_sub_dt64ndarray_raises['Asia/Tokyo'-DataFrame]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_aware_sub_dt64ndarray_raises['Asia/Tokyo'-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_aware_sub_dt64ndarray_raises['dateutil/US/Pacific'-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_aware_sub_dt64ndarray_raises['dateutil/US/Pacific'-Series]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_aware_sub_dt64ndarray_raises['dateutil/US/Pacific'-DataFrame]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_aware_sub_dt64ndarray_raises['dateutil/US/Pacific'-array]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_aware_sub_dt64ndarray_raises['dateutil/Asia/Singapore'-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_aware_sub_dt64ndarray_raises['dateutil/Asia/Singapore'-Series]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_aware_sub_dt64ndarray_raises['dateutil/Asia/Singapore'-DataFrame]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_aware_sub_dt64ndarray_raises['dateutil/Asia/Singapore'-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_aware_sub_dt64ndarray_raises['+01:15'-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_aware_sub_dt64ndarray_raises['+01:15'-Series]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_aware_sub_dt64ndarray_raises['+01:15'-DataFrame]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_aware_sub_dt64ndarray_raises['+01:15'-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_aware_sub_dt64ndarray_raises['-02:15'-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_aware_sub_dt64ndarray_raises['-02:15'-Series]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_aware_sub_dt64ndarray_raises['-02:15'-DataFrame]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_aware_sub_dt64ndarray_raises['-02:15'-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_aware_sub_dt64ndarray_raises['UTC+01:15'-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_aware_sub_dt64ndarray_raises['UTC+01:15'-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_aware_sub_dt64ndarray_raises['UTC+01:15'-DataFrame]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_aware_sub_dt64ndarray_raises['UTC+01:15'-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_aware_sub_dt64ndarray_raises['UTC-02:15'-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_aware_sub_dt64ndarray_raises['UTC-02:15'-Series]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_aware_sub_dt64ndarray_raises['UTC-02:15'-DataFrame]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_aware_sub_dt64ndarray_raises['UTC-02:15'-array]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_aware_sub_dt64ndarray_raises[tzutc()-Index]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_aware_sub_dt64ndarray_raises[tzutc()-Series]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_aware_sub_dt64ndarray_raises[tzutc()-DataFrame]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_aware_sub_dt64ndarray_raises[tzutc()-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_aware_sub_dt64ndarray_raises[tzlocal()-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_aware_sub_dt64ndarray_raises[tzlocal()-Series]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_aware_sub_dt64ndarray_raises[tzlocal()-DataFrame]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_aware_sub_dt64ndarray_raises[tzlocal()-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_aware_sub_dt64ndarray_raises[pytz.FixedOffset(300)-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_aware_sub_dt64ndarray_raises[pytz.FixedOffset(300)-Series]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_aware_sub_dt64ndarray_raises[pytz.FixedOffset(300)-DataFrame]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_aware_sub_dt64ndarray_raises[pytz.FixedOffset(300)-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_aware_sub_dt64ndarray_raises[&lt;UTC&gt;-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_aware_sub_dt64ndarray_raises[&lt;UTC&gt;-Series]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_aware_sub_dt64ndarray_raises[&lt;UTC&gt;-DataFrame]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_aware_sub_dt64ndarray_raises[&lt;UTC&gt;-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_aware_sub_dt64ndarray_raises[pytz.FixedOffset(-300)-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_aware_sub_dt64ndarray_raises[pytz.FixedOffset(-300)-Series]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_aware_sub_dt64ndarray_raises[pytz.FixedOffset(-300)-DataFrame]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_aware_sub_dt64ndarray_raises[pytz.FixedOffset(-300)-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_aware_sub_dt64ndarray_raises[datetime.timezone.utc-Index]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_aware_sub_dt64ndarray_raises[datetime.timezone.utc-Series]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_aware_sub_dt64ndarray_raises[datetime.timezone.utc-DataFrame]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_aware_sub_dt64ndarray_raises[datetime.timezone.utc-array]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_aware_sub_dt64ndarray_raises[datetime.timezone(datetime.timedelta(seconds=3600))-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_aware_sub_dt64ndarray_raises[datetime.timezone(datetime.timedelta(seconds=3600))-Series]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_aware_sub_dt64ndarray_raises[datetime.timezone(datetime.timedelta(seconds=3600))-DataFrame]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_aware_sub_dt64ndarray_raises[datetime.timezone(datetime.timedelta(seconds=3600))-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_aware_sub_dt64ndarray_raises[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_aware_sub_dt64ndarray_raises[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Series]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_aware_sub_dt64ndarray_raises[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-DataFrame]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_aware_sub_dt64ndarray_raises[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_aware_sub_dt64ndarray_raises[zoneinfo.ZoneInfo(key='US/Pacific')-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_aware_sub_dt64ndarray_raises[zoneinfo.ZoneInfo(key='US/Pacific')-Series]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_aware_sub_dt64ndarray_raises[zoneinfo.ZoneInfo(key='US/Pacific')-DataFrame]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_aware_sub_dt64ndarray_raises[zoneinfo.ZoneInfo(key='US/Pacific')-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_aware_sub_dt64ndarray_raises[zoneinfo.ZoneInfo(key='UTC')-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_aware_sub_dt64ndarray_raises[zoneinfo.ZoneInfo(key='UTC')-Series]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_aware_sub_dt64ndarray_raises[zoneinfo.ZoneInfo(key='UTC')-DataFrame]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_aware_sub_dt64ndarray_raises[zoneinfo.ZoneInfo(key='UTC')-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_dtlike_raises[None-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_dtlike_raises[None-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_dtlike_raises[None-DataFrame]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_dtlike_raises[None-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_dtlike_raises['UTC'-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_dtlike_raises['UTC'-Series]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_dtlike_raises['UTC'-DataFrame]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_dtlike_raises['UTC'-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_dtlike_raises['US/Eastern'-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_dtlike_raises['US/Eastern'-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_dtlike_raises['US/Eastern'-DataFrame]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_dtlike_raises['US/Eastern'-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_dtlike_raises['Asia/Tokyo'-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_dtlike_raises['Asia/Tokyo'-Series]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_dtlike_raises['Asia/Tokyo'-DataFrame]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_dtlike_raises['Asia/Tokyo'-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_dtlike_raises['dateutil/US/Pacific'-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_dtlike_raises['dateutil/US/Pacific'-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_dtlike_raises['dateutil/US/Pacific'-DataFrame]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_dtlike_raises['dateutil/US/Pacific'-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_dtlike_raises['dateutil/Asia/Singapore'-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_dtlike_raises['dateutil/Asia/Singapore'-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_dtlike_raises['dateutil/Asia/Singapore'-DataFrame]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_dtlike_raises['dateutil/Asia/Singapore'-array]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_dtlike_raises['+01:15'-Index]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_dtlike_raises['+01:15'-Series]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_dtlike_raises['+01:15'-DataFrame]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_dtlike_raises['+01:15'-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_dtlike_raises['-02:15'-Index]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_dtlike_raises['-02:15'-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_dtlike_raises['-02:15'-DataFrame]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_dtlike_raises['-02:15'-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_dtlike_raises['UTC+01:15'-Index]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_dtlike_raises['UTC+01:15'-Series]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_dtlike_raises['UTC+01:15'-DataFrame]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_dtlike_raises['UTC+01:15'-array]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_dtlike_raises['UTC-02:15'-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_dtlike_raises['UTC-02:15'-Series]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_dtlike_raises['UTC-02:15'-DataFrame]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_dtlike_raises['UTC-02:15'-array]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_dtlike_raises[tzutc()-Index]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_dtlike_raises[tzutc()-Series]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_dtlike_raises[tzutc()-DataFrame]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_dtlike_raises[tzutc()-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_dtlike_raises[tzlocal()-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_dtlike_raises[tzlocal()-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_dtlike_raises[tzlocal()-DataFrame]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_dtlike_raises[tzlocal()-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_dtlike_raises[pytz.FixedOffset(300)-Index]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_dtlike_raises[pytz.FixedOffset(300)-Series]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_dtlike_raises[pytz.FixedOffset(300)-DataFrame]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_dtlike_raises[pytz.FixedOffset(300)-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_dtlike_raises[&lt;UTC&gt;-Index]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_dtlike_raises[&lt;UTC&gt;-Series]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_dtlike_raises[&lt;UTC&gt;-DataFrame]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_dtlike_raises[&lt;UTC&gt;-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_dtlike_raises[pytz.FixedOffset(-300)-Index]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_dtlike_raises[pytz.FixedOffset(-300)-Series]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_dtlike_raises[pytz.FixedOffset(-300)-DataFrame]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_dtlike_raises[pytz.FixedOffset(-300)-array]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_dtlike_raises[datetime.timezone.utc-Index]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_dtlike_raises[datetime.timezone.utc-Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_dtlike_raises[datetime.timezone.utc-DataFrame]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_dtlike_raises[datetime.timezone.utc-array]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_dtlike_raises[datetime.timezone(datetime.timedelta(seconds=3600))-Index]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_dtlike_raises[datetime.timezone(datetime.timedelta(seconds=3600))-Series]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_dtlike_raises[datetime.timezone(datetime.timedelta(seconds=3600))-DataFrame]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_dtlike_raises[datetime.timezone(datetime.timedelta(seconds=3600))-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_dtlike_raises[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Index]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_dtlike_raises[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Series]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_dtlike_raises[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-DataFrame]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_dtlike_raises[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-array]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_dtlike_raises[zoneinfo.ZoneInfo(key='US/Pacific')-Index]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_dtlike_raises[zoneinfo.ZoneInfo(key='US/Pacific')-Series]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_dtlike_raises[zoneinfo.ZoneInfo(key='US/Pacific')-DataFrame]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_dtlike_raises[zoneinfo.ZoneInfo(key='US/Pacific')-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_dtlike_raises[zoneinfo.ZoneInfo(key='UTC')-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_dtlike_raises[zoneinfo.ZoneInfo(key='UTC')-Series]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_dtlike_raises[zoneinfo.ZoneInfo(key='UTC')-DataFrame]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_dtlike_raises[zoneinfo.ZoneInfo(key='UTC')-array]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-None-None-h]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-None-None-D]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-None-None-W]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-None-None-2ME]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-None-None-MS]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-None-None-QE]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-None-None-B]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-None-None-None]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-None-uint8-h]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-None-uint8-D]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-None-uint8-W]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-None-uint8-2ME]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-None-uint8-MS]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-None-uint8-QE]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-None-uint8-B]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-None-uint8-None]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'UTC'-None-h]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'UTC'-None-D]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'UTC'-None-W]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'UTC'-None-2ME]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'UTC'-None-MS]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'UTC'-None-QE]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'UTC'-None-B]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'UTC'-None-None]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'UTC'-uint8-h]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'UTC'-uint8-D]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'UTC'-uint8-W]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'UTC'-uint8-2ME]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'UTC'-uint8-MS]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'UTC'-uint8-QE]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'UTC'-uint8-B]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'UTC'-uint8-None]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'US/Eastern'-None-h]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'US/Eastern'-None-D]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'US/Eastern'-None-W]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'US/Eastern'-None-2ME]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'US/Eastern'-None-MS]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'US/Eastern'-None-QE]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'US/Eastern'-None-B]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'US/Eastern'-None-None]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'US/Eastern'-uint8-h]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'US/Eastern'-uint8-D]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'US/Eastern'-uint8-W]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'US/Eastern'-uint8-2ME]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'US/Eastern'-uint8-MS]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'US/Eastern'-uint8-QE]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'US/Eastern'-uint8-B]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'US/Eastern'-uint8-None]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'Asia/Tokyo'-None-h]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'Asia/Tokyo'-None-D]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'Asia/Tokyo'-None-W]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'Asia/Tokyo'-None-2ME]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'Asia/Tokyo'-None-MS]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'Asia/Tokyo'-None-QE]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'Asia/Tokyo'-None-B]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'Asia/Tokyo'-None-None]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'Asia/Tokyo'-uint8-h]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'Asia/Tokyo'-uint8-D]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'Asia/Tokyo'-uint8-W]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'Asia/Tokyo'-uint8-2ME]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'Asia/Tokyo'-uint8-MS]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'Asia/Tokyo'-uint8-QE]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'Asia/Tokyo'-uint8-B]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'Asia/Tokyo'-uint8-None]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'dateutil/US/Pacific'-None-h]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'dateutil/US/Pacific'-None-D]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'dateutil/US/Pacific'-None-W]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'dateutil/US/Pacific'-None-2ME]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'dateutil/US/Pacific'-None-MS]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'dateutil/US/Pacific'-None-QE]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'dateutil/US/Pacific'-None-B]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'dateutil/US/Pacific'-None-None]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'dateutil/US/Pacific'-uint8-h]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'dateutil/US/Pacific'-uint8-D]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'dateutil/US/Pacific'-uint8-W]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'dateutil/US/Pacific'-uint8-2ME]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'dateutil/US/Pacific'-uint8-MS]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'dateutil/US/Pacific'-uint8-QE]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'dateutil/US/Pacific'-uint8-B]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'dateutil/US/Pacific'-uint8-None]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'dateutil/Asia/Singapore'-None-h]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'dateutil/Asia/Singapore'-None-D]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'dateutil/Asia/Singapore'-None-W]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'dateutil/Asia/Singapore'-None-2ME]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'dateutil/Asia/Singapore'-None-MS]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'dateutil/Asia/Singapore'-None-QE]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'dateutil/Asia/Singapore'-None-B]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'dateutil/Asia/Singapore'-None-None]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'dateutil/Asia/Singapore'-uint8-h]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'dateutil/Asia/Singapore'-uint8-D]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'dateutil/Asia/Singapore'-uint8-W]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'dateutil/Asia/Singapore'-uint8-2ME]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'dateutil/Asia/Singapore'-uint8-MS]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'dateutil/Asia/Singapore'-uint8-QE]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'dateutil/Asia/Singapore'-uint8-B]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'dateutil/Asia/Singapore'-uint8-None]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'+01:15'-None-h]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'+01:15'-None-D]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'+01:15'-None-W]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'+01:15'-None-2ME]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'+01:15'-None-MS]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'+01:15'-None-QE]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'+01:15'-None-B]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'+01:15'-None-None]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'+01:15'-uint8-h]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'+01:15'-uint8-D]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'+01:15'-uint8-W]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'+01:15'-uint8-2ME]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'+01:15'-uint8-MS]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'+01:15'-uint8-QE]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'+01:15'-uint8-B]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'+01:15'-uint8-None]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'-02:15'-None-h]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'-02:15'-None-D]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'-02:15'-None-W]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'-02:15'-None-2ME]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'-02:15'-None-MS]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'-02:15'-None-QE]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'-02:15'-None-B]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'-02:15'-None-None]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'-02:15'-uint8-h]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'-02:15'-uint8-D]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'-02:15'-uint8-W]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'-02:15'-uint8-2ME]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'-02:15'-uint8-MS]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'-02:15'-uint8-QE]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'-02:15'-uint8-B]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'-02:15'-uint8-None]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'UTC+01:15'-None-h]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'UTC+01:15'-None-D]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'UTC+01:15'-None-W]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'UTC+01:15'-None-2ME]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'UTC+01:15'-None-MS]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'UTC+01:15'-None-QE]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'UTC+01:15'-None-B]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'UTC+01:15'-None-None]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'UTC+01:15'-uint8-h]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'UTC+01:15'-uint8-D]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'UTC+01:15'-uint8-W]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'UTC+01:15'-uint8-2ME]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'UTC+01:15'-uint8-MS]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'UTC+01:15'-uint8-QE]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'UTC+01:15'-uint8-B]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'UTC+01:15'-uint8-None]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'UTC-02:15'-None-h]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'UTC-02:15'-None-D]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'UTC-02:15'-None-W]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'UTC-02:15'-None-2ME]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'UTC-02:15'-None-MS]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'UTC-02:15'-None-QE]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'UTC-02:15'-None-B]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'UTC-02:15'-None-None]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'UTC-02:15'-uint8-h]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'UTC-02:15'-uint8-D]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'UTC-02:15'-uint8-W]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'UTC-02:15'-uint8-2ME]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'UTC-02:15'-uint8-MS]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'UTC-02:15'-uint8-QE]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'UTC-02:15'-uint8-B]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-'UTC-02:15'-uint8-None]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-tzutc()-None-h]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-tzutc()-None-D]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-tzutc()-None-W]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-tzutc()-None-2ME]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-tzutc()-None-MS]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-tzutc()-None-QE]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-tzutc()-None-B]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-tzutc()-None-None]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-tzutc()-uint8-h]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-tzutc()-uint8-D]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-tzutc()-uint8-W]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-tzutc()-uint8-2ME]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-tzutc()-uint8-MS]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-tzutc()-uint8-QE]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-tzutc()-uint8-B]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-tzutc()-uint8-None]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-tzlocal()-None-h]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-tzlocal()-None-D]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-tzlocal()-None-W]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-tzlocal()-None-2ME]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-tzlocal()-None-MS]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-tzlocal()-None-QE]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-tzlocal()-None-B]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-tzlocal()-None-None]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-tzlocal()-uint8-h]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-tzlocal()-uint8-D]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-tzlocal()-uint8-W]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-tzlocal()-uint8-2ME]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-tzlocal()-uint8-MS]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-tzlocal()-uint8-QE]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-tzlocal()-uint8-B]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-tzlocal()-uint8-None]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-pytz.FixedOffset(300)-None-h]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-pytz.FixedOffset(300)-None-D]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-pytz.FixedOffset(300)-None-W]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-pytz.FixedOffset(300)-None-2ME]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-pytz.FixedOffset(300)-None-MS]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-pytz.FixedOffset(300)-None-QE]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-pytz.FixedOffset(300)-None-B]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-pytz.FixedOffset(300)-None-None]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-pytz.FixedOffset(300)-uint8-h]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-pytz.FixedOffset(300)-uint8-D]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-pytz.FixedOffset(300)-uint8-W]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-pytz.FixedOffset(300)-uint8-2ME]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-pytz.FixedOffset(300)-uint8-MS]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-pytz.FixedOffset(300)-uint8-QE]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-pytz.FixedOffset(300)-uint8-B]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-pytz.FixedOffset(300)-uint8-None]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-&lt;UTC&gt;-None-h]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-&lt;UTC&gt;-None-D]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-&lt;UTC&gt;-None-W]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-&lt;UTC&gt;-None-2ME]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-&lt;UTC&gt;-None-MS]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-&lt;UTC&gt;-None-QE]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-&lt;UTC&gt;-None-B]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-&lt;UTC&gt;-None-None]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-&lt;UTC&gt;-uint8-h]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-&lt;UTC&gt;-uint8-D]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-&lt;UTC&gt;-uint8-W]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-&lt;UTC&gt;-uint8-2ME]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-&lt;UTC&gt;-uint8-MS]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-&lt;UTC&gt;-uint8-QE]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-&lt;UTC&gt;-uint8-B]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-&lt;UTC&gt;-uint8-None]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-pytz.FixedOffset(-300)-None-h]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-pytz.FixedOffset(-300)-None-D]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-pytz.FixedOffset(-300)-None-W]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-pytz.FixedOffset(-300)-None-2ME]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-pytz.FixedOffset(-300)-None-MS]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-pytz.FixedOffset(-300)-None-QE]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-pytz.FixedOffset(-300)-None-B]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-pytz.FixedOffset(-300)-None-None]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-pytz.FixedOffset(-300)-uint8-h]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-pytz.FixedOffset(-300)-uint8-D]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-pytz.FixedOffset(-300)-uint8-W]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-pytz.FixedOffset(-300)-uint8-2ME]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-pytz.FixedOffset(-300)-uint8-MS]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-pytz.FixedOffset(-300)-uint8-QE]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-pytz.FixedOffset(-300)-uint8-B]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-pytz.FixedOffset(-300)-uint8-None]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-datetime.timezone.utc-None-h]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-datetime.timezone.utc-None-D]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-datetime.timezone.utc-None-W]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-datetime.timezone.utc-None-2ME]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-datetime.timezone.utc-None-MS]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-datetime.timezone.utc-None-QE]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-datetime.timezone.utc-None-B]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-datetime.timezone.utc-None-None]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-datetime.timezone.utc-uint8-h]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-datetime.timezone.utc-uint8-D]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-datetime.timezone.utc-uint8-W]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-datetime.timezone.utc-uint8-2ME]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-datetime.timezone.utc-uint8-MS]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-datetime.timezone.utc-uint8-QE]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-datetime.timezone.utc-uint8-B]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-datetime.timezone.utc-uint8-None]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-datetime.timezone(datetime.timedelta(seconds=3600))-None-h]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-datetime.timezone(datetime.timedelta(seconds=3600))-None-D]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-datetime.timezone(datetime.timedelta(seconds=3600))-None-W]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-datetime.timezone(datetime.timedelta(seconds=3600))-None-2ME]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-datetime.timezone(datetime.timedelta(seconds=3600))-None-MS]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-datetime.timezone(datetime.timedelta(seconds=3600))-None-QE]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-datetime.timezone(datetime.timedelta(seconds=3600))-None-B]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-datetime.timezone(datetime.timedelta(seconds=3600))-None-None]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-datetime.timezone(datetime.timedelta(seconds=3600))-uint8-h]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-datetime.timezone(datetime.timedelta(seconds=3600))-uint8-D]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-datetime.timezone(datetime.timedelta(seconds=3600))-uint8-W]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-datetime.timezone(datetime.timedelta(seconds=3600))-uint8-2ME]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-datetime.timezone(datetime.timedelta(seconds=3600))-uint8-MS]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-datetime.timezone(datetime.timedelta(seconds=3600))-uint8-QE]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-datetime.timezone(datetime.timedelta(seconds=3600))-uint8-B]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-datetime.timezone(datetime.timedelta(seconds=3600))-uint8-None]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-None-h]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-None-D]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-None-W]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-None-2ME]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-None-MS]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-None-QE]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-None-B]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-None-None]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-uint8-h]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-uint8-D]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-uint8-W]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-uint8-2ME]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-uint8-MS]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-uint8-QE]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-uint8-B]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-uint8-None]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-zoneinfo.ZoneInfo(key='US/Pacific')-None-h]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-zoneinfo.ZoneInfo(key='US/Pacific')-None-D]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-zoneinfo.ZoneInfo(key='US/Pacific')-None-W]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-zoneinfo.ZoneInfo(key='US/Pacific')-None-2ME]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-zoneinfo.ZoneInfo(key='US/Pacific')-None-MS]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-zoneinfo.ZoneInfo(key='US/Pacific')-None-QE]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-zoneinfo.ZoneInfo(key='US/Pacific')-None-B]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-zoneinfo.ZoneInfo(key='US/Pacific')-None-None]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-zoneinfo.ZoneInfo(key='US/Pacific')-uint8-h]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-zoneinfo.ZoneInfo(key='US/Pacific')-uint8-D]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-zoneinfo.ZoneInfo(key='US/Pacific')-uint8-W]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-zoneinfo.ZoneInfo(key='US/Pacific')-uint8-2ME]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-zoneinfo.ZoneInfo(key='US/Pacific')-uint8-MS]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-zoneinfo.ZoneInfo(key='US/Pacific')-uint8-QE]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-zoneinfo.ZoneInfo(key='US/Pacific')-uint8-B]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-zoneinfo.ZoneInfo(key='US/Pacific')-uint8-None]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-zoneinfo.ZoneInfo(key='UTC')-None-h]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-zoneinfo.ZoneInfo(key='UTC')-None-D]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-zoneinfo.ZoneInfo(key='UTC')-None-W]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-zoneinfo.ZoneInfo(key='UTC')-None-2ME]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-zoneinfo.ZoneInfo(key='UTC')-None-MS]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-zoneinfo.ZoneInfo(key='UTC')-None-QE]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-zoneinfo.ZoneInfo(key='UTC')-None-B]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-zoneinfo.ZoneInfo(key='UTC')-None-None]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-zoneinfo.ZoneInfo(key='UTC')-uint8-h]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-zoneinfo.ZoneInfo(key='UTC')-uint8-D]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-zoneinfo.ZoneInfo(key='UTC')-uint8-W]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-zoneinfo.ZoneInfo(key='UTC')-uint8-2ME]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-zoneinfo.ZoneInfo(key='UTC')-uint8-MS]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-zoneinfo.ZoneInfo(key='UTC')-uint8-QE]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-zoneinfo.ZoneInfo(key='UTC')-uint8-B]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[index-zoneinfo.ZoneInfo(key='UTC')-uint8-None]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-None-None-h]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-None-None-D]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-None-None-W]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-None-None-2ME]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-None-None-MS]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-None-None-QE]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-None-None-B]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-None-None-None]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-None-uint8-h]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-None-uint8-D]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-None-uint8-W]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-None-uint8-2ME]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-None-uint8-MS]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-None-uint8-QE]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-None-uint8-B]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-None-uint8-None]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'UTC'-None-h]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'UTC'-None-D]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'UTC'-None-W]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'UTC'-None-2ME]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'UTC'-None-MS]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'UTC'-None-QE]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'UTC'-None-B]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'UTC'-None-None]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'UTC'-uint8-h]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'UTC'-uint8-D]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'UTC'-uint8-W]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'UTC'-uint8-2ME]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'UTC'-uint8-MS]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'UTC'-uint8-QE]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'UTC'-uint8-B]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'UTC'-uint8-None]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'US/Eastern'-None-h]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'US/Eastern'-None-D]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'US/Eastern'-None-W]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'US/Eastern'-None-2ME]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'US/Eastern'-None-MS]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'US/Eastern'-None-QE]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'US/Eastern'-None-B]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'US/Eastern'-None-None]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'US/Eastern'-uint8-h]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'US/Eastern'-uint8-D]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'US/Eastern'-uint8-W]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'US/Eastern'-uint8-2ME]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'US/Eastern'-uint8-MS]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'US/Eastern'-uint8-QE]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'US/Eastern'-uint8-B]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'US/Eastern'-uint8-None]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'Asia/Tokyo'-None-h]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'Asia/Tokyo'-None-D]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'Asia/Tokyo'-None-W]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'Asia/Tokyo'-None-2ME]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'Asia/Tokyo'-None-MS]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'Asia/Tokyo'-None-QE]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'Asia/Tokyo'-None-B]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'Asia/Tokyo'-None-None]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'Asia/Tokyo'-uint8-h]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'Asia/Tokyo'-uint8-D]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'Asia/Tokyo'-uint8-W]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'Asia/Tokyo'-uint8-2ME]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'Asia/Tokyo'-uint8-MS]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'Asia/Tokyo'-uint8-QE]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'Asia/Tokyo'-uint8-B]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'Asia/Tokyo'-uint8-None]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'dateutil/US/Pacific'-None-h]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'dateutil/US/Pacific'-None-D]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'dateutil/US/Pacific'-None-W]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'dateutil/US/Pacific'-None-2ME]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'dateutil/US/Pacific'-None-MS]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'dateutil/US/Pacific'-None-QE]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'dateutil/US/Pacific'-None-B]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'dateutil/US/Pacific'-None-None]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'dateutil/US/Pacific'-uint8-h]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'dateutil/US/Pacific'-uint8-D]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'dateutil/US/Pacific'-uint8-W]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'dateutil/US/Pacific'-uint8-2ME]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'dateutil/US/Pacific'-uint8-MS]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'dateutil/US/Pacific'-uint8-QE]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'dateutil/US/Pacific'-uint8-B]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'dateutil/US/Pacific'-uint8-None]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'dateutil/Asia/Singapore'-None-h]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'dateutil/Asia/Singapore'-None-D]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'dateutil/Asia/Singapore'-None-W]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'dateutil/Asia/Singapore'-None-2ME]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'dateutil/Asia/Singapore'-None-MS]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'dateutil/Asia/Singapore'-None-QE]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'dateutil/Asia/Singapore'-None-B]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'dateutil/Asia/Singapore'-None-None]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'dateutil/Asia/Singapore'-uint8-h]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'dateutil/Asia/Singapore'-uint8-D]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'dateutil/Asia/Singapore'-uint8-W]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'dateutil/Asia/Singapore'-uint8-2ME]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'dateutil/Asia/Singapore'-uint8-MS]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'dateutil/Asia/Singapore'-uint8-QE]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'dateutil/Asia/Singapore'-uint8-B]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'dateutil/Asia/Singapore'-uint8-None]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'+01:15'-None-h]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'+01:15'-None-D]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'+01:15'-None-W]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'+01:15'-None-2ME]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'+01:15'-None-MS]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'+01:15'-None-QE]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'+01:15'-None-B]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'+01:15'-None-None]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'+01:15'-uint8-h]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'+01:15'-uint8-D]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'+01:15'-uint8-W]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'+01:15'-uint8-2ME]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'+01:15'-uint8-MS]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'+01:15'-uint8-QE]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'+01:15'-uint8-B]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'+01:15'-uint8-None]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'-02:15'-None-h]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'-02:15'-None-D]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'-02:15'-None-W]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'-02:15'-None-2ME]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'-02:15'-None-MS]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'-02:15'-None-QE]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'-02:15'-None-B]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'-02:15'-None-None]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'-02:15'-uint8-h]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'-02:15'-uint8-D]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'-02:15'-uint8-W]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'-02:15'-uint8-2ME]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'-02:15'-uint8-MS]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'-02:15'-uint8-QE]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'-02:15'-uint8-B]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'-02:15'-uint8-None]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'UTC+01:15'-None-h]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'UTC+01:15'-None-D]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'UTC+01:15'-None-W]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'UTC+01:15'-None-2ME]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'UTC+01:15'-None-MS]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'UTC+01:15'-None-QE]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'UTC+01:15'-None-B]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'UTC+01:15'-None-None]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'UTC+01:15'-uint8-h]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'UTC+01:15'-uint8-D]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'UTC+01:15'-uint8-W]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'UTC+01:15'-uint8-2ME]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'UTC+01:15'-uint8-MS]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'UTC+01:15'-uint8-QE]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'UTC+01:15'-uint8-B]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'UTC+01:15'-uint8-None]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'UTC-02:15'-None-h]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'UTC-02:15'-None-D]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'UTC-02:15'-None-W]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'UTC-02:15'-None-2ME]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'UTC-02:15'-None-MS]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'UTC-02:15'-None-QE]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'UTC-02:15'-None-B]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'UTC-02:15'-None-None]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'UTC-02:15'-uint8-h]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'UTC-02:15'-uint8-D]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'UTC-02:15'-uint8-W]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'UTC-02:15'-uint8-2ME]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'UTC-02:15'-uint8-MS]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'UTC-02:15'-uint8-QE]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'UTC-02:15'-uint8-B]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-'UTC-02:15'-uint8-None]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-tzutc()-None-h]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-tzutc()-None-D]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-tzutc()-None-W]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-tzutc()-None-2ME]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-tzutc()-None-MS]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-tzutc()-None-QE]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-tzutc()-None-B]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-tzutc()-None-None]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-tzutc()-uint8-h]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-tzutc()-uint8-D]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-tzutc()-uint8-W]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-tzutc()-uint8-2ME]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-tzutc()-uint8-MS]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-tzutc()-uint8-QE]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-tzutc()-uint8-B]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-tzutc()-uint8-None]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-tzlocal()-None-h]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-tzlocal()-None-D]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-tzlocal()-None-W]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-tzlocal()-None-2ME]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-tzlocal()-None-MS]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-tzlocal()-None-QE]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-tzlocal()-None-B]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-tzlocal()-None-None]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-tzlocal()-uint8-h]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-tzlocal()-uint8-D]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-tzlocal()-uint8-W]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-tzlocal()-uint8-2ME]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-tzlocal()-uint8-MS]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-tzlocal()-uint8-QE]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-tzlocal()-uint8-B]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-tzlocal()-uint8-None]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-pytz.FixedOffset(300)-None-h]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-pytz.FixedOffset(300)-None-D]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-pytz.FixedOffset(300)-None-W]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-pytz.FixedOffset(300)-None-2ME]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-pytz.FixedOffset(300)-None-MS]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-pytz.FixedOffset(300)-None-QE]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-pytz.FixedOffset(300)-None-B]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-pytz.FixedOffset(300)-None-None]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-pytz.FixedOffset(300)-uint8-h]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-pytz.FixedOffset(300)-uint8-D]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-pytz.FixedOffset(300)-uint8-W]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-pytz.FixedOffset(300)-uint8-2ME]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-pytz.FixedOffset(300)-uint8-MS]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-pytz.FixedOffset(300)-uint8-QE]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-pytz.FixedOffset(300)-uint8-B]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-pytz.FixedOffset(300)-uint8-None]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-&lt;UTC&gt;-None-h]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-&lt;UTC&gt;-None-D]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-&lt;UTC&gt;-None-W]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-&lt;UTC&gt;-None-2ME]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-&lt;UTC&gt;-None-MS]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-&lt;UTC&gt;-None-QE]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-&lt;UTC&gt;-None-B]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-&lt;UTC&gt;-None-None]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-&lt;UTC&gt;-uint8-h]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-&lt;UTC&gt;-uint8-D]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-&lt;UTC&gt;-uint8-W]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-&lt;UTC&gt;-uint8-2ME]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-&lt;UTC&gt;-uint8-MS]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-&lt;UTC&gt;-uint8-QE]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-&lt;UTC&gt;-uint8-B]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-&lt;UTC&gt;-uint8-None]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-pytz.FixedOffset(-300)-None-h]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-pytz.FixedOffset(-300)-None-D]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-pytz.FixedOffset(-300)-None-W]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-pytz.FixedOffset(-300)-None-2ME]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-pytz.FixedOffset(-300)-None-MS]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-pytz.FixedOffset(-300)-None-QE]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-pytz.FixedOffset(-300)-None-B]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-pytz.FixedOffset(-300)-None-None]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-pytz.FixedOffset(-300)-uint8-h]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-pytz.FixedOffset(-300)-uint8-D]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-pytz.FixedOffset(-300)-uint8-W]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-pytz.FixedOffset(-300)-uint8-2ME]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-pytz.FixedOffset(-300)-uint8-MS]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-pytz.FixedOffset(-300)-uint8-QE]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-pytz.FixedOffset(-300)-uint8-B]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-pytz.FixedOffset(-300)-uint8-None]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-datetime.timezone.utc-None-h]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-datetime.timezone.utc-None-D]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-datetime.timezone.utc-None-W]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-datetime.timezone.utc-None-2ME]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-datetime.timezone.utc-None-MS]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-datetime.timezone.utc-None-QE]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-datetime.timezone.utc-None-B]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-datetime.timezone.utc-None-None]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-datetime.timezone.utc-uint8-h]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-datetime.timezone.utc-uint8-D]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-datetime.timezone.utc-uint8-W]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-datetime.timezone.utc-uint8-2ME]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-datetime.timezone.utc-uint8-MS]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-datetime.timezone.utc-uint8-QE]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-datetime.timezone.utc-uint8-B]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-datetime.timezone.utc-uint8-None]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-datetime.timezone(datetime.timedelta(seconds=3600))-None-h]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-datetime.timezone(datetime.timedelta(seconds=3600))-None-D]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-datetime.timezone(datetime.timedelta(seconds=3600))-None-W]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-datetime.timezone(datetime.timedelta(seconds=3600))-None-2ME]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-datetime.timezone(datetime.timedelta(seconds=3600))-None-MS]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-datetime.timezone(datetime.timedelta(seconds=3600))-None-QE]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-datetime.timezone(datetime.timedelta(seconds=3600))-None-B]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-datetime.timezone(datetime.timedelta(seconds=3600))-None-None]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-datetime.timezone(datetime.timedelta(seconds=3600))-uint8-h]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-datetime.timezone(datetime.timedelta(seconds=3600))-uint8-D]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-datetime.timezone(datetime.timedelta(seconds=3600))-uint8-W]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-datetime.timezone(datetime.timedelta(seconds=3600))-uint8-2ME]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-datetime.timezone(datetime.timedelta(seconds=3600))-uint8-MS]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-datetime.timezone(datetime.timedelta(seconds=3600))-uint8-QE]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-datetime.timezone(datetime.timedelta(seconds=3600))-uint8-B]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-datetime.timezone(datetime.timedelta(seconds=3600))-uint8-None]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-None-h]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-None-D]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-None-W]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-None-2ME]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-None-MS]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-None-QE]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-None-B]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-None-None]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-uint8-h]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-uint8-D]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-uint8-W]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-uint8-2ME]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-uint8-MS]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-uint8-QE]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-uint8-B]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-uint8-None]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-zoneinfo.ZoneInfo(key='US/Pacific')-None-h]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-zoneinfo.ZoneInfo(key='US/Pacific')-None-D]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-zoneinfo.ZoneInfo(key='US/Pacific')-None-W]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-zoneinfo.ZoneInfo(key='US/Pacific')-None-2ME]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-zoneinfo.ZoneInfo(key='US/Pacific')-None-MS]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-zoneinfo.ZoneInfo(key='US/Pacific')-None-QE]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-zoneinfo.ZoneInfo(key='US/Pacific')-None-B]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-zoneinfo.ZoneInfo(key='US/Pacific')-None-None]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-zoneinfo.ZoneInfo(key='US/Pacific')-uint8-h]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-zoneinfo.ZoneInfo(key='US/Pacific')-uint8-D]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-zoneinfo.ZoneInfo(key='US/Pacific')-uint8-W]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-zoneinfo.ZoneInfo(key='US/Pacific')-uint8-2ME]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-zoneinfo.ZoneInfo(key='US/Pacific')-uint8-MS]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-zoneinfo.ZoneInfo(key='US/Pacific')-uint8-QE]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-zoneinfo.ZoneInfo(key='US/Pacific')-uint8-B]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-zoneinfo.ZoneInfo(key='US/Pacific')-uint8-None]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-zoneinfo.ZoneInfo(key='UTC')-None-h]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-zoneinfo.ZoneInfo(key='UTC')-None-D]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-zoneinfo.ZoneInfo(key='UTC')-None-W]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-zoneinfo.ZoneInfo(key='UTC')-None-2ME]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-zoneinfo.ZoneInfo(key='UTC')-None-MS]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-zoneinfo.ZoneInfo(key='UTC')-None-QE]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-zoneinfo.ZoneInfo(key='UTC')-None-B]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-zoneinfo.ZoneInfo(key='UTC')-None-None]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-zoneinfo.ZoneInfo(key='UTC')-uint8-h]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-zoneinfo.ZoneInfo(key='UTC')-uint8-D]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-zoneinfo.ZoneInfo(key='UTC')-uint8-W]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-zoneinfo.ZoneInfo(key='UTC')-uint8-2ME]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-zoneinfo.ZoneInfo(key='UTC')-uint8-MS]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-zoneinfo.ZoneInfo(key='UTC')-uint8-QE]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-zoneinfo.ZoneInfo(key='UTC')-uint8-B]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[series-zoneinfo.ZoneInfo(key='UTC')-uint8-None]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-None-None-h]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-None-None-D]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-None-None-W]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-None-None-2ME]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-None-None-MS]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-None-None-QE]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-None-None-B]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-None-None-None]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-None-uint8-h]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-None-uint8-D]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-None-uint8-W]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-None-uint8-2ME]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-None-uint8-MS]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-None-uint8-QE]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-None-uint8-B]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-None-uint8-None]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'UTC'-None-h]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'UTC'-None-D]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'UTC'-None-W]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'UTC'-None-2ME]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'UTC'-None-MS]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'UTC'-None-QE]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'UTC'-None-B]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'UTC'-None-None]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'UTC'-uint8-h]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'UTC'-uint8-D]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'UTC'-uint8-W]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'UTC'-uint8-2ME]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'UTC'-uint8-MS]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'UTC'-uint8-QE]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'UTC'-uint8-B]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'UTC'-uint8-None]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'US/Eastern'-None-h]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'US/Eastern'-None-D]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'US/Eastern'-None-W]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'US/Eastern'-None-2ME]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'US/Eastern'-None-MS]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'US/Eastern'-None-QE]" time="0.021" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'US/Eastern'-None-B]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'US/Eastern'-None-None]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'US/Eastern'-uint8-h]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'US/Eastern'-uint8-D]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'US/Eastern'-uint8-W]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'US/Eastern'-uint8-2ME]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'US/Eastern'-uint8-MS]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'US/Eastern'-uint8-QE]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'US/Eastern'-uint8-B]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'US/Eastern'-uint8-None]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'Asia/Tokyo'-None-h]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'Asia/Tokyo'-None-D]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'Asia/Tokyo'-None-W]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'Asia/Tokyo'-None-2ME]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'Asia/Tokyo'-None-MS]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'Asia/Tokyo'-None-QE]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'Asia/Tokyo'-None-B]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'Asia/Tokyo'-None-None]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'Asia/Tokyo'-uint8-h]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'Asia/Tokyo'-uint8-D]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'Asia/Tokyo'-uint8-W]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'Asia/Tokyo'-uint8-2ME]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'Asia/Tokyo'-uint8-MS]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'Asia/Tokyo'-uint8-QE]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'Asia/Tokyo'-uint8-B]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'Asia/Tokyo'-uint8-None]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'dateutil/US/Pacific'-None-h]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'dateutil/US/Pacific'-None-D]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'dateutil/US/Pacific'-None-W]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'dateutil/US/Pacific'-None-2ME]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'dateutil/US/Pacific'-None-MS]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'dateutil/US/Pacific'-None-QE]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'dateutil/US/Pacific'-None-B]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'dateutil/US/Pacific'-None-None]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'dateutil/US/Pacific'-uint8-h]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'dateutil/US/Pacific'-uint8-D]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'dateutil/US/Pacific'-uint8-W]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'dateutil/US/Pacific'-uint8-2ME]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'dateutil/US/Pacific'-uint8-MS]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'dateutil/US/Pacific'-uint8-QE]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'dateutil/US/Pacific'-uint8-B]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'dateutil/US/Pacific'-uint8-None]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'dateutil/Asia/Singapore'-None-h]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'dateutil/Asia/Singapore'-None-D]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'dateutil/Asia/Singapore'-None-W]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'dateutil/Asia/Singapore'-None-2ME]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'dateutil/Asia/Singapore'-None-MS]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'dateutil/Asia/Singapore'-None-QE]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'dateutil/Asia/Singapore'-None-B]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'dateutil/Asia/Singapore'-None-None]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'dateutil/Asia/Singapore'-uint8-h]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'dateutil/Asia/Singapore'-uint8-D]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'dateutil/Asia/Singapore'-uint8-W]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'dateutil/Asia/Singapore'-uint8-2ME]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'dateutil/Asia/Singapore'-uint8-MS]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'dateutil/Asia/Singapore'-uint8-QE]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'dateutil/Asia/Singapore'-uint8-B]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'dateutil/Asia/Singapore'-uint8-None]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'+01:15'-None-h]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'+01:15'-None-D]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'+01:15'-None-W]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'+01:15'-None-2ME]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'+01:15'-None-MS]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'+01:15'-None-QE]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'+01:15'-None-B]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'+01:15'-None-None]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'+01:15'-uint8-h]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'+01:15'-uint8-D]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'+01:15'-uint8-W]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'+01:15'-uint8-2ME]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'+01:15'-uint8-MS]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'+01:15'-uint8-QE]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'+01:15'-uint8-B]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'+01:15'-uint8-None]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'-02:15'-None-h]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'-02:15'-None-D]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'-02:15'-None-W]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'-02:15'-None-2ME]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'-02:15'-None-MS]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'-02:15'-None-QE]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'-02:15'-None-B]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'-02:15'-None-None]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'-02:15'-uint8-h]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'-02:15'-uint8-D]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'-02:15'-uint8-W]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'-02:15'-uint8-2ME]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'-02:15'-uint8-MS]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'-02:15'-uint8-QE]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'-02:15'-uint8-B]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'-02:15'-uint8-None]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'UTC+01:15'-None-h]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'UTC+01:15'-None-D]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'UTC+01:15'-None-W]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'UTC+01:15'-None-2ME]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'UTC+01:15'-None-MS]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'UTC+01:15'-None-QE]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'UTC+01:15'-None-B]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'UTC+01:15'-None-None]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'UTC+01:15'-uint8-h]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'UTC+01:15'-uint8-D]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'UTC+01:15'-uint8-W]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'UTC+01:15'-uint8-2ME]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'UTC+01:15'-uint8-MS]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'UTC+01:15'-uint8-QE]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'UTC+01:15'-uint8-B]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'UTC+01:15'-uint8-None]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'UTC-02:15'-None-h]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'UTC-02:15'-None-D]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'UTC-02:15'-None-W]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'UTC-02:15'-None-2ME]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'UTC-02:15'-None-MS]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'UTC-02:15'-None-QE]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'UTC-02:15'-None-B]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'UTC-02:15'-None-None]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'UTC-02:15'-uint8-h]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'UTC-02:15'-uint8-D]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'UTC-02:15'-uint8-W]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'UTC-02:15'-uint8-2ME]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'UTC-02:15'-uint8-MS]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'UTC-02:15'-uint8-QE]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'UTC-02:15'-uint8-B]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-'UTC-02:15'-uint8-None]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-tzutc()-None-h]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-tzutc()-None-D]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-tzutc()-None-W]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-tzutc()-None-2ME]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-tzutc()-None-MS]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-tzutc()-None-QE]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-tzutc()-None-B]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-tzutc()-None-None]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-tzutc()-uint8-h]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-tzutc()-uint8-D]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-tzutc()-uint8-W]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-tzutc()-uint8-2ME]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-tzutc()-uint8-MS]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-tzutc()-uint8-QE]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-tzutc()-uint8-B]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-tzutc()-uint8-None]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-tzlocal()-None-h]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-tzlocal()-None-D]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-tzlocal()-None-W]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-tzlocal()-None-2ME]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-tzlocal()-None-MS]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-tzlocal()-None-QE]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-tzlocal()-None-B]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-tzlocal()-None-None]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-tzlocal()-uint8-h]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-tzlocal()-uint8-D]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-tzlocal()-uint8-W]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-tzlocal()-uint8-2ME]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-tzlocal()-uint8-MS]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-tzlocal()-uint8-QE]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-tzlocal()-uint8-B]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-tzlocal()-uint8-None]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-pytz.FixedOffset(300)-None-h]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-pytz.FixedOffset(300)-None-D]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-pytz.FixedOffset(300)-None-W]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-pytz.FixedOffset(300)-None-2ME]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-pytz.FixedOffset(300)-None-MS]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-pytz.FixedOffset(300)-None-QE]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-pytz.FixedOffset(300)-None-B]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-pytz.FixedOffset(300)-None-None]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-pytz.FixedOffset(300)-uint8-h]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-pytz.FixedOffset(300)-uint8-D]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-pytz.FixedOffset(300)-uint8-W]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-pytz.FixedOffset(300)-uint8-2ME]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-pytz.FixedOffset(300)-uint8-MS]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-pytz.FixedOffset(300)-uint8-QE]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-pytz.FixedOffset(300)-uint8-B]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-pytz.FixedOffset(300)-uint8-None]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-&lt;UTC&gt;-None-h]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-&lt;UTC&gt;-None-D]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-&lt;UTC&gt;-None-W]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-&lt;UTC&gt;-None-2ME]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-&lt;UTC&gt;-None-MS]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-&lt;UTC&gt;-None-QE]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-&lt;UTC&gt;-None-B]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-&lt;UTC&gt;-None-None]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-&lt;UTC&gt;-uint8-h]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-&lt;UTC&gt;-uint8-D]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-&lt;UTC&gt;-uint8-W]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-&lt;UTC&gt;-uint8-2ME]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-&lt;UTC&gt;-uint8-MS]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-&lt;UTC&gt;-uint8-QE]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-&lt;UTC&gt;-uint8-B]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-&lt;UTC&gt;-uint8-None]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-pytz.FixedOffset(-300)-None-h]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-pytz.FixedOffset(-300)-None-D]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-pytz.FixedOffset(-300)-None-W]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-pytz.FixedOffset(-300)-None-2ME]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-pytz.FixedOffset(-300)-None-MS]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-pytz.FixedOffset(-300)-None-QE]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-pytz.FixedOffset(-300)-None-B]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-pytz.FixedOffset(-300)-None-None]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-pytz.FixedOffset(-300)-uint8-h]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-pytz.FixedOffset(-300)-uint8-D]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-pytz.FixedOffset(-300)-uint8-W]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-pytz.FixedOffset(-300)-uint8-2ME]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-pytz.FixedOffset(-300)-uint8-MS]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-pytz.FixedOffset(-300)-uint8-QE]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-pytz.FixedOffset(-300)-uint8-B]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-pytz.FixedOffset(-300)-uint8-None]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-datetime.timezone.utc-None-h]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-datetime.timezone.utc-None-D]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-datetime.timezone.utc-None-W]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-datetime.timezone.utc-None-2ME]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-datetime.timezone.utc-None-MS]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-datetime.timezone.utc-None-QE]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-datetime.timezone.utc-None-B]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-datetime.timezone.utc-None-None]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-datetime.timezone.utc-uint8-h]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-datetime.timezone.utc-uint8-D]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-datetime.timezone.utc-uint8-W]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-datetime.timezone.utc-uint8-2ME]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-datetime.timezone.utc-uint8-MS]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-datetime.timezone.utc-uint8-QE]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-datetime.timezone.utc-uint8-B]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-datetime.timezone.utc-uint8-None]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-datetime.timezone(datetime.timedelta(seconds=3600))-None-h]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-datetime.timezone(datetime.timedelta(seconds=3600))-None-D]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-datetime.timezone(datetime.timedelta(seconds=3600))-None-W]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-datetime.timezone(datetime.timedelta(seconds=3600))-None-2ME]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-datetime.timezone(datetime.timedelta(seconds=3600))-None-MS]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-datetime.timezone(datetime.timedelta(seconds=3600))-None-QE]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-datetime.timezone(datetime.timedelta(seconds=3600))-None-B]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-datetime.timezone(datetime.timedelta(seconds=3600))-None-None]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-datetime.timezone(datetime.timedelta(seconds=3600))-uint8-h]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-datetime.timezone(datetime.timedelta(seconds=3600))-uint8-D]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-datetime.timezone(datetime.timedelta(seconds=3600))-uint8-W]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-datetime.timezone(datetime.timedelta(seconds=3600))-uint8-2ME]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-datetime.timezone(datetime.timedelta(seconds=3600))-uint8-MS]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-datetime.timezone(datetime.timedelta(seconds=3600))-uint8-QE]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-datetime.timezone(datetime.timedelta(seconds=3600))-uint8-B]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-datetime.timezone(datetime.timedelta(seconds=3600))-uint8-None]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-None-h]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-None-D]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-None-W]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-None-2ME]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-None-MS]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-None-QE]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-None-B]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-None-None]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-uint8-h]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-uint8-D]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-uint8-W]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-uint8-2ME]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-uint8-MS]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-uint8-QE]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-uint8-B]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-uint8-None]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-zoneinfo.ZoneInfo(key='US/Pacific')-None-h]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-zoneinfo.ZoneInfo(key='US/Pacific')-None-D]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-zoneinfo.ZoneInfo(key='US/Pacific')-None-W]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-zoneinfo.ZoneInfo(key='US/Pacific')-None-2ME]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-zoneinfo.ZoneInfo(key='US/Pacific')-None-MS]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-zoneinfo.ZoneInfo(key='US/Pacific')-None-QE]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-zoneinfo.ZoneInfo(key='US/Pacific')-None-B]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-zoneinfo.ZoneInfo(key='US/Pacific')-None-None]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-zoneinfo.ZoneInfo(key='US/Pacific')-uint8-h]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-zoneinfo.ZoneInfo(key='US/Pacific')-uint8-D]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-zoneinfo.ZoneInfo(key='US/Pacific')-uint8-W]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-zoneinfo.ZoneInfo(key='US/Pacific')-uint8-2ME]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-zoneinfo.ZoneInfo(key='US/Pacific')-uint8-MS]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-zoneinfo.ZoneInfo(key='US/Pacific')-uint8-QE]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-zoneinfo.ZoneInfo(key='US/Pacific')-uint8-B]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-zoneinfo.ZoneInfo(key='US/Pacific')-uint8-None]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-zoneinfo.ZoneInfo(key='UTC')-None-h]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-zoneinfo.ZoneInfo(key='UTC')-None-D]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-zoneinfo.ZoneInfo(key='UTC')-None-W]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-zoneinfo.ZoneInfo(key='UTC')-None-2ME]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-zoneinfo.ZoneInfo(key='UTC')-None-MS]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-zoneinfo.ZoneInfo(key='UTC')-None-QE]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-zoneinfo.ZoneInfo(key='UTC')-None-B]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-zoneinfo.ZoneInfo(key='UTC')-None-None]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-zoneinfo.ZoneInfo(key='UTC')-uint8-h]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-zoneinfo.ZoneInfo(key='UTC')-uint8-D]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-zoneinfo.ZoneInfo(key='UTC')-uint8-W]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-zoneinfo.ZoneInfo(key='UTC')-uint8-2ME]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-zoneinfo.ZoneInfo(key='UTC')-uint8-MS]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-zoneinfo.ZoneInfo(key='UTC')-uint8-QE]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-zoneinfo.ZoneInfo(key='UTC')-uint8-B]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_intlike[array-zoneinfo.ZoneInfo(key='UTC')-uint8-None]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_invalid[Index-None-3.14]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_invalid[Index-None-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_invalid[Index-None-other2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_invalid[Index-None-other3]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_invalid[Index-D-3.14]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_invalid[Index-D-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_invalid[Index-D-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_invalid[Index-D-other3]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_invalid[Series-None-3.14]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_invalid[Series-None-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_invalid[Series-None-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_invalid[Series-None-other3]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_invalid[Series-D-3.14]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_invalid[Series-D-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_invalid[Series-D-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_invalid[Series-D-other3]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_invalid[DataFrame-None-3.14]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_invalid[DataFrame-None-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_invalid[DataFrame-None-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_invalid[DataFrame-None-other3]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_invalid[DataFrame-D-3.14]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_invalid[DataFrame-D-other1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_invalid[DataFrame-D-other2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_invalid[DataFrame-D-other3]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_invalid[array-None-3.14]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_invalid[array-None-other1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_invalid[array-None-other2]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_invalid[array-None-other3]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_invalid[array-D-3.14]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_invalid[array-D-other1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_invalid[array-D-other2]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_invalid[array-D-other3]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[Index-Index-None-D]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[Index-Index-None-W]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[Index-Index-None-Q]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[Index-Index-None-h]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[Index-Index-D-D]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[Index-Index-D-W]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[Index-Index-D-Q]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[Index-Index-D-h]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[Index-Series-None-D]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[Index-Series-None-W]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[Index-Series-None-Q]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[Index-Series-None-h]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[Index-Series-D-D]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[Index-Series-D-W]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[Index-Series-D-Q]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[Index-Series-D-h]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[Index-DataFrame-None-D]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[Index-DataFrame-None-W]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[Index-DataFrame-None-Q]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[Index-DataFrame-None-h]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[Index-DataFrame-D-D]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[Index-DataFrame-D-W]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[Index-DataFrame-D-Q]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[Index-DataFrame-D-h]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[Index-array-None-D]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[Index-array-None-W]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[Index-array-None-Q]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[Index-array-None-h]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[Index-array-D-D]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[Index-array-D-W]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[Index-array-D-Q]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[Index-array-D-h]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[Series-Index-None-D]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[Series-Index-None-W]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[Series-Index-None-Q]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[Series-Index-None-h]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[Series-Index-D-D]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[Series-Index-D-W]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[Series-Index-D-Q]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[Series-Index-D-h]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[Series-Series-None-D]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[Series-Series-None-W]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[Series-Series-None-Q]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[Series-Series-None-h]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[Series-Series-D-D]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[Series-Series-D-W]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[Series-Series-D-Q]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[Series-Series-D-h]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[Series-DataFrame-None-D]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[Series-DataFrame-None-W]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[Series-DataFrame-None-Q]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[Series-DataFrame-None-h]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[Series-DataFrame-D-D]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[Series-DataFrame-D-W]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[Series-DataFrame-D-Q]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[Series-DataFrame-D-h]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[Series-array-None-D]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[Series-array-None-W]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[Series-array-None-Q]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[Series-array-None-h]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[Series-array-D-D]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[Series-array-D-W]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[Series-array-D-Q]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[Series-array-D-h]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[DataFrame-Index-None-D]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[DataFrame-Index-None-W]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[DataFrame-Index-None-Q]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[DataFrame-Index-None-h]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[DataFrame-Index-D-D]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[DataFrame-Index-D-W]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[DataFrame-Index-D-Q]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[DataFrame-Index-D-h]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[DataFrame-Series-None-D]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[DataFrame-Series-None-W]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[DataFrame-Series-None-Q]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[DataFrame-Series-None-h]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[DataFrame-Series-D-D]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[DataFrame-Series-D-W]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[DataFrame-Series-D-Q]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[DataFrame-Series-D-h]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[DataFrame-DataFrame-None-D]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[DataFrame-DataFrame-None-W]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[DataFrame-DataFrame-None-Q]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[DataFrame-DataFrame-None-h]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[DataFrame-DataFrame-D-D]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[DataFrame-DataFrame-D-W]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[DataFrame-DataFrame-D-Q]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[DataFrame-DataFrame-D-h]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[DataFrame-array-None-D]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[DataFrame-array-None-W]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[DataFrame-array-None-Q]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[DataFrame-array-None-h]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[DataFrame-array-D-D]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[DataFrame-array-D-W]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[DataFrame-array-D-Q]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[DataFrame-array-D-h]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[array-Index-None-D]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[array-Index-None-W]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[array-Index-None-Q]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[array-Index-None-h]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[array-Index-D-D]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[array-Index-D-W]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[array-Index-D-Q]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[array-Index-D-h]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[array-Series-None-D]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[array-Series-None-W]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[array-Series-None-Q]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[array-Series-None-h]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[array-Series-D-D]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[array-Series-D-W]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[array-Series-D-Q]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[array-Series-D-h]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[array-DataFrame-None-D]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[array-DataFrame-None-W]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[array-DataFrame-None-Q]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[array-DataFrame-None-h]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[array-DataFrame-D-D]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[array-DataFrame-D-W]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[array-DataFrame-D-Q]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[array-DataFrame-D-h]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[array-array-None-D]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[array-array-None-W]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[array-array-None-Q]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[array-array-None-h]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[array-array-D-D]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[array-array-D-W]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[array-array-D-Q]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_add_sub_parr[array-array-D-h]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_time_objects_raises[Index-None]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_time_objects_raises[Index-'UTC']" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_time_objects_raises[Index-'US/Eastern']" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_time_objects_raises[Index-'Asia/Tokyo']" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_time_objects_raises[Index-'dateutil/US/Pacific']" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_time_objects_raises[Index-'dateutil/Asia/Singapore']" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_time_objects_raises[Index-'+01:15']" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_time_objects_raises[Index-'-02:15']" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_time_objects_raises[Index-'UTC+01:15']" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_time_objects_raises[Index-'UTC-02:15']" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_time_objects_raises[Index-tzutc()]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_time_objects_raises[Index-tzlocal()]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_time_objects_raises[Index-pytz.FixedOffset(300)]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_time_objects_raises[Index-&lt;UTC&gt;]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_time_objects_raises[Index-pytz.FixedOffset(-300)]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_time_objects_raises[Index-datetime.timezone.utc]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_time_objects_raises[Index-datetime.timezone(datetime.timedelta(seconds=3600))]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_time_objects_raises[Index-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_time_objects_raises[Index-zoneinfo.ZoneInfo(key='US/Pacific')]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_time_objects_raises[Index-zoneinfo.ZoneInfo(key='UTC')]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_time_objects_raises[Series-None]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_time_objects_raises[Series-'UTC']" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_time_objects_raises[Series-'US/Eastern']" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_time_objects_raises[Series-'Asia/Tokyo']" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_time_objects_raises[Series-'dateutil/US/Pacific']" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_time_objects_raises[Series-'dateutil/Asia/Singapore']" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_time_objects_raises[Series-'+01:15']" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_time_objects_raises[Series-'-02:15']" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_time_objects_raises[Series-'UTC+01:15']" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_time_objects_raises[Series-'UTC-02:15']" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_time_objects_raises[Series-tzutc()]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_time_objects_raises[Series-tzlocal()]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_time_objects_raises[Series-pytz.FixedOffset(300)]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_time_objects_raises[Series-&lt;UTC&gt;]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_time_objects_raises[Series-pytz.FixedOffset(-300)]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_time_objects_raises[Series-datetime.timezone.utc]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_time_objects_raises[Series-datetime.timezone(datetime.timedelta(seconds=3600))]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_time_objects_raises[Series-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_time_objects_raises[Series-zoneinfo.ZoneInfo(key='US/Pacific')]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_time_objects_raises[Series-zoneinfo.ZoneInfo(key='UTC')]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_time_objects_raises[DataFrame-None]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_time_objects_raises[DataFrame-'UTC']" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_time_objects_raises[DataFrame-'US/Eastern']" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_time_objects_raises[DataFrame-'Asia/Tokyo']" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_time_objects_raises[DataFrame-'dateutil/US/Pacific']" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_time_objects_raises[DataFrame-'dateutil/Asia/Singapore']" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_time_objects_raises[DataFrame-'+01:15']" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_time_objects_raises[DataFrame-'-02:15']" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_time_objects_raises[DataFrame-'UTC+01:15']" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_time_objects_raises[DataFrame-'UTC-02:15']" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_time_objects_raises[DataFrame-tzutc()]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_time_objects_raises[DataFrame-tzlocal()]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_time_objects_raises[DataFrame-pytz.FixedOffset(300)]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_time_objects_raises[DataFrame-&lt;UTC&gt;]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_time_objects_raises[DataFrame-pytz.FixedOffset(-300)]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_time_objects_raises[DataFrame-datetime.timezone.utc]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_time_objects_raises[DataFrame-datetime.timezone(datetime.timedelta(seconds=3600))]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_time_objects_raises[DataFrame-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_time_objects_raises[DataFrame-zoneinfo.ZoneInfo(key='US/Pacific')]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_time_objects_raises[DataFrame-zoneinfo.ZoneInfo(key='UTC')]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_time_objects_raises[array-None]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_time_objects_raises[array-'UTC']" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_time_objects_raises[array-'US/Eastern']" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_time_objects_raises[array-'Asia/Tokyo']" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_time_objects_raises[array-'dateutil/US/Pacific']" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_time_objects_raises[array-'dateutil/Asia/Singapore']" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_time_objects_raises[array-'+01:15']" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_time_objects_raises[array-'-02:15']" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_time_objects_raises[array-'UTC+01:15']" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_time_objects_raises[array-'UTC-02:15']" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_time_objects_raises[array-tzutc()]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_time_objects_raises[array-tzlocal()]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_time_objects_raises[array-pytz.FixedOffset(300)]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_time_objects_raises[array-&lt;UTC&gt;]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_time_objects_raises[array-pytz.FixedOffset(-300)]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_time_objects_raises[array-datetime.timezone.utc]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_time_objects_raises[array-datetime.timezone(datetime.timedelta(seconds=3600))]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_time_objects_raises[array-datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_time_objects_raises[array-zoneinfo.ZoneInfo(key='US/Pacific')]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64arr_addsub_time_objects_raises[array-zoneinfo.ZoneInfo(key='UTC')]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64_mul_div_numeric_invalid[Index-1-dt64_series0]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64_mul_div_numeric_invalid[Index-1-dt64_series1]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64_mul_div_numeric_invalid[Index-1-dt64_series2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64_mul_div_numeric_invalid[Index-1.0-dt64_series0]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64_mul_div_numeric_invalid[Index-1.0-dt64_series1]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64_mul_div_numeric_invalid[Index-1.0-dt64_series2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64_mul_div_numeric_invalid[Index-one2-dt64_series0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64_mul_div_numeric_invalid[Index-one2-dt64_series1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64_mul_div_numeric_invalid[Index-one2-dt64_series2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64_mul_div_numeric_invalid[Series-1-dt64_series0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64_mul_div_numeric_invalid[Series-1-dt64_series1]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64_mul_div_numeric_invalid[Series-1-dt64_series2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64_mul_div_numeric_invalid[Series-1.0-dt64_series0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64_mul_div_numeric_invalid[Series-1.0-dt64_series1]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64_mul_div_numeric_invalid[Series-1.0-dt64_series2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64_mul_div_numeric_invalid[Series-one2-dt64_series0]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64_mul_div_numeric_invalid[Series-one2-dt64_series1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64_mul_div_numeric_invalid[Series-one2-dt64_series2]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64_mul_div_numeric_invalid[DataFrame-1-dt64_series0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64_mul_div_numeric_invalid[DataFrame-1-dt64_series1]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64_mul_div_numeric_invalid[DataFrame-1-dt64_series2]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64_mul_div_numeric_invalid[DataFrame-1.0-dt64_series0]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64_mul_div_numeric_invalid[DataFrame-1.0-dt64_series1]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64_mul_div_numeric_invalid[DataFrame-1.0-dt64_series2]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64_mul_div_numeric_invalid[DataFrame-one2-dt64_series0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64_mul_div_numeric_invalid[DataFrame-one2-dt64_series1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64_mul_div_numeric_invalid[DataFrame-one2-dt64_series2]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64_mul_div_numeric_invalid[array-1-dt64_series0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64_mul_div_numeric_invalid[array-1-dt64_series1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64_mul_div_numeric_invalid[array-1-dt64_series2]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64_mul_div_numeric_invalid[array-1.0-dt64_series0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64_mul_div_numeric_invalid[array-1.0-dt64_series1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64_mul_div_numeric_invalid[array-1.0-dt64_series2]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64_mul_div_numeric_invalid[array-one2-dt64_series0]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64_mul_div_numeric_invalid[array-one2-dt64_series1]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64Arithmetic" name="test_dt64_mul_div_numeric_invalid[array-one2-dt64_series2]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_series_add_tick_DateOffset[Index-s]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_series_add_tick_DateOffset[Index-ms]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_series_add_tick_DateOffset[Index-us]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_series_add_tick_DateOffset[Index-ns]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_series_add_tick_DateOffset[Series-s]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_series_add_tick_DateOffset[Series-ms]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_series_add_tick_DateOffset[Series-us]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_series_add_tick_DateOffset[Series-ns]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_series_add_tick_DateOffset[DataFrame-s]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_series_add_tick_DateOffset[DataFrame-ms]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_series_add_tick_DateOffset[DataFrame-us]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_series_add_tick_DateOffset[DataFrame-ns]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_series_add_tick_DateOffset[array-s]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_series_add_tick_DateOffset[array-ms]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_series_add_tick_DateOffset[array-us]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_series_add_tick_DateOffset[array-ns]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_series_sub_tick_DateOffset[Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_series_sub_tick_DateOffset[Series]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_series_sub_tick_DateOffset[DataFrame]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_series_sub_tick_DateOffset[array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_tick_DateOffset_smoke[Index-Day]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_tick_DateOffset_smoke[Index-Hour]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_tick_DateOffset_smoke[Index-Minute]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_tick_DateOffset_smoke[Index-Second]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_tick_DateOffset_smoke[Index-Milli]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_tick_DateOffset_smoke[Index-Micro]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_tick_DateOffset_smoke[Index-Nano]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_tick_DateOffset_smoke[Series-Day]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_tick_DateOffset_smoke[Series-Hour]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_tick_DateOffset_smoke[Series-Minute]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_tick_DateOffset_smoke[Series-Second]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_tick_DateOffset_smoke[Series-Milli]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_tick_DateOffset_smoke[Series-Micro]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_tick_DateOffset_smoke[Series-Nano]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_tick_DateOffset_smoke[DataFrame-Day]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_tick_DateOffset_smoke[DataFrame-Hour]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_tick_DateOffset_smoke[DataFrame-Minute]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_tick_DateOffset_smoke[DataFrame-Second]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_tick_DateOffset_smoke[DataFrame-Milli]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_tick_DateOffset_smoke[DataFrame-Micro]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_tick_DateOffset_smoke[DataFrame-Nano]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_tick_DateOffset_smoke[array-Day]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_tick_DateOffset_smoke[array-Hour]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_tick_DateOffset_smoke[array-Minute]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_tick_DateOffset_smoke[array-Second]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_tick_DateOffset_smoke[array-Milli]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_tick_DateOffset_smoke[array-Micro]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_tick_DateOffset_smoke[array-Nano]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dti_add_tick_tzaware['UTC'-Index]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dti_add_tick_tzaware['UTC'-Series]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dti_add_tick_tzaware['UTC'-DataFrame]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dti_add_tick_tzaware['UTC'-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dti_add_tick_tzaware['US/Eastern'-Index]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dti_add_tick_tzaware['US/Eastern'-Series]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dti_add_tick_tzaware['US/Eastern'-DataFrame]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dti_add_tick_tzaware['US/Eastern'-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dti_add_tick_tzaware['Asia/Tokyo'-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dti_add_tick_tzaware['Asia/Tokyo'-Series]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dti_add_tick_tzaware['Asia/Tokyo'-DataFrame]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dti_add_tick_tzaware['Asia/Tokyo'-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dti_add_tick_tzaware['dateutil/US/Pacific'-Index]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dti_add_tick_tzaware['dateutil/US/Pacific'-Series]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dti_add_tick_tzaware['dateutil/US/Pacific'-DataFrame]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dti_add_tick_tzaware['dateutil/US/Pacific'-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dti_add_tick_tzaware['dateutil/Asia/Singapore'-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dti_add_tick_tzaware['dateutil/Asia/Singapore'-Series]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dti_add_tick_tzaware['dateutil/Asia/Singapore'-DataFrame]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dti_add_tick_tzaware['dateutil/Asia/Singapore'-array]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dti_add_tick_tzaware['+01:15'-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dti_add_tick_tzaware['+01:15'-Series]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dti_add_tick_tzaware['+01:15'-DataFrame]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dti_add_tick_tzaware['+01:15'-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dti_add_tick_tzaware['-02:15'-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dti_add_tick_tzaware['-02:15'-Series]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dti_add_tick_tzaware['-02:15'-DataFrame]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dti_add_tick_tzaware['-02:15'-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dti_add_tick_tzaware['UTC+01:15'-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dti_add_tick_tzaware['UTC+01:15'-Series]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dti_add_tick_tzaware['UTC+01:15'-DataFrame]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dti_add_tick_tzaware['UTC+01:15'-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dti_add_tick_tzaware['UTC-02:15'-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dti_add_tick_tzaware['UTC-02:15'-Series]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dti_add_tick_tzaware['UTC-02:15'-DataFrame]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dti_add_tick_tzaware['UTC-02:15'-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dti_add_tick_tzaware[tzutc()-Index]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dti_add_tick_tzaware[tzutc()-Series]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dti_add_tick_tzaware[tzutc()-DataFrame]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dti_add_tick_tzaware[tzutc()-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dti_add_tick_tzaware[tzlocal()-Index]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dti_add_tick_tzaware[tzlocal()-Series]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dti_add_tick_tzaware[tzlocal()-DataFrame]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dti_add_tick_tzaware[tzlocal()-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dti_add_tick_tzaware[pytz.FixedOffset(300)-Index]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dti_add_tick_tzaware[pytz.FixedOffset(300)-Series]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dti_add_tick_tzaware[pytz.FixedOffset(300)-DataFrame]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dti_add_tick_tzaware[pytz.FixedOffset(300)-array]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dti_add_tick_tzaware[&lt;UTC&gt;-Index]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dti_add_tick_tzaware[&lt;UTC&gt;-Series]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dti_add_tick_tzaware[&lt;UTC&gt;-DataFrame]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dti_add_tick_tzaware[&lt;UTC&gt;-array]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dti_add_tick_tzaware[pytz.FixedOffset(-300)-Index]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dti_add_tick_tzaware[pytz.FixedOffset(-300)-Series]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dti_add_tick_tzaware[pytz.FixedOffset(-300)-DataFrame]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dti_add_tick_tzaware[pytz.FixedOffset(-300)-array]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dti_add_tick_tzaware[datetime.timezone.utc-Index]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dti_add_tick_tzaware[datetime.timezone.utc-Series]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dti_add_tick_tzaware[datetime.timezone.utc-DataFrame]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dti_add_tick_tzaware[datetime.timezone.utc-array]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dti_add_tick_tzaware[datetime.timezone(datetime.timedelta(seconds=3600))-Index]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dti_add_tick_tzaware[datetime.timezone(datetime.timedelta(seconds=3600))-Series]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dti_add_tick_tzaware[datetime.timezone(datetime.timedelta(seconds=3600))-DataFrame]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dti_add_tick_tzaware[datetime.timezone(datetime.timedelta(seconds=3600))-array]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dti_add_tick_tzaware[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Index]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dti_add_tick_tzaware[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-Series]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dti_add_tick_tzaware[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-DataFrame]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dti_add_tick_tzaware[datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')-array]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dti_add_tick_tzaware[zoneinfo.ZoneInfo(key='US/Pacific')-Index]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dti_add_tick_tzaware[zoneinfo.ZoneInfo(key='US/Pacific')-Series]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dti_add_tick_tzaware[zoneinfo.ZoneInfo(key='US/Pacific')-DataFrame]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dti_add_tick_tzaware[zoneinfo.ZoneInfo(key='US/Pacific')-array]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dti_add_tick_tzaware[zoneinfo.ZoneInfo(key='UTC')-Index]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dti_add_tick_tzaware[zoneinfo.ZoneInfo(key='UTC')-Series]" time="0.018" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dti_add_tick_tzaware[zoneinfo.ZoneInfo(key='UTC')-DataFrame]" time="0.031" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dti_add_tick_tzaware[zoneinfo.ZoneInfo(key='UTC')-array]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_relativedelta_offsets[Index-s]" time="0.061" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_relativedelta_offsets[Index-ms]" time="0.071" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_relativedelta_offsets[Index-us]" time="0.048" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_relativedelta_offsets[Index-ns]" time="0.050" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_relativedelta_offsets[Series-s]" time="0.079" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_relativedelta_offsets[Series-ms]" time="0.067" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_relativedelta_offsets[Series-us]" time="0.051" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_relativedelta_offsets[Series-ns]" time="0.066" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_relativedelta_offsets[DataFrame-s]" time="0.155" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_relativedelta_offsets[DataFrame-ms]" time="0.149" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_relativedelta_offsets[DataFrame-us]" time="0.160" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_relativedelta_offsets[DataFrame-ns]" time="0.172" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_relativedelta_offsets[array-s]" time="0.051" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_relativedelta_offsets[array-ms]" time="0.046" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_relativedelta_offsets[array-us]" time="0.036" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_relativedelta_offsets[array-ns]" time="0.037" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-0-True-YearBegin]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-0-True-cls_and_kwargs1]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-0-True-YearEnd]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-0-True-cls_and_kwargs3]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-0-True-MonthBegin]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-0-True-MonthEnd]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-0-True-SemiMonthEnd]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-0-True-SemiMonthBegin]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-0-True-Week0]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-0-True-cls_and_kwargs9]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-0-True-Week1]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-0-True-cls_and_kwargs11]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-0-True-BusinessDay]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-0-True-BDay]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-0-True-QuarterEnd]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-0-True-QuarterBegin]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-0-True-CustomBusinessDay]" time="0.019" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-0-True-CDay]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-0-True-CBMonthEnd]" time="0.020" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-0-True-CBMonthBegin]" time="0.026" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-0-True-BMonthBegin]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-0-True-BMonthEnd]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-0-True-BusinessHour]" time="0.020" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-0-True-BYearBegin]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-0-True-BYearEnd]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-0-True-BQuarterBegin]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-0-True-cls_and_kwargs26]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-0-True-cls_and_kwargs27]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-0-True-cls_and_kwargs28]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-0-True-cls_and_kwargs29]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-0-True-Easter]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-0-True-cls_and_kwargs31]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-0-True-cls_and_kwargs32]" time="0.020" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-0-False-YearBegin]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-0-False-cls_and_kwargs1]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-0-False-YearEnd]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-0-False-cls_and_kwargs3]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-0-False-MonthBegin]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-0-False-MonthEnd]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-0-False-SemiMonthEnd]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-0-False-SemiMonthBegin]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-0-False-Week0]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-0-False-cls_and_kwargs9]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-0-False-Week1]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-0-False-cls_and_kwargs11]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-0-False-BusinessDay]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-0-False-BDay]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-0-False-QuarterEnd]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-0-False-QuarterBegin]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-0-False-CustomBusinessDay]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-0-False-CDay]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-0-False-CBMonthEnd]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-0-False-CBMonthBegin]" time="0.021" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-0-False-BMonthBegin]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-0-False-BMonthEnd]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-0-False-BusinessHour]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-0-False-BYearBegin]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-0-False-BYearEnd]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-0-False-BQuarterBegin]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-0-False-cls_and_kwargs26]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-0-False-cls_and_kwargs27]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-0-False-cls_and_kwargs28]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-0-False-cls_and_kwargs29]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-0-False-Easter]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-0-False-cls_and_kwargs31]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-0-False-cls_and_kwargs32]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-5-True-YearBegin]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-5-True-cls_and_kwargs1]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-5-True-YearEnd]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-5-True-cls_and_kwargs3]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-5-True-MonthBegin]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-5-True-MonthEnd]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-5-True-SemiMonthEnd]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-5-True-SemiMonthBegin]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-5-True-Week0]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-5-True-cls_and_kwargs9]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-5-True-Week1]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-5-True-cls_and_kwargs11]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-5-True-BusinessDay]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-5-True-BDay]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-5-True-QuarterEnd]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-5-True-QuarterBegin]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-5-True-CustomBusinessDay]" time="0.018" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-5-True-CDay]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-5-True-CBMonthEnd]" time="0.031" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-5-True-CBMonthBegin]" time="0.032" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-5-True-BMonthBegin]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-5-True-BMonthEnd]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-5-True-BusinessHour]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-5-True-BYearBegin]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-5-True-BYearEnd]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-5-True-BQuarterBegin]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-5-True-cls_and_kwargs26]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-5-True-cls_and_kwargs27]" time="0.039" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-5-True-cls_and_kwargs28]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-5-True-cls_and_kwargs29]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-5-True-Easter]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-5-True-cls_and_kwargs31]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-5-True-cls_and_kwargs32]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-5-False-YearBegin]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-5-False-cls_and_kwargs1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-5-False-YearEnd]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-5-False-cls_and_kwargs3]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-5-False-MonthBegin]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-5-False-MonthEnd]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-5-False-SemiMonthEnd]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-5-False-SemiMonthBegin]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-5-False-Week0]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-5-False-cls_and_kwargs9]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-5-False-Week1]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-5-False-cls_and_kwargs11]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-5-False-BusinessDay]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-5-False-BDay]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-5-False-QuarterEnd]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-5-False-QuarterBegin]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-5-False-CustomBusinessDay]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-5-False-CDay]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-5-False-CBMonthEnd]" time="0.022" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-5-False-CBMonthBegin]" time="0.024" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-5-False-BMonthBegin]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-5-False-BMonthEnd]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-5-False-BusinessHour]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-5-False-BYearBegin]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-5-False-BYearEnd]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-5-False-BQuarterBegin]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-5-False-cls_and_kwargs26]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-5-False-cls_and_kwargs27]" time="0.040" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-5-False-cls_and_kwargs28]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-5-False-cls_and_kwargs29]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-5-False-Easter]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-5-False-cls_and_kwargs31]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-s-5-False-cls_and_kwargs32]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-0-True-YearBegin]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-0-True-cls_and_kwargs1]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-0-True-YearEnd]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-0-True-cls_and_kwargs3]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-0-True-MonthBegin]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-0-True-MonthEnd]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-0-True-SemiMonthEnd]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-0-True-SemiMonthBegin]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-0-True-Week0]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-0-True-cls_and_kwargs9]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-0-True-Week1]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-0-True-cls_and_kwargs11]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-0-True-BusinessDay]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-0-True-BDay]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-0-True-QuarterEnd]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-0-True-QuarterBegin]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-0-True-CustomBusinessDay]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-0-True-CDay]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-0-True-CBMonthEnd]" time="0.026" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-0-True-CBMonthBegin]" time="0.026" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-0-True-BMonthBegin]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-0-True-BMonthEnd]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-0-True-BusinessHour]" time="0.019" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-0-True-BYearBegin]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-0-True-BYearEnd]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-0-True-BQuarterBegin]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-0-True-cls_and_kwargs26]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-0-True-cls_and_kwargs27]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-0-True-cls_and_kwargs28]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-0-True-cls_and_kwargs29]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-0-True-Easter]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-0-True-cls_and_kwargs31]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-0-True-cls_and_kwargs32]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-0-False-YearBegin]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-0-False-cls_and_kwargs1]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-0-False-YearEnd]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-0-False-cls_and_kwargs3]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-0-False-MonthBegin]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-0-False-MonthEnd]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-0-False-SemiMonthEnd]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-0-False-SemiMonthBegin]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-0-False-Week0]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-0-False-cls_and_kwargs9]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-0-False-Week1]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-0-False-cls_and_kwargs11]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-0-False-BusinessDay]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-0-False-BDay]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-0-False-QuarterEnd]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-0-False-QuarterBegin]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-0-False-CustomBusinessDay]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-0-False-CDay]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-0-False-CBMonthEnd]" time="0.023" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-0-False-CBMonthBegin]" time="0.022" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-0-False-BMonthBegin]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-0-False-BMonthEnd]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-0-False-BusinessHour]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-0-False-BYearBegin]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-0-False-BYearEnd]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-0-False-BQuarterBegin]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-0-False-cls_and_kwargs26]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-0-False-cls_and_kwargs27]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-0-False-cls_and_kwargs28]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-0-False-cls_and_kwargs29]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-0-False-Easter]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-0-False-cls_and_kwargs31]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-0-False-cls_and_kwargs32]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-5-True-YearBegin]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-5-True-cls_and_kwargs1]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-5-True-YearEnd]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-5-True-cls_and_kwargs3]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-5-True-MonthBegin]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-5-True-MonthEnd]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-5-True-SemiMonthEnd]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-5-True-SemiMonthBegin]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-5-True-Week0]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-5-True-cls_and_kwargs9]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-5-True-Week1]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-5-True-cls_and_kwargs11]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-5-True-BusinessDay]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-5-True-BDay]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-5-True-QuarterEnd]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-5-True-QuarterBegin]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-5-True-CustomBusinessDay]" time="0.019" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-5-True-CDay]" time="0.021" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-5-True-CBMonthEnd]" time="0.032" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-5-True-CBMonthBegin]" time="0.034" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-5-True-BMonthBegin]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-5-True-BMonthEnd]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-5-True-BusinessHour]" time="0.026" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-5-True-BYearBegin]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-5-True-BYearEnd]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-5-True-BQuarterBegin]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-5-True-cls_and_kwargs26]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-5-True-cls_and_kwargs27]" time="0.038" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-5-True-cls_and_kwargs28]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-5-True-cls_and_kwargs29]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-5-True-Easter]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-5-True-cls_and_kwargs31]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-5-True-cls_and_kwargs32]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-5-False-YearBegin]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-5-False-cls_and_kwargs1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-5-False-YearEnd]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-5-False-cls_and_kwargs3]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-5-False-MonthBegin]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-5-False-MonthEnd]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-5-False-SemiMonthEnd]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-5-False-SemiMonthBegin]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-5-False-Week0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-5-False-cls_and_kwargs9]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-5-False-Week1]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-5-False-cls_and_kwargs11]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-5-False-BusinessDay]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-5-False-BDay]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-5-False-QuarterEnd]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-5-False-QuarterBegin]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-5-False-CustomBusinessDay]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-5-False-CDay]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-5-False-CBMonthEnd]" time="0.020" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-5-False-CBMonthBegin]" time="0.019" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-5-False-BMonthBegin]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-5-False-BMonthEnd]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-5-False-BusinessHour]" time="0.019" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-5-False-BYearBegin]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-5-False-BYearEnd]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-5-False-BQuarterBegin]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-5-False-cls_and_kwargs26]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-5-False-cls_and_kwargs27]" time="0.034" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-5-False-cls_and_kwargs28]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-5-False-cls_and_kwargs29]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-5-False-Easter]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-5-False-cls_and_kwargs31]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ms-5-False-cls_and_kwargs32]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-0-True-YearBegin]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-0-True-cls_and_kwargs1]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-0-True-YearEnd]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-0-True-cls_and_kwargs3]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-0-True-MonthBegin]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-0-True-MonthEnd]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-0-True-SemiMonthEnd]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-0-True-SemiMonthBegin]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-0-True-Week0]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-0-True-cls_and_kwargs9]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-0-True-Week1]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-0-True-cls_and_kwargs11]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-0-True-BusinessDay]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-0-True-BDay]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-0-True-QuarterEnd]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-0-True-QuarterBegin]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-0-True-CustomBusinessDay]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-0-True-CDay]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-0-True-CBMonthEnd]" time="0.019" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-0-True-CBMonthBegin]" time="0.020" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-0-True-BMonthBegin]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-0-True-BMonthEnd]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-0-True-BusinessHour]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-0-True-BYearBegin]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-0-True-BYearEnd]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-0-True-BQuarterBegin]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-0-True-cls_and_kwargs26]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-0-True-cls_and_kwargs27]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-0-True-cls_and_kwargs28]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-0-True-cls_and_kwargs29]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-0-True-Easter]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-0-True-cls_and_kwargs31]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-0-True-cls_and_kwargs32]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-0-False-YearBegin]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-0-False-cls_and_kwargs1]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-0-False-YearEnd]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-0-False-cls_and_kwargs3]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-0-False-MonthBegin]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-0-False-MonthEnd]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-0-False-SemiMonthEnd]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-0-False-SemiMonthBegin]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-0-False-Week0]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-0-False-cls_and_kwargs9]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-0-False-Week1]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-0-False-cls_and_kwargs11]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-0-False-BusinessDay]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-0-False-BDay]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-0-False-QuarterEnd]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-0-False-QuarterBegin]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-0-False-CustomBusinessDay]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-0-False-CDay]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-0-False-CBMonthEnd]" time="0.021" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-0-False-CBMonthBegin]" time="0.021" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-0-False-BMonthBegin]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-0-False-BMonthEnd]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-0-False-BusinessHour]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-0-False-BYearBegin]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-0-False-BYearEnd]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-0-False-BQuarterBegin]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-0-False-cls_and_kwargs26]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-0-False-cls_and_kwargs27]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-0-False-cls_and_kwargs28]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-0-False-cls_and_kwargs29]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-0-False-Easter]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-0-False-cls_and_kwargs31]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-0-False-cls_and_kwargs32]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-5-True-YearBegin]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-5-True-cls_and_kwargs1]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-5-True-YearEnd]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-5-True-cls_and_kwargs3]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-5-True-MonthBegin]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-5-True-MonthEnd]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-5-True-SemiMonthEnd]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-5-True-SemiMonthBegin]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-5-True-Week0]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-5-True-cls_and_kwargs9]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-5-True-Week1]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-5-True-cls_and_kwargs11]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-5-True-BusinessDay]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-5-True-BDay]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-5-True-QuarterEnd]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-5-True-QuarterBegin]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-5-True-CustomBusinessDay]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-5-True-CDay]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-5-True-CBMonthEnd]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-5-True-CBMonthBegin]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-5-True-BMonthBegin]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-5-True-BMonthEnd]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-5-True-BusinessHour]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-5-True-BYearBegin]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-5-True-BYearEnd]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-5-True-BQuarterBegin]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-5-True-cls_and_kwargs26]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-5-True-cls_and_kwargs27]" time="0.029" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-5-True-cls_and_kwargs28]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-5-True-cls_and_kwargs29]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-5-True-Easter]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-5-True-cls_and_kwargs31]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-5-True-cls_and_kwargs32]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-5-False-YearBegin]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-5-False-cls_and_kwargs1]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-5-False-YearEnd]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-5-False-cls_and_kwargs3]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-5-False-MonthBegin]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-5-False-MonthEnd]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-5-False-SemiMonthEnd]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-5-False-SemiMonthBegin]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-5-False-Week0]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-5-False-cls_and_kwargs9]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-5-False-Week1]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-5-False-cls_and_kwargs11]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-5-False-BusinessDay]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-5-False-BDay]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-5-False-QuarterEnd]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-5-False-QuarterBegin]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-5-False-CustomBusinessDay]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-5-False-CDay]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-5-False-CBMonthEnd]" time="0.026" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-5-False-CBMonthBegin]" time="0.027" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-5-False-BMonthBegin]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-5-False-BMonthEnd]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-5-False-BusinessHour]" time="0.022" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-5-False-BYearBegin]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-5-False-BYearEnd]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-5-False-BQuarterBegin]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-5-False-cls_and_kwargs26]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-5-False-cls_and_kwargs27]" time="0.041" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-5-False-cls_and_kwargs28]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-5-False-cls_and_kwargs29]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-5-False-Easter]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-5-False-cls_and_kwargs31]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-us-5-False-cls_and_kwargs32]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-0-True-YearBegin]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-0-True-cls_and_kwargs1]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-0-True-YearEnd]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-0-True-cls_and_kwargs3]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-0-True-MonthBegin]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-0-True-MonthEnd]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-0-True-SemiMonthEnd]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-0-True-SemiMonthBegin]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-0-True-Week0]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-0-True-cls_and_kwargs9]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-0-True-Week1]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-0-True-cls_and_kwargs11]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-0-True-BusinessDay]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-0-True-BDay]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-0-True-QuarterEnd]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-0-True-QuarterBegin]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-0-True-CustomBusinessDay]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-0-True-CDay]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-0-True-CBMonthEnd]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-0-True-CBMonthBegin]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-0-True-BMonthBegin]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-0-True-BMonthEnd]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-0-True-BusinessHour]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-0-True-BYearBegin]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-0-True-BYearEnd]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-0-True-BQuarterBegin]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-0-True-cls_and_kwargs26]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-0-True-cls_and_kwargs27]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-0-True-cls_and_kwargs28]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-0-True-cls_and_kwargs29]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-0-True-Easter]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-0-True-cls_and_kwargs31]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-0-True-cls_and_kwargs32]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-0-False-YearBegin]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-0-False-cls_and_kwargs1]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-0-False-YearEnd]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-0-False-cls_and_kwargs3]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-0-False-MonthBegin]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-0-False-MonthEnd]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-0-False-SemiMonthEnd]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-0-False-SemiMonthBegin]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-0-False-Week0]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-0-False-cls_and_kwargs9]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-0-False-Week1]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-0-False-cls_and_kwargs11]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-0-False-BusinessDay]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-0-False-BDay]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-0-False-QuarterEnd]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-0-False-QuarterBegin]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-0-False-CustomBusinessDay]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-0-False-CDay]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-0-False-CBMonthEnd]" time="0.023" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-0-False-CBMonthBegin]" time="0.025" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-0-False-BMonthBegin]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-0-False-BMonthEnd]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-0-False-BusinessHour]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-0-False-BYearBegin]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-0-False-BYearEnd]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-0-False-BQuarterBegin]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-0-False-cls_and_kwargs26]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-0-False-cls_and_kwargs27]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-0-False-cls_and_kwargs28]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-0-False-cls_and_kwargs29]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-0-False-Easter]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-0-False-cls_and_kwargs31]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-0-False-cls_and_kwargs32]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-5-True-YearBegin]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-5-True-cls_and_kwargs1]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-5-True-YearEnd]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-5-True-cls_and_kwargs3]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-5-True-MonthBegin]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-5-True-MonthEnd]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-5-True-SemiMonthEnd]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-5-True-SemiMonthBegin]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-5-True-Week0]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-5-True-cls_and_kwargs9]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-5-True-Week1]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-5-True-cls_and_kwargs11]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-5-True-BusinessDay]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-5-True-BDay]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-5-True-QuarterEnd]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-5-True-QuarterBegin]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-5-True-CustomBusinessDay]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-5-True-CDay]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-5-True-CBMonthEnd]" time="0.028" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-5-True-CBMonthBegin]" time="0.033" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-5-True-BMonthBegin]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-5-True-BMonthEnd]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-5-True-BusinessHour]" time="0.026" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-5-True-BYearBegin]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-5-True-BYearEnd]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-5-True-BQuarterBegin]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-5-True-cls_and_kwargs26]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-5-True-cls_and_kwargs27]" time="0.040" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-5-True-cls_and_kwargs28]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-5-True-cls_and_kwargs29]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-5-True-Easter]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-5-True-cls_and_kwargs31]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-5-True-cls_and_kwargs32]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-5-False-YearBegin]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-5-False-cls_and_kwargs1]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-5-False-YearEnd]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-5-False-cls_and_kwargs3]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-5-False-MonthBegin]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-5-False-MonthEnd]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-5-False-SemiMonthEnd]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-5-False-SemiMonthBegin]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-5-False-Week0]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-5-False-cls_and_kwargs9]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-5-False-Week1]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-5-False-cls_and_kwargs11]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-5-False-BusinessDay]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-5-False-BDay]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-5-False-QuarterEnd]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-5-False-QuarterBegin]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-5-False-CustomBusinessDay]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-5-False-CDay]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-5-False-CBMonthEnd]" time="0.020" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-5-False-CBMonthBegin]" time="0.025" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-5-False-BMonthBegin]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-5-False-BMonthEnd]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-5-False-BusinessHour]" time="0.040" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-5-False-BYearBegin]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-5-False-BYearEnd]" time="0.046" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-5-False-BQuarterBegin]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-5-False-cls_and_kwargs26]" time="0.029" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-5-False-cls_and_kwargs27]" time="0.055" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-5-False-cls_and_kwargs28]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-5-False-cls_and_kwargs29]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-5-False-Easter]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-5-False-cls_and_kwargs31]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-None-ns-5-False-cls_and_kwargs32]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-0-True-YearBegin]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-0-True-cls_and_kwargs1]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-0-True-YearEnd]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-0-True-cls_and_kwargs3]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-0-True-MonthBegin]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-0-True-MonthEnd]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-0-True-SemiMonthEnd]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-0-True-SemiMonthBegin]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-0-True-Week0]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-0-True-cls_and_kwargs9]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-0-True-Week1]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-0-True-cls_and_kwargs11]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-0-True-BusinessDay]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-0-True-BDay]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-0-True-QuarterEnd]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-0-True-QuarterBegin]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-0-True-CustomBusinessDay]" time="0.026" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-0-True-CDay]" time="0.030" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-0-True-CBMonthEnd]" time="0.047" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-0-True-CBMonthBegin]" time="0.044" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-0-True-BMonthBegin]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-0-True-BMonthEnd]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-0-True-BusinessHour]" time="0.022" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-0-True-BYearBegin]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-0-True-BYearEnd]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-0-True-BQuarterBegin]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-0-True-cls_and_kwargs26]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-0-True-cls_and_kwargs27]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-0-True-cls_and_kwargs28]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-0-True-cls_and_kwargs29]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-0-True-Easter]" time="0.023" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-0-True-cls_and_kwargs31]" time="0.024" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-0-True-cls_and_kwargs32]" time="0.027" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-0-False-YearBegin]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-0-False-cls_and_kwargs1]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-0-False-YearEnd]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-0-False-cls_and_kwargs3]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-0-False-MonthBegin]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-0-False-MonthEnd]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-0-False-SemiMonthEnd]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-0-False-SemiMonthBegin]" time="0.020" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-0-False-Week0]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-0-False-cls_and_kwargs9]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-0-False-Week1]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-0-False-cls_and_kwargs11]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-0-False-BusinessDay]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-0-False-BDay]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-0-False-QuarterEnd]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-0-False-QuarterBegin]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-0-False-CustomBusinessDay]" time="0.024" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-0-False-CDay]" time="0.021" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-0-False-CBMonthEnd]" time="0.030" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-0-False-CBMonthBegin]" time="0.037" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-0-False-BMonthBegin]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-0-False-BMonthEnd]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-0-False-BusinessHour]" time="0.027" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-0-False-BYearBegin]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-0-False-BYearEnd]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-0-False-BQuarterBegin]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-0-False-cls_and_kwargs26]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-0-False-cls_and_kwargs27]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-0-False-cls_and_kwargs28]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-0-False-cls_and_kwargs29]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-0-False-Easter]" time="0.023" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-0-False-cls_and_kwargs31]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-0-False-cls_and_kwargs32]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-5-True-YearBegin]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-5-True-cls_and_kwargs1]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-5-True-YearEnd]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-5-True-cls_and_kwargs3]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-5-True-MonthBegin]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-5-True-MonthEnd]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-5-True-SemiMonthEnd]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-5-True-SemiMonthBegin]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-5-True-Week0]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-5-True-cls_and_kwargs9]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-5-True-Week1]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-5-True-cls_and_kwargs11]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-5-True-BusinessDay]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-5-True-BDay]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-5-True-QuarterEnd]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-5-True-QuarterBegin]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-5-True-CustomBusinessDay]" time="0.021" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-5-True-CDay]" time="0.020" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-5-True-CBMonthEnd]" time="0.036" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-5-True-CBMonthBegin]" time="0.026" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-5-True-BMonthBegin]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-5-True-BMonthEnd]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-5-True-BusinessHour]" time="0.029" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-5-True-BYearBegin]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-5-True-BYearEnd]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-5-True-BQuarterBegin]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-5-True-cls_and_kwargs26]" time="0.033" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-5-True-cls_and_kwargs27]" time="0.104" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-5-True-cls_and_kwargs28]" time="0.024" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-5-True-cls_and_kwargs29]" time="0.023" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-5-True-Easter]" time="0.026" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-5-True-cls_and_kwargs31]" time="0.029" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-5-True-cls_and_kwargs32]" time="0.030" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-5-False-YearBegin]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-5-False-cls_and_kwargs1]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-5-False-YearEnd]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-5-False-cls_and_kwargs3]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-5-False-MonthBegin]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-5-False-MonthEnd]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-5-False-SemiMonthEnd]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-5-False-SemiMonthBegin]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-5-False-Week0]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-5-False-cls_and_kwargs9]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-5-False-Week1]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-5-False-cls_and_kwargs11]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-5-False-BusinessDay]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-5-False-BDay]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-5-False-QuarterEnd]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-5-False-QuarterBegin]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-5-False-CustomBusinessDay]" time="0.019" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-5-False-CDay]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-5-False-CBMonthEnd]" time="0.024" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-5-False-CBMonthBegin]" time="0.028" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-5-False-BMonthBegin]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-5-False-BMonthEnd]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-5-False-BusinessHour]" time="0.027" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-5-False-BYearBegin]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-5-False-BYearEnd]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-5-False-BQuarterBegin]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-5-False-cls_and_kwargs26]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-5-False-cls_and_kwargs27]" time="0.047" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-5-False-cls_and_kwargs28]" time="0.026" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-5-False-cls_and_kwargs29]" time="0.030" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-5-False-Easter]" time="0.033" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-5-False-cls_and_kwargs31]" time="0.031" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-s-5-False-cls_and_kwargs32]" time="0.031" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-0-True-YearBegin]" time="0.018" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-0-True-cls_and_kwargs1]" time="0.020" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-0-True-YearEnd]" time="0.028" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-0-True-cls_and_kwargs3]" time="0.021" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-0-True-MonthBegin]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-0-True-MonthEnd]" time="0.019" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-0-True-SemiMonthEnd]" time="0.018" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-0-True-SemiMonthBegin]" time="0.021" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-0-True-Week0]" time="0.029" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-0-True-cls_and_kwargs9]" time="0.029" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-0-True-Week1]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-0-True-cls_and_kwargs11]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-0-True-BusinessDay]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-0-True-BDay]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-0-True-QuarterEnd]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-0-True-QuarterBegin]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-0-True-CustomBusinessDay]" time="0.028" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-0-True-CDay]" time="0.038" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-0-True-CBMonthEnd]" time="0.027" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-0-True-CBMonthBegin]" time="0.028" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-0-True-BMonthBegin]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-0-True-BMonthEnd]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-0-True-BusinessHour]" time="0.019" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-0-True-BYearBegin]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-0-True-BYearEnd]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-0-True-BQuarterBegin]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-0-True-cls_and_kwargs26]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-0-True-cls_and_kwargs27]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-0-True-cls_and_kwargs28]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-0-True-cls_and_kwargs29]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-0-True-Easter]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-0-True-cls_and_kwargs31]" time="0.020" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-0-True-cls_and_kwargs32]" time="0.020" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-0-False-YearBegin]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-0-False-cls_and_kwargs1]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-0-False-YearEnd]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-0-False-cls_and_kwargs3]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-0-False-MonthBegin]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-0-False-MonthEnd]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-0-False-SemiMonthEnd]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-0-False-SemiMonthBegin]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-0-False-Week0]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-0-False-cls_and_kwargs9]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-0-False-Week1]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-0-False-cls_and_kwargs11]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-0-False-BusinessDay]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-0-False-BDay]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-0-False-QuarterEnd]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-0-False-QuarterBegin]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-0-False-CustomBusinessDay]" time="0.030" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-0-False-CDay]" time="0.026" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-0-False-CBMonthEnd]" time="0.026" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-0-False-CBMonthBegin]" time="0.029" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-0-False-BMonthBegin]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-0-False-BMonthEnd]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-0-False-BusinessHour]" time="0.020" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-0-False-BYearBegin]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-0-False-BYearEnd]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-0-False-BQuarterBegin]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-0-False-cls_and_kwargs26]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-0-False-cls_and_kwargs27]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-0-False-cls_and_kwargs28]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-0-False-cls_and_kwargs29]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-0-False-Easter]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-0-False-cls_and_kwargs31]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-0-False-cls_and_kwargs32]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-5-True-YearBegin]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-5-True-cls_and_kwargs1]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-5-True-YearEnd]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-5-True-cls_and_kwargs3]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-5-True-MonthBegin]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-5-True-MonthEnd]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-5-True-SemiMonthEnd]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-5-True-SemiMonthBegin]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-5-True-Week0]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-5-True-cls_and_kwargs9]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-5-True-Week1]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-5-True-cls_and_kwargs11]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-5-True-BusinessDay]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-5-True-BDay]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-5-True-QuarterEnd]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-5-True-QuarterBegin]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-5-True-CustomBusinessDay]" time="0.051" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-5-True-CDay]" time="0.044" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-5-True-CBMonthEnd]" time="0.066" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-5-True-CBMonthBegin]" time="0.079" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-5-True-BMonthBegin]" time="0.025" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-5-True-BMonthEnd]" time="0.021" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-5-True-BusinessHour]" time="0.043" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-5-True-BYearBegin]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-5-True-BYearEnd]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-5-True-BQuarterBegin]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-5-True-cls_and_kwargs26]" time="0.022" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-5-True-cls_and_kwargs27]" time="0.067" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-5-True-cls_and_kwargs28]" time="0.027" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-5-True-cls_and_kwargs29]" time="0.025" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-5-True-Easter]" time="0.023" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-5-True-cls_and_kwargs31]" time="0.021" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-5-True-cls_and_kwargs32]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-5-False-YearBegin]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-5-False-cls_and_kwargs1]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-5-False-YearEnd]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-5-False-cls_and_kwargs3]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-5-False-MonthBegin]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-5-False-MonthEnd]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-5-False-SemiMonthEnd]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-5-False-SemiMonthBegin]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-5-False-Week0]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-5-False-cls_and_kwargs9]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-5-False-Week1]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-5-False-cls_and_kwargs11]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-5-False-BusinessDay]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-5-False-BDay]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-5-False-QuarterEnd]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-5-False-QuarterBegin]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-5-False-CustomBusinessDay]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-5-False-CDay]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-5-False-CBMonthEnd]" time="0.026" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-5-False-CBMonthBegin]" time="0.029" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-5-False-BMonthBegin]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-5-False-BMonthEnd]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-5-False-BusinessHour]" time="0.023" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-5-False-BYearBegin]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-5-False-BYearEnd]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-5-False-BQuarterBegin]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-5-False-cls_and_kwargs26]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-5-False-cls_and_kwargs27]" time="0.039" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-5-False-cls_and_kwargs28]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-5-False-cls_and_kwargs29]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-5-False-Easter]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-5-False-cls_and_kwargs31]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ms-5-False-cls_and_kwargs32]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-0-True-YearBegin]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-0-True-cls_and_kwargs1]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-0-True-YearEnd]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-0-True-cls_and_kwargs3]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-0-True-MonthBegin]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-0-True-MonthEnd]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-0-True-SemiMonthEnd]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-0-True-SemiMonthBegin]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-0-True-Week0]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-0-True-cls_and_kwargs9]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-0-True-Week1]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-0-True-cls_and_kwargs11]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-0-True-BusinessDay]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-0-True-BDay]" time="0.018" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-0-True-QuarterEnd]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-0-True-QuarterBegin]" time="0.020" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-0-True-CustomBusinessDay]" time="0.052" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-0-True-CDay]" time="0.035" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-0-True-CBMonthEnd]" time="0.028" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-0-True-CBMonthBegin]" time="0.023" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-0-True-BMonthBegin]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-0-True-BMonthEnd]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-0-True-BusinessHour]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-0-True-BYearBegin]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-0-True-BYearEnd]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-0-True-BQuarterBegin]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-0-True-cls_and_kwargs26]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-0-True-cls_and_kwargs27]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-0-True-cls_and_kwargs28]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-0-True-cls_and_kwargs29]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-0-True-Easter]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-0-True-cls_and_kwargs31]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-0-True-cls_and_kwargs32]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-0-False-YearBegin]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-0-False-cls_and_kwargs1]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-0-False-YearEnd]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-0-False-cls_and_kwargs3]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-0-False-MonthBegin]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-0-False-MonthEnd]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-0-False-SemiMonthEnd]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-0-False-SemiMonthBegin]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-0-False-Week0]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-0-False-cls_and_kwargs9]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-0-False-Week1]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-0-False-cls_and_kwargs11]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-0-False-BusinessDay]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-0-False-BDay]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-0-False-QuarterEnd]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-0-False-QuarterBegin]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-0-False-CustomBusinessDay]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-0-False-CDay]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-0-False-CBMonthEnd]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-0-False-CBMonthBegin]" time="0.018" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-0-False-BMonthBegin]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-0-False-BMonthEnd]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-0-False-BusinessHour]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-0-False-BYearBegin]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-0-False-BYearEnd]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-0-False-BQuarterBegin]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-0-False-cls_and_kwargs26]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-0-False-cls_and_kwargs27]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-0-False-cls_and_kwargs28]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-0-False-cls_and_kwargs29]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-0-False-Easter]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-0-False-cls_and_kwargs31]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-0-False-cls_and_kwargs32]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-5-True-YearBegin]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-5-True-cls_and_kwargs1]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-5-True-YearEnd]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-5-True-cls_and_kwargs3]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-5-True-MonthBegin]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-5-True-MonthEnd]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-5-True-SemiMonthEnd]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-5-True-SemiMonthBegin]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-5-True-Week0]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-5-True-cls_and_kwargs9]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-5-True-Week1]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-5-True-cls_and_kwargs11]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-5-True-BusinessDay]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-5-True-BDay]" time="0.018" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-5-True-QuarterEnd]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-5-True-QuarterBegin]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-5-True-CustomBusinessDay]" time="0.037" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-5-True-CDay]" time="0.036" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-5-True-CBMonthEnd]" time="0.048" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-5-True-CBMonthBegin]" time="0.023" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-5-True-BMonthBegin]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-5-True-BMonthEnd]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-5-True-BusinessHour]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-5-True-BYearBegin]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-5-True-BYearEnd]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-5-True-BQuarterBegin]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-5-True-cls_and_kwargs26]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-5-True-cls_and_kwargs27]" time="0.045" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-5-True-cls_and_kwargs28]" time="0.022" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-5-True-cls_and_kwargs29]" time="0.023" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-5-True-Easter]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-5-True-cls_and_kwargs31]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-5-True-cls_and_kwargs32]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-5-False-YearBegin]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-5-False-cls_and_kwargs1]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-5-False-YearEnd]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-5-False-cls_and_kwargs3]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-5-False-MonthBegin]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-5-False-MonthEnd]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-5-False-SemiMonthEnd]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-5-False-SemiMonthBegin]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-5-False-Week0]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-5-False-cls_and_kwargs9]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-5-False-Week1]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-5-False-cls_and_kwargs11]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-5-False-BusinessDay]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-5-False-BDay]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-5-False-QuarterEnd]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-5-False-QuarterBegin]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-5-False-CustomBusinessDay]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-5-False-CDay]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-5-False-CBMonthEnd]" time="0.018" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-5-False-CBMonthBegin]" time="0.019" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-5-False-BMonthBegin]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-5-False-BMonthEnd]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-5-False-BusinessHour]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-5-False-BYearBegin]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-5-False-BYearEnd]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-5-False-BQuarterBegin]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-5-False-cls_and_kwargs26]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-5-False-cls_and_kwargs27]" time="0.032" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-5-False-cls_and_kwargs28]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-5-False-cls_and_kwargs29]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-5-False-Easter]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-5-False-cls_and_kwargs31]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-us-5-False-cls_and_kwargs32]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-0-True-YearBegin]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-0-True-cls_and_kwargs1]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-0-True-YearEnd]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-0-True-cls_and_kwargs3]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-0-True-MonthBegin]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-0-True-MonthEnd]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-0-True-SemiMonthEnd]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-0-True-SemiMonthBegin]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-0-True-Week0]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-0-True-cls_and_kwargs9]" time="0.019" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-0-True-Week1]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-0-True-cls_and_kwargs11]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-0-True-BusinessDay]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-0-True-BDay]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-0-True-QuarterEnd]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-0-True-QuarterBegin]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-0-True-CustomBusinessDay]" time="0.025" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-0-True-CDay]" time="0.026" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-0-True-CBMonthEnd]" time="0.034" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-0-True-CBMonthBegin]" time="0.034" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-0-True-BMonthBegin]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-0-True-BMonthEnd]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-0-True-BusinessHour]" time="0.021" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-0-True-BYearBegin]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-0-True-BYearEnd]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-0-True-BQuarterBegin]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-0-True-cls_and_kwargs26]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-0-True-cls_and_kwargs27]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-0-True-cls_and_kwargs28]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-0-True-cls_and_kwargs29]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-0-True-Easter]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-0-True-cls_and_kwargs31]" time="0.018" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-0-True-cls_and_kwargs32]" time="0.023" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-0-False-YearBegin]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-0-False-cls_and_kwargs1]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-0-False-YearEnd]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-0-False-cls_and_kwargs3]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-0-False-MonthBegin]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-0-False-MonthEnd]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-0-False-SemiMonthEnd]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-0-False-SemiMonthBegin]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-0-False-Week0]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-0-False-cls_and_kwargs9]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-0-False-Week1]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-0-False-cls_and_kwargs11]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-0-False-BusinessDay]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-0-False-BDay]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-0-False-QuarterEnd]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-0-False-QuarterBegin]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-0-False-CustomBusinessDay]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-0-False-CDay]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-0-False-CBMonthEnd]" time="0.023" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-0-False-CBMonthBegin]" time="0.038" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-0-False-BMonthBegin]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-0-False-BMonthEnd]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-0-False-BusinessHour]" time="0.023" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-0-False-BYearBegin]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-0-False-BYearEnd]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-0-False-BQuarterBegin]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-0-False-cls_and_kwargs26]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-0-False-cls_and_kwargs27]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-0-False-cls_and_kwargs28]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-0-False-cls_and_kwargs29]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-0-False-Easter]" time="0.025" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-0-False-cls_and_kwargs31]" time="0.035" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-0-False-cls_and_kwargs32]" time="0.035" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-5-True-YearBegin]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-5-True-cls_and_kwargs1]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-5-True-YearEnd]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-5-True-cls_and_kwargs3]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-5-True-MonthBegin]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-5-True-MonthEnd]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-5-True-SemiMonthEnd]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-5-True-SemiMonthBegin]" time="0.021" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-5-True-Week0]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-5-True-cls_and_kwargs9]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-5-True-Week1]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-5-True-cls_and_kwargs11]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-5-True-BusinessDay]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-5-True-BDay]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-5-True-QuarterEnd]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-5-True-QuarterBegin]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-5-True-CustomBusinessDay]" time="0.018" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-5-True-CDay]" time="0.022" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-5-True-CBMonthEnd]" time="0.034" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-5-True-CBMonthBegin]" time="0.026" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-5-True-BMonthBegin]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-5-True-BMonthEnd]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-5-True-BusinessHour]" time="0.025" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-5-True-BYearBegin]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-5-True-BYearEnd]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-5-True-BQuarterBegin]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-5-True-cls_and_kwargs26]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-5-True-cls_and_kwargs27]" time="0.035" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-5-True-cls_and_kwargs28]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-5-True-cls_and_kwargs29]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-5-True-Easter]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-5-True-cls_and_kwargs31]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-5-True-cls_and_kwargs32]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-5-False-YearBegin]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-5-False-cls_and_kwargs1]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-5-False-YearEnd]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-5-False-cls_and_kwargs3]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-5-False-MonthBegin]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-5-False-MonthEnd]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-5-False-SemiMonthEnd]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-5-False-SemiMonthBegin]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-5-False-Week0]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-5-False-cls_and_kwargs9]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-5-False-Week1]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-5-False-cls_and_kwargs11]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-5-False-BusinessDay]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-5-False-BDay]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-5-False-QuarterEnd]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-5-False-QuarterBegin]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-5-False-CustomBusinessDay]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-5-False-CDay]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-5-False-CBMonthEnd]" time="0.023" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-5-False-CBMonthBegin]" time="0.030" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-5-False-BMonthBegin]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-5-False-BMonthEnd]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-5-False-BusinessHour]" time="0.020" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-5-False-BYearBegin]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-5-False-BYearEnd]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-5-False-BQuarterBegin]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-5-False-cls_and_kwargs26]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-5-False-cls_and_kwargs27]" time="0.046" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-5-False-cls_and_kwargs28]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-5-False-cls_and_kwargs29]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-5-False-Easter]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-5-False-cls_and_kwargs31]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Index-US/Central-ns-5-False-cls_and_kwargs32]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-0-True-YearBegin]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-0-True-cls_and_kwargs1]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-0-True-YearEnd]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-0-True-cls_and_kwargs3]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-0-True-MonthBegin]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-0-True-MonthEnd]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-0-True-SemiMonthEnd]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-0-True-SemiMonthBegin]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-0-True-Week0]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-0-True-cls_and_kwargs9]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-0-True-Week1]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-0-True-cls_and_kwargs11]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-0-True-BusinessDay]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-0-True-BDay]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-0-True-QuarterEnd]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-0-True-QuarterBegin]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-0-True-CustomBusinessDay]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-0-True-CDay]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-0-True-CBMonthEnd]" time="0.026" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-0-True-CBMonthBegin]" time="0.025" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-0-True-BMonthBegin]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-0-True-BMonthEnd]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-0-True-BusinessHour]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-0-True-BYearBegin]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-0-True-BYearEnd]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-0-True-BQuarterBegin]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-0-True-cls_and_kwargs26]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-0-True-cls_and_kwargs27]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-0-True-cls_and_kwargs28]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-0-True-cls_and_kwargs29]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-0-True-Easter]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-0-True-cls_and_kwargs31]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-0-True-cls_and_kwargs32]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-0-False-YearBegin]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-0-False-cls_and_kwargs1]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-0-False-YearEnd]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-0-False-cls_and_kwargs3]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-0-False-MonthBegin]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-0-False-MonthEnd]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-0-False-SemiMonthEnd]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-0-False-SemiMonthBegin]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-0-False-Week0]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-0-False-cls_and_kwargs9]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-0-False-Week1]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-0-False-cls_and_kwargs11]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-0-False-BusinessDay]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-0-False-BDay]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-0-False-QuarterEnd]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-0-False-QuarterBegin]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-0-False-CustomBusinessDay]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-0-False-CDay]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-0-False-CBMonthEnd]" time="0.018" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-0-False-CBMonthBegin]" time="0.018" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-0-False-BMonthBegin]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-0-False-BMonthEnd]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-0-False-BusinessHour]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-0-False-BYearBegin]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-0-False-BYearEnd]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-0-False-BQuarterBegin]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-0-False-cls_and_kwargs26]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-0-False-cls_and_kwargs27]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-0-False-cls_and_kwargs28]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-0-False-cls_and_kwargs29]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-0-False-Easter]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-0-False-cls_and_kwargs31]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-0-False-cls_and_kwargs32]" time="0.022" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-5-True-YearBegin]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-5-True-cls_and_kwargs1]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-5-True-YearEnd]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-5-True-cls_and_kwargs3]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-5-True-MonthBegin]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-5-True-MonthEnd]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-5-True-SemiMonthEnd]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-5-True-SemiMonthBegin]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-5-True-Week0]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-5-True-cls_and_kwargs9]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-5-True-Week1]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-5-True-cls_and_kwargs11]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-5-True-BusinessDay]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-5-True-BDay]" time="0.018" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-5-True-QuarterEnd]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-5-True-QuarterBegin]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-5-True-CustomBusinessDay]" time="0.067" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-5-True-CDay]" time="0.031" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-5-True-CBMonthEnd]" time="0.107" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-5-True-CBMonthBegin]" time="0.058" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-5-True-BMonthBegin]" time="0.020" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-5-True-BMonthEnd]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-5-True-BusinessHour]" time="0.030" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-5-True-BYearBegin]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-5-True-BYearEnd]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-5-True-BQuarterBegin]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-5-True-cls_and_kwargs26]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-5-True-cls_and_kwargs27]" time="0.095" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-5-True-cls_and_kwargs28]" time="0.023" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-5-True-cls_and_kwargs29]" time="0.020" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-5-True-Easter]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-5-True-cls_and_kwargs31]" time="0.029" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-5-True-cls_and_kwargs32]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-5-False-YearBegin]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-5-False-cls_and_kwargs1]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-5-False-YearEnd]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-5-False-cls_and_kwargs3]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-5-False-MonthBegin]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-5-False-MonthEnd]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-5-False-SemiMonthEnd]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-5-False-SemiMonthBegin]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-5-False-Week0]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-5-False-cls_and_kwargs9]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-5-False-Week1]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-5-False-cls_and_kwargs11]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-5-False-BusinessDay]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-5-False-BDay]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-5-False-QuarterEnd]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-5-False-QuarterBegin]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-5-False-CustomBusinessDay]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-5-False-CDay]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-5-False-CBMonthEnd]" time="0.020" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-5-False-CBMonthBegin]" time="0.023" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-5-False-BMonthBegin]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-5-False-BMonthEnd]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-5-False-BusinessHour]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-5-False-BYearBegin]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-5-False-BYearEnd]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-5-False-BQuarterBegin]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-5-False-cls_and_kwargs26]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-5-False-cls_and_kwargs27]" time="0.039" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-5-False-cls_and_kwargs28]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-5-False-cls_and_kwargs29]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-5-False-Easter]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-5-False-cls_and_kwargs31]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-s-5-False-cls_and_kwargs32]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-0-True-YearBegin]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-0-True-cls_and_kwargs1]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-0-True-YearEnd]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-0-True-cls_and_kwargs3]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-0-True-MonthBegin]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-0-True-MonthEnd]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-0-True-SemiMonthEnd]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-0-True-SemiMonthBegin]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-0-True-Week0]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-0-True-cls_and_kwargs9]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-0-True-Week1]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-0-True-cls_and_kwargs11]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-0-True-BusinessDay]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-0-True-BDay]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-0-True-QuarterEnd]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-0-True-QuarterBegin]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-0-True-CustomBusinessDay]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-0-True-CDay]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-0-True-CBMonthEnd]" time="0.020" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-0-True-CBMonthBegin]" time="0.022" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-0-True-BMonthBegin]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-0-True-BMonthEnd]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-0-True-BusinessHour]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-0-True-BYearBegin]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-0-True-BYearEnd]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-0-True-BQuarterBegin]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-0-True-cls_and_kwargs26]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-0-True-cls_and_kwargs27]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-0-True-cls_and_kwargs28]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-0-True-cls_and_kwargs29]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-0-True-Easter]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-0-True-cls_and_kwargs31]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-0-True-cls_and_kwargs32]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-0-False-YearBegin]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-0-False-cls_and_kwargs1]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-0-False-YearEnd]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-0-False-cls_and_kwargs3]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-0-False-MonthBegin]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-0-False-MonthEnd]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-0-False-SemiMonthEnd]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-0-False-SemiMonthBegin]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-0-False-Week0]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-0-False-cls_and_kwargs9]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-0-False-Week1]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-0-False-cls_and_kwargs11]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-0-False-BusinessDay]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-0-False-BDay]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-0-False-QuarterEnd]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-0-False-QuarterBegin]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-0-False-CustomBusinessDay]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-0-False-CDay]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-0-False-CBMonthEnd]" time="0.025" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-0-False-CBMonthBegin]" time="0.019" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-0-False-BMonthBegin]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-0-False-BMonthEnd]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-0-False-BusinessHour]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-0-False-BYearBegin]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-0-False-BYearEnd]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-0-False-BQuarterBegin]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-0-False-cls_and_kwargs26]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-0-False-cls_and_kwargs27]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-0-False-cls_and_kwargs28]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-0-False-cls_and_kwargs29]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-0-False-Easter]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-0-False-cls_and_kwargs31]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-0-False-cls_and_kwargs32]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-5-True-YearBegin]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-5-True-cls_and_kwargs1]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-5-True-YearEnd]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-5-True-cls_and_kwargs3]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-5-True-MonthBegin]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-5-True-MonthEnd]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-5-True-SemiMonthEnd]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-5-True-SemiMonthBegin]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-5-True-Week0]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-5-True-cls_and_kwargs9]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-5-True-Week1]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-5-True-cls_and_kwargs11]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-5-True-BusinessDay]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-5-True-BDay]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-5-True-QuarterEnd]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-5-True-QuarterBegin]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-5-True-CustomBusinessDay]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-5-True-CDay]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-5-True-CBMonthEnd]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-5-True-CBMonthBegin]" time="0.018" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-5-True-BMonthBegin]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-5-True-BMonthEnd]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-5-True-BusinessHour]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-5-True-BYearBegin]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-5-True-BYearEnd]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-5-True-BQuarterBegin]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-5-True-cls_and_kwargs26]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-5-True-cls_and_kwargs27]" time="0.052" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-5-True-cls_and_kwargs28]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-5-True-cls_and_kwargs29]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-5-True-Easter]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-5-True-cls_and_kwargs31]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-5-True-cls_and_kwargs32]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-5-False-YearBegin]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-5-False-cls_and_kwargs1]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-5-False-YearEnd]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-5-False-cls_and_kwargs3]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-5-False-MonthBegin]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-5-False-MonthEnd]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-5-False-SemiMonthEnd]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-5-False-SemiMonthBegin]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-5-False-Week0]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-5-False-cls_and_kwargs9]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-5-False-Week1]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-5-False-cls_and_kwargs11]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-5-False-BusinessDay]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-5-False-BDay]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-5-False-QuarterEnd]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-5-False-QuarterBegin]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-5-False-CustomBusinessDay]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-5-False-CDay]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-5-False-CBMonthEnd]" time="0.022" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-5-False-CBMonthBegin]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-5-False-BMonthBegin]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-5-False-BMonthEnd]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-5-False-BusinessHour]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-5-False-BYearBegin]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-5-False-BYearEnd]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-5-False-BQuarterBegin]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-5-False-cls_and_kwargs26]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-5-False-cls_and_kwargs27]" time="0.031" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-5-False-cls_and_kwargs28]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-5-False-cls_and_kwargs29]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-5-False-Easter]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-5-False-cls_and_kwargs31]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ms-5-False-cls_and_kwargs32]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-0-True-YearBegin]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-0-True-cls_and_kwargs1]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-0-True-YearEnd]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-0-True-cls_and_kwargs3]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-0-True-MonthBegin]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-0-True-MonthEnd]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-0-True-SemiMonthEnd]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-0-True-SemiMonthBegin]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-0-True-Week0]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-0-True-cls_and_kwargs9]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-0-True-Week1]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-0-True-cls_and_kwargs11]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-0-True-BusinessDay]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-0-True-BDay]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-0-True-QuarterEnd]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-0-True-QuarterBegin]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-0-True-CustomBusinessDay]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-0-True-CDay]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-0-True-CBMonthEnd]" time="0.018" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-0-True-CBMonthBegin]" time="0.019" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-0-True-BMonthBegin]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-0-True-BMonthEnd]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-0-True-BusinessHour]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-0-True-BYearBegin]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-0-True-BYearEnd]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-0-True-BQuarterBegin]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-0-True-cls_and_kwargs26]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-0-True-cls_and_kwargs27]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-0-True-cls_and_kwargs28]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-0-True-cls_and_kwargs29]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-0-True-Easter]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-0-True-cls_and_kwargs31]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-0-True-cls_and_kwargs32]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-0-False-YearBegin]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-0-False-cls_and_kwargs1]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-0-False-YearEnd]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-0-False-cls_and_kwargs3]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-0-False-MonthBegin]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-0-False-MonthEnd]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-0-False-SemiMonthEnd]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-0-False-SemiMonthBegin]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-0-False-Week0]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-0-False-cls_and_kwargs9]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-0-False-Week1]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-0-False-cls_and_kwargs11]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-0-False-BusinessDay]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-0-False-BDay]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-0-False-QuarterEnd]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-0-False-QuarterBegin]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-0-False-CustomBusinessDay]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-0-False-CDay]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-0-False-CBMonthEnd]" time="0.019" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-0-False-CBMonthBegin]" time="0.024" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-0-False-BMonthBegin]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-0-False-BMonthEnd]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-0-False-BusinessHour]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-0-False-BYearBegin]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-0-False-BYearEnd]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-0-False-BQuarterBegin]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-0-False-cls_and_kwargs26]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-0-False-cls_and_kwargs27]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-0-False-cls_and_kwargs28]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-0-False-cls_and_kwargs29]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-0-False-Easter]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-0-False-cls_and_kwargs31]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-0-False-cls_and_kwargs32]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-5-True-YearBegin]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-5-True-cls_and_kwargs1]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-5-True-YearEnd]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-5-True-cls_and_kwargs3]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-5-True-MonthBegin]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-5-True-MonthEnd]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-5-True-SemiMonthEnd]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-5-True-SemiMonthBegin]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-5-True-Week0]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-5-True-cls_and_kwargs9]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-5-True-Week1]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-5-True-cls_and_kwargs11]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-5-True-BusinessDay]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-5-True-BDay]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-5-True-QuarterEnd]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-5-True-QuarterBegin]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-5-True-CustomBusinessDay]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-5-True-CDay]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-5-True-CBMonthEnd]" time="0.023" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-5-True-CBMonthBegin]" time="0.024" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-5-True-BMonthBegin]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-5-True-BMonthEnd]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-5-True-BusinessHour]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-5-True-BYearBegin]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-5-True-BYearEnd]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-5-True-BQuarterBegin]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-5-True-cls_and_kwargs26]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-5-True-cls_and_kwargs27]" time="0.034" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-5-True-cls_and_kwargs28]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-5-True-cls_and_kwargs29]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-5-True-Easter]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-5-True-cls_and_kwargs31]" time="0.020" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-5-True-cls_and_kwargs32]" time="0.020" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-5-False-YearBegin]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-5-False-cls_and_kwargs1]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-5-False-YearEnd]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-5-False-cls_and_kwargs3]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-5-False-MonthBegin]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-5-False-MonthEnd]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-5-False-SemiMonthEnd]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-5-False-SemiMonthBegin]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-5-False-Week0]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-5-False-cls_and_kwargs9]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-5-False-Week1]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-5-False-cls_and_kwargs11]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-5-False-BusinessDay]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-5-False-BDay]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-5-False-QuarterEnd]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-5-False-QuarterBegin]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-5-False-CustomBusinessDay]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-5-False-CDay]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-5-False-CBMonthEnd]" time="0.020" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-5-False-CBMonthBegin]" time="0.034" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-5-False-BMonthBegin]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-5-False-BMonthEnd]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-5-False-BusinessHour]" time="0.018" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-5-False-BYearBegin]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-5-False-BYearEnd]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-5-False-BQuarterBegin]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-5-False-cls_and_kwargs26]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-5-False-cls_and_kwargs27]" time="0.042" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-5-False-cls_and_kwargs28]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-5-False-cls_and_kwargs29]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-5-False-Easter]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-5-False-cls_and_kwargs31]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-us-5-False-cls_and_kwargs32]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-0-True-YearBegin]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-0-True-cls_and_kwargs1]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-0-True-YearEnd]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-0-True-cls_and_kwargs3]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-0-True-MonthBegin]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-0-True-MonthEnd]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-0-True-SemiMonthEnd]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-0-True-SemiMonthBegin]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-0-True-Week0]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-0-True-cls_and_kwargs9]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-0-True-Week1]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-0-True-cls_and_kwargs11]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-0-True-BusinessDay]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-0-True-BDay]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-0-True-QuarterEnd]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-0-True-QuarterBegin]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-0-True-CustomBusinessDay]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-0-True-CDay]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-0-True-CBMonthEnd]" time="0.020" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-0-True-CBMonthBegin]" time="0.024" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-0-True-BMonthBegin]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-0-True-BMonthEnd]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-0-True-BusinessHour]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-0-True-BYearBegin]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-0-True-BYearEnd]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-0-True-BQuarterBegin]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-0-True-cls_and_kwargs26]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-0-True-cls_and_kwargs27]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-0-True-cls_and_kwargs28]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-0-True-cls_and_kwargs29]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-0-True-Easter]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-0-True-cls_and_kwargs31]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-0-True-cls_and_kwargs32]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-0-False-YearBegin]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-0-False-cls_and_kwargs1]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-0-False-YearEnd]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-0-False-cls_and_kwargs3]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-0-False-MonthBegin]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-0-False-MonthEnd]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-0-False-SemiMonthEnd]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-0-False-SemiMonthBegin]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-0-False-Week0]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-0-False-cls_and_kwargs9]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-0-False-Week1]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-0-False-cls_and_kwargs11]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-0-False-BusinessDay]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-0-False-BDay]" time="0.033" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-0-False-QuarterEnd]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-0-False-QuarterBegin]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-0-False-CustomBusinessDay]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-0-False-CDay]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-0-False-CBMonthEnd]" time="0.024" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-0-False-CBMonthBegin]" time="0.028" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-0-False-BMonthBegin]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-0-False-BMonthEnd]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-0-False-BusinessHour]" time="0.018" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-0-False-BYearBegin]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-0-False-BYearEnd]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-0-False-BQuarterBegin]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-0-False-cls_and_kwargs26]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-0-False-cls_and_kwargs27]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-0-False-cls_and_kwargs28]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-0-False-cls_and_kwargs29]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-0-False-Easter]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-0-False-cls_and_kwargs31]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-0-False-cls_and_kwargs32]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-5-True-YearBegin]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-5-True-cls_and_kwargs1]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-5-True-YearEnd]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-5-True-cls_and_kwargs3]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-5-True-MonthBegin]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-5-True-MonthEnd]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-5-True-SemiMonthEnd]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-5-True-SemiMonthBegin]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-5-True-Week0]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-5-True-cls_and_kwargs9]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-5-True-Week1]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-5-True-cls_and_kwargs11]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-5-True-BusinessDay]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-5-True-BDay]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-5-True-QuarterEnd]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-5-True-QuarterBegin]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-5-True-CustomBusinessDay]" time="0.019" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-5-True-CDay]" time="0.021" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-5-True-CBMonthEnd]" time="0.028" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-5-True-CBMonthBegin]" time="0.024" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-5-True-BMonthBegin]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-5-True-BMonthEnd]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-5-True-BusinessHour]" time="0.028" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-5-True-BYearBegin]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-5-True-BYearEnd]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-5-True-BQuarterBegin]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-5-True-cls_and_kwargs26]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-5-True-cls_and_kwargs27]" time="0.033" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-5-True-cls_and_kwargs28]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-5-True-cls_and_kwargs29]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-5-True-Easter]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-5-True-cls_and_kwargs31]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-5-True-cls_and_kwargs32]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-5-False-YearBegin]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-5-False-cls_and_kwargs1]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-5-False-YearEnd]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-5-False-cls_and_kwargs3]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-5-False-MonthBegin]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-5-False-MonthEnd]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-5-False-SemiMonthEnd]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-5-False-SemiMonthBegin]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-5-False-Week0]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-5-False-cls_and_kwargs9]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-5-False-Week1]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-5-False-cls_and_kwargs11]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-5-False-BusinessDay]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-5-False-BDay]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-5-False-QuarterEnd]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-5-False-QuarterBegin]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-5-False-CustomBusinessDay]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-5-False-CDay]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-5-False-CBMonthEnd]" time="0.031" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-5-False-CBMonthBegin]" time="0.040" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-5-False-BMonthBegin]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-5-False-BMonthEnd]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-5-False-BusinessHour]" time="0.024" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-5-False-BYearBegin]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-5-False-BYearEnd]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-5-False-BQuarterBegin]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-5-False-cls_and_kwargs26]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-5-False-cls_and_kwargs27]" time="0.053" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-5-False-cls_and_kwargs28]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-5-False-cls_and_kwargs29]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-5-False-Easter]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-5-False-cls_and_kwargs31]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-None-ns-5-False-cls_and_kwargs32]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-0-True-YearBegin]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-0-True-cls_and_kwargs1]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-0-True-YearEnd]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-0-True-cls_and_kwargs3]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-0-True-MonthBegin]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-0-True-MonthEnd]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-0-True-SemiMonthEnd]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-0-True-SemiMonthBegin]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-0-True-Week0]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-0-True-cls_and_kwargs9]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-0-True-Week1]" time="0.018" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-0-True-cls_and_kwargs11]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-0-True-BusinessDay]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-0-True-BDay]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-0-True-QuarterEnd]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-0-True-QuarterBegin]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-0-True-CustomBusinessDay]" time="0.030" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-0-True-CDay]" time="0.032" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-0-True-CBMonthEnd]" time="0.049" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-0-True-CBMonthBegin]" time="0.032" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-0-True-BMonthBegin]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-0-True-BMonthEnd]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-0-True-BusinessHour]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-0-True-BYearBegin]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-0-True-BYearEnd]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-0-True-BQuarterBegin]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-0-True-cls_and_kwargs26]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-0-True-cls_and_kwargs27]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-0-True-cls_and_kwargs28]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-0-True-cls_and_kwargs29]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-0-True-Easter]" time="0.018" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-0-True-cls_and_kwargs31]" time="0.023" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-0-True-cls_and_kwargs32]" time="0.021" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-0-False-YearBegin]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-0-False-cls_and_kwargs1]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-0-False-YearEnd]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-0-False-cls_and_kwargs3]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-0-False-MonthBegin]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-0-False-MonthEnd]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-0-False-SemiMonthEnd]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-0-False-SemiMonthBegin]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-0-False-Week0]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-0-False-cls_and_kwargs9]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-0-False-Week1]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-0-False-cls_and_kwargs11]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-0-False-BusinessDay]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-0-False-BDay]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-0-False-QuarterEnd]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-0-False-QuarterBegin]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-0-False-CustomBusinessDay]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-0-False-CDay]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-0-False-CBMonthEnd]" time="0.045" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-0-False-CBMonthBegin]" time="0.062" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-0-False-BMonthBegin]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-0-False-BMonthEnd]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-0-False-BusinessHour]" time="0.032" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-0-False-BYearBegin]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-0-False-BYearEnd]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-0-False-BQuarterBegin]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-0-False-cls_and_kwargs26]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-0-False-cls_and_kwargs27]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-0-False-cls_and_kwargs28]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-0-False-cls_and_kwargs29]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-0-False-Easter]" time="0.040" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-0-False-cls_and_kwargs31]" time="0.025" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-0-False-cls_and_kwargs32]" time="0.024" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-5-True-YearBegin]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-5-True-cls_and_kwargs1]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-5-True-YearEnd]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-5-True-cls_and_kwargs3]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-5-True-MonthBegin]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-5-True-MonthEnd]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-5-True-SemiMonthEnd]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-5-True-SemiMonthBegin]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-5-True-Week0]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-5-True-cls_and_kwargs9]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-5-True-Week1]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-5-True-cls_and_kwargs11]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-5-True-BusinessDay]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-5-True-BDay]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-5-True-QuarterEnd]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-5-True-QuarterBegin]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-5-True-CustomBusinessDay]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-5-True-CDay]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-5-True-CBMonthEnd]" time="0.025" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-5-True-CBMonthBegin]" time="0.029" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-5-True-BMonthBegin]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-5-True-BMonthEnd]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-5-True-BusinessHour]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-5-True-BYearBegin]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-5-True-BYearEnd]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-5-True-BQuarterBegin]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-5-True-cls_and_kwargs26]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-5-True-cls_and_kwargs27]" time="0.050" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-5-True-cls_and_kwargs28]" time="0.024" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-5-True-cls_and_kwargs29]" time="0.018" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-5-True-Easter]" time="0.020" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-5-True-cls_and_kwargs31]" time="0.019" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-5-True-cls_and_kwargs32]" time="0.020" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-5-False-YearBegin]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-5-False-cls_and_kwargs1]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-5-False-YearEnd]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-5-False-cls_and_kwargs3]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-5-False-MonthBegin]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-5-False-MonthEnd]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-5-False-SemiMonthEnd]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-5-False-SemiMonthBegin]" time="0.029" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-5-False-Week0]" time="0.020" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-5-False-cls_and_kwargs9]" time="0.034" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-5-False-Week1]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-5-False-cls_and_kwargs11]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-5-False-BusinessDay]" time="0.021" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-5-False-BDay]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-5-False-QuarterEnd]" time="0.021" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-5-False-QuarterBegin]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-5-False-CustomBusinessDay]" time="0.023" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-5-False-CDay]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-5-False-CBMonthEnd]" time="0.034" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-5-False-CBMonthBegin]" time="0.032" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-5-False-BMonthBegin]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-5-False-BMonthEnd]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-5-False-BusinessHour]" time="0.037" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-5-False-BYearBegin]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-5-False-BYearEnd]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-5-False-BQuarterBegin]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-5-False-cls_and_kwargs26]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-5-False-cls_and_kwargs27]" time="0.041" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-5-False-cls_and_kwargs28]" time="0.024" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-5-False-cls_and_kwargs29]" time="0.027" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-5-False-Easter]" time="0.023" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-5-False-cls_and_kwargs31]" time="0.033" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-s-5-False-cls_and_kwargs32]" time="0.034" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-0-True-YearBegin]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-0-True-cls_and_kwargs1]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-0-True-YearEnd]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-0-True-cls_and_kwargs3]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-0-True-MonthBegin]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-0-True-MonthEnd]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-0-True-SemiMonthEnd]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-0-True-SemiMonthBegin]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-0-True-Week0]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-0-True-cls_and_kwargs9]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-0-True-Week1]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-0-True-cls_and_kwargs11]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-0-True-BusinessDay]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-0-True-BDay]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-0-True-QuarterEnd]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-0-True-QuarterBegin]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-0-True-CustomBusinessDay]" time="0.020" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-0-True-CDay]" time="0.025" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-0-True-CBMonthEnd]" time="0.033" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-0-True-CBMonthBegin]" time="0.036" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-0-True-BMonthBegin]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-0-True-BMonthEnd]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-0-True-BusinessHour]" time="0.020" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-0-True-BYearBegin]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-0-True-BYearEnd]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-0-True-BQuarterBegin]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-0-True-cls_and_kwargs26]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-0-True-cls_and_kwargs27]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-0-True-cls_and_kwargs28]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-0-True-cls_and_kwargs29]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-0-True-Easter]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-0-True-cls_and_kwargs31]" time="0.024" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-0-True-cls_and_kwargs32]" time="0.027" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-0-False-YearBegin]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-0-False-cls_and_kwargs1]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-0-False-YearEnd]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-0-False-cls_and_kwargs3]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-0-False-MonthBegin]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-0-False-MonthEnd]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-0-False-SemiMonthEnd]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-0-False-SemiMonthBegin]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-0-False-Week0]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-0-False-cls_and_kwargs9]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-0-False-Week1]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-0-False-cls_and_kwargs11]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-0-False-BusinessDay]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-0-False-BDay]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-0-False-QuarterEnd]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-0-False-QuarterBegin]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-0-False-CustomBusinessDay]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-0-False-CDay]" time="0.019" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-0-False-CBMonthEnd]" time="0.025" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-0-False-CBMonthBegin]" time="0.028" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-0-False-BMonthBegin]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-0-False-BMonthEnd]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-0-False-BusinessHour]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-0-False-BYearBegin]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-0-False-BYearEnd]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-0-False-BQuarterBegin]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-0-False-cls_and_kwargs26]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-0-False-cls_and_kwargs27]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-0-False-cls_and_kwargs28]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-0-False-cls_and_kwargs29]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-0-False-Easter]" time="0.020" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-0-False-cls_and_kwargs31]" time="0.032" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-0-False-cls_and_kwargs32]" time="0.033" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-5-True-YearBegin]" time="0.018" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-5-True-cls_and_kwargs1]" time="0.023" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-5-True-YearEnd]" time="0.023" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-5-True-cls_and_kwargs3]" time="0.026" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-5-True-MonthBegin]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-5-True-MonthEnd]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-5-True-SemiMonthEnd]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-5-True-SemiMonthBegin]" time="0.020" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-5-True-Week0]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-5-True-cls_and_kwargs9]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-5-True-Week1]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-5-True-cls_and_kwargs11]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-5-True-BusinessDay]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-5-True-BDay]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-5-True-QuarterEnd]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-5-True-QuarterBegin]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-5-True-CustomBusinessDay]" time="0.022" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-5-True-CDay]" time="0.021" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-5-True-CBMonthEnd]" time="0.034" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-5-True-CBMonthBegin]" time="0.029" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-5-True-BMonthBegin]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-5-True-BMonthEnd]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-5-True-BusinessHour]" time="0.020" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-5-True-BYearBegin]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-5-True-BYearEnd]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-5-True-BQuarterBegin]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-5-True-cls_and_kwargs26]" time="0.019" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-5-True-cls_and_kwargs27]" time="0.055" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-5-True-cls_and_kwargs28]" time="0.019" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-5-True-cls_and_kwargs29]" time="0.018" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-5-True-Easter]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-5-True-cls_and_kwargs31]" time="0.019" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-5-True-cls_and_kwargs32]" time="0.019" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-5-False-YearBegin]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-5-False-cls_and_kwargs1]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-5-False-YearEnd]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-5-False-cls_and_kwargs3]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-5-False-MonthBegin]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-5-False-MonthEnd]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-5-False-SemiMonthEnd]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-5-False-SemiMonthBegin]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-5-False-Week0]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-5-False-cls_and_kwargs9]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-5-False-Week1]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-5-False-cls_and_kwargs11]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-5-False-BusinessDay]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-5-False-BDay]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-5-False-QuarterEnd]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-5-False-QuarterBegin]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-5-False-CustomBusinessDay]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-5-False-CDay]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-5-False-CBMonthEnd]" time="0.023" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-5-False-CBMonthBegin]" time="0.025" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-5-False-BMonthBegin]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-5-False-BMonthEnd]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-5-False-BusinessHour]" time="0.021" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-5-False-BYearBegin]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-5-False-BYearEnd]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-5-False-BQuarterBegin]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-5-False-cls_and_kwargs26]" time="0.022" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-5-False-cls_and_kwargs27]" time="0.062" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-5-False-cls_and_kwargs28]" time="0.022" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-5-False-cls_and_kwargs29]" time="0.023" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-5-False-Easter]" time="0.019" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-5-False-cls_and_kwargs31]" time="0.020" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ms-5-False-cls_and_kwargs32]" time="0.019" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-0-True-YearBegin]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-0-True-cls_and_kwargs1]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-0-True-YearEnd]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-0-True-cls_and_kwargs3]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-0-True-MonthBegin]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-0-True-MonthEnd]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-0-True-SemiMonthEnd]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-0-True-SemiMonthBegin]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-0-True-Week0]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-0-True-cls_and_kwargs9]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-0-True-Week1]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-0-True-cls_and_kwargs11]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-0-True-BusinessDay]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-0-True-BDay]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-0-True-QuarterEnd]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-0-True-QuarterBegin]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-0-True-CustomBusinessDay]" time="0.019" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-0-True-CDay]" time="0.019" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-0-True-CBMonthEnd]" time="0.028" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-0-True-CBMonthBegin]" time="0.037" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-0-True-BMonthBegin]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-0-True-BMonthEnd]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-0-True-BusinessHour]" time="0.039" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-0-True-BYearBegin]" time="0.027" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-0-True-BYearEnd]" time="0.026" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-0-True-BQuarterBegin]" time="0.042" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-0-True-cls_and_kwargs26]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-0-True-cls_and_kwargs27]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-0-True-cls_and_kwargs28]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-0-True-cls_and_kwargs29]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-0-True-Easter]" time="0.051" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-0-True-cls_and_kwargs31]" time="0.034" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-0-True-cls_and_kwargs32]" time="0.035" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-0-False-YearBegin]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-0-False-cls_and_kwargs1]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-0-False-YearEnd]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-0-False-cls_and_kwargs3]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-0-False-MonthBegin]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-0-False-MonthEnd]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-0-False-SemiMonthEnd]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-0-False-SemiMonthBegin]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-0-False-Week0]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-0-False-cls_and_kwargs9]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-0-False-Week1]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-0-False-cls_and_kwargs11]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-0-False-BusinessDay]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-0-False-BDay]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-0-False-QuarterEnd]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-0-False-QuarterBegin]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-0-False-CustomBusinessDay]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-0-False-CDay]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-0-False-CBMonthEnd]" time="0.025" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-0-False-CBMonthBegin]" time="0.041" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-0-False-BMonthBegin]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-0-False-BMonthEnd]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-0-False-BusinessHour]" time="0.026" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-0-False-BYearBegin]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-0-False-BYearEnd]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-0-False-BQuarterBegin]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-0-False-cls_and_kwargs26]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-0-False-cls_and_kwargs27]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-0-False-cls_and_kwargs28]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-0-False-cls_and_kwargs29]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-0-False-Easter]" time="0.020" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-0-False-cls_and_kwargs31]" time="0.023" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-0-False-cls_and_kwargs32]" time="0.026" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-5-True-YearBegin]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-5-True-cls_and_kwargs1]" time="0.021" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-5-True-YearEnd]" time="0.024" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-5-True-cls_and_kwargs3]" time="0.022" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-5-True-MonthBegin]" time="0.018" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-5-True-MonthEnd]" time="0.020" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-5-True-SemiMonthEnd]" time="0.019" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-5-True-SemiMonthBegin]" time="0.023" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-5-True-Week0]" time="0.028" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-5-True-cls_and_kwargs9]" time="0.022" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-5-True-Week1]" time="0.029" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-5-True-cls_and_kwargs11]" time="0.021" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-5-True-BusinessDay]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-5-True-BDay]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-5-True-QuarterEnd]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-5-True-QuarterBegin]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-5-True-CustomBusinessDay]" time="0.028" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-5-True-CDay]" time="0.038" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-5-True-CBMonthEnd]" time="0.041" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-5-True-CBMonthBegin]" time="0.048" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-5-True-BMonthBegin]" time="0.018" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-5-True-BMonthEnd]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-5-True-BusinessHour]" time="0.029" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-5-True-BYearBegin]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-5-True-BYearEnd]" time="0.019" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-5-True-BQuarterBegin]" time="0.018" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-5-True-cls_and_kwargs26]" time="0.032" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-5-True-cls_and_kwargs27]" time="0.068" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-5-True-cls_and_kwargs28]" time="0.031" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-5-True-cls_and_kwargs29]" time="0.026" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-5-True-Easter]" time="0.026" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-5-True-cls_and_kwargs31]" time="0.024" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-5-True-cls_and_kwargs32]" time="0.025" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-5-False-YearBegin]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-5-False-cls_and_kwargs1]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-5-False-YearEnd]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-5-False-cls_and_kwargs3]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-5-False-MonthBegin]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-5-False-MonthEnd]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-5-False-SemiMonthEnd]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-5-False-SemiMonthBegin]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-5-False-Week0]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-5-False-cls_and_kwargs9]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-5-False-Week1]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-5-False-cls_and_kwargs11]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-5-False-BusinessDay]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-5-False-BDay]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-5-False-QuarterEnd]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-5-False-QuarterBegin]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-5-False-CustomBusinessDay]" time="0.018" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-5-False-CDay]" time="0.020" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-5-False-CBMonthEnd]" time="0.029" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-5-False-CBMonthBegin]" time="0.039" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-5-False-BMonthBegin]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-5-False-BMonthEnd]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-5-False-BusinessHour]" time="0.029" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-5-False-BYearBegin]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-5-False-BYearEnd]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-5-False-BQuarterBegin]" time="0.023" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-5-False-cls_and_kwargs26]" time="0.027" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-5-False-cls_and_kwargs27]" time="0.111" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-5-False-cls_and_kwargs28]" time="0.047" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-5-False-cls_and_kwargs29]" time="0.033" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-5-False-Easter]" time="0.029" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-5-False-cls_and_kwargs31]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-us-5-False-cls_and_kwargs32]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-0-True-YearBegin]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-0-True-cls_and_kwargs1]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-0-True-YearEnd]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-0-True-cls_and_kwargs3]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-0-True-MonthBegin]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-0-True-MonthEnd]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-0-True-SemiMonthEnd]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-0-True-SemiMonthBegin]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-0-True-Week0]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-0-True-cls_and_kwargs9]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-0-True-Week1]" time="0.021" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-0-True-cls_and_kwargs11]" time="0.019" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-0-True-BusinessDay]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-0-True-BDay]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-0-True-QuarterEnd]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-0-True-QuarterBegin]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-0-True-CustomBusinessDay]" time="0.028" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-0-True-CDay]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-0-True-CBMonthEnd]" time="0.022" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-0-True-CBMonthBegin]" time="0.025" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-0-True-BMonthBegin]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-0-True-BMonthEnd]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-0-True-BusinessHour]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-0-True-BYearBegin]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-0-True-BYearEnd]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-0-True-BQuarterBegin]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-0-True-cls_and_kwargs26]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-0-True-cls_and_kwargs27]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-0-True-cls_and_kwargs28]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-0-True-cls_and_kwargs29]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-0-True-Easter]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-0-True-cls_and_kwargs31]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-0-True-cls_and_kwargs32]" time="0.018" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-0-False-YearBegin]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-0-False-cls_and_kwargs1]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-0-False-YearEnd]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-0-False-cls_and_kwargs3]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-0-False-MonthBegin]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-0-False-MonthEnd]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-0-False-SemiMonthEnd]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-0-False-SemiMonthBegin]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-0-False-Week0]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-0-False-cls_and_kwargs9]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-0-False-Week1]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-0-False-cls_and_kwargs11]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-0-False-BusinessDay]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-0-False-BDay]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-0-False-QuarterEnd]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-0-False-QuarterBegin]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-0-False-CustomBusinessDay]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-0-False-CDay]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-0-False-CBMonthEnd]" time="0.019" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-0-False-CBMonthBegin]" time="0.022" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-0-False-BMonthBegin]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-0-False-BMonthEnd]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-0-False-BusinessHour]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-0-False-BYearBegin]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-0-False-BYearEnd]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-0-False-BQuarterBegin]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-0-False-cls_and_kwargs26]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-0-False-cls_and_kwargs27]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-0-False-cls_and_kwargs28]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-0-False-cls_and_kwargs29]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-0-False-Easter]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-0-False-cls_and_kwargs31]" time="0.019" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-0-False-cls_and_kwargs32]" time="0.021" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-5-True-YearBegin]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-5-True-cls_and_kwargs1]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-5-True-YearEnd]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-5-True-cls_and_kwargs3]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-5-True-MonthBegin]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-5-True-MonthEnd]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-5-True-SemiMonthEnd]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-5-True-SemiMonthBegin]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-5-True-Week0]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-5-True-cls_and_kwargs9]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-5-True-Week1]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-5-True-cls_and_kwargs11]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-5-True-BusinessDay]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-5-True-BDay]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-5-True-QuarterEnd]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-5-True-QuarterBegin]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-5-True-CustomBusinessDay]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-5-True-CDay]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-5-True-CBMonthEnd]" time="0.019" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-5-True-CBMonthBegin]" time="0.021" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-5-True-BMonthBegin]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-5-True-BMonthEnd]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-5-True-BusinessHour]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-5-True-BYearBegin]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-5-True-BYearEnd]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-5-True-BQuarterBegin]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-5-True-cls_and_kwargs26]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-5-True-cls_and_kwargs27]" time="0.069" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-5-True-cls_and_kwargs28]" time="0.024" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-5-True-cls_and_kwargs29]" time="0.019" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-5-True-Easter]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-5-True-cls_and_kwargs31]" time="0.024" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-5-True-cls_and_kwargs32]" time="0.024" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-5-False-YearBegin]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-5-False-cls_and_kwargs1]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-5-False-YearEnd]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-5-False-cls_and_kwargs3]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-5-False-MonthBegin]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-5-False-MonthEnd]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-5-False-SemiMonthEnd]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-5-False-SemiMonthBegin]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-5-False-Week0]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-5-False-cls_and_kwargs9]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-5-False-Week1]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-5-False-cls_and_kwargs11]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-5-False-BusinessDay]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-5-False-BDay]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-5-False-QuarterEnd]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-5-False-QuarterBegin]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-5-False-CustomBusinessDay]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-5-False-CDay]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-5-False-CBMonthEnd]" time="0.020" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-5-False-CBMonthBegin]" time="0.020" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-5-False-BMonthBegin]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-5-False-BMonthEnd]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-5-False-BusinessHour]" time="0.018" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-5-False-BYearBegin]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-5-False-BYearEnd]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-5-False-BQuarterBegin]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-5-False-cls_and_kwargs26]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-5-False-cls_and_kwargs27]" time="0.042" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-5-False-cls_and_kwargs28]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-5-False-cls_and_kwargs29]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-5-False-Easter]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-5-False-cls_and_kwargs31]" time="0.019" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[Series-US/Central-ns-5-False-cls_and_kwargs32]" time="0.020" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-0-True-YearBegin]" time="0.018" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-0-True-cls_and_kwargs1]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-0-True-YearEnd]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-0-True-cls_and_kwargs3]" time="0.024" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-0-True-MonthBegin]" time="0.019" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-0-True-MonthEnd]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-0-True-SemiMonthEnd]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-0-True-SemiMonthBegin]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-0-True-Week0]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-0-True-cls_and_kwargs9]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-0-True-Week1]" time="0.018" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-0-True-cls_and_kwargs11]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-0-True-BusinessDay]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-0-True-BDay]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-0-True-QuarterEnd]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-0-True-QuarterBegin]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-0-True-CustomBusinessDay]" time="0.024" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-0-True-CDay]" time="0.021" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-0-True-CBMonthEnd]" time="0.048" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-0-True-CBMonthBegin]" time="0.062" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-0-True-BMonthBegin]" time="0.032" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-0-True-BMonthEnd]" time="0.022" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-0-True-BusinessHour]" time="0.034" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-0-True-BYearBegin]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-0-True-BYearEnd]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-0-True-BQuarterBegin]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-0-True-cls_and_kwargs26]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-0-True-cls_and_kwargs27]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-0-True-cls_and_kwargs28]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-0-True-cls_and_kwargs29]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-0-True-Easter]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-0-True-cls_and_kwargs31]" time="0.020" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-0-True-cls_and_kwargs32]" time="0.018" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-0-False-YearBegin]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-0-False-cls_and_kwargs1]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-0-False-YearEnd]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-0-False-cls_and_kwargs3]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-0-False-MonthBegin]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-0-False-MonthEnd]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-0-False-SemiMonthEnd]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-0-False-SemiMonthBegin]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-0-False-Week0]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-0-False-cls_and_kwargs9]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-0-False-Week1]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-0-False-cls_and_kwargs11]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-0-False-BusinessDay]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-0-False-BDay]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-0-False-QuarterEnd]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-0-False-QuarterBegin]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-0-False-CustomBusinessDay]" time="0.020" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-0-False-CDay]" time="0.021" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-0-False-CBMonthEnd]" time="0.033" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-0-False-CBMonthBegin]" time="0.036" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-0-False-BMonthBegin]" time="0.018" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-0-False-BMonthEnd]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-0-False-BusinessHour]" time="0.038" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-0-False-BYearBegin]" time="0.019" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-0-False-BYearEnd]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-0-False-BQuarterBegin]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-0-False-cls_and_kwargs26]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-0-False-cls_and_kwargs27]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-0-False-cls_and_kwargs28]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-0-False-cls_and_kwargs29]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-0-False-Easter]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-0-False-cls_and_kwargs31]" time="0.018" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-0-False-cls_and_kwargs32]" time="0.018" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-5-True-YearBegin]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-5-True-cls_and_kwargs1]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-5-True-YearEnd]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-5-True-cls_and_kwargs3]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-5-True-MonthBegin]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-5-True-MonthEnd]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-5-True-SemiMonthEnd]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-5-True-SemiMonthBegin]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-5-True-Week0]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-5-True-cls_and_kwargs9]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-5-True-Week1]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-5-True-cls_and_kwargs11]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-5-True-BusinessDay]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-5-True-BDay]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-5-True-QuarterEnd]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-5-True-QuarterBegin]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-5-True-CustomBusinessDay]" time="0.036" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-5-True-CDay]" time="0.033" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-5-True-CBMonthEnd]" time="0.044" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-5-True-CBMonthBegin]" time="0.054" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-5-True-BMonthBegin]" time="0.040" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-5-True-BMonthEnd]" time="0.019" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-5-True-BusinessHour]" time="0.038" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-5-True-BYearBegin]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-5-True-BYearEnd]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-5-True-BQuarterBegin]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-5-True-cls_and_kwargs26]" time="0.023" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-5-True-cls_and_kwargs27]" time="0.066" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-5-True-cls_and_kwargs28]" time="0.018" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-5-True-cls_and_kwargs29]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-5-True-Easter]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-5-True-cls_and_kwargs31]" time="0.018" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-5-True-cls_and_kwargs32]" time="0.018" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-5-False-YearBegin]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-5-False-cls_and_kwargs1]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-5-False-YearEnd]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-5-False-cls_and_kwargs3]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-5-False-MonthBegin]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-5-False-MonthEnd]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-5-False-SemiMonthEnd]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-5-False-SemiMonthBegin]" time="0.018" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-5-False-Week0]" time="0.024" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-5-False-cls_and_kwargs9]" time="0.020" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-5-False-Week1]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-5-False-cls_and_kwargs11]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-5-False-BusinessDay]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-5-False-BDay]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-5-False-QuarterEnd]" time="0.019" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-5-False-QuarterBegin]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-5-False-CustomBusinessDay]" time="0.019" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-5-False-CDay]" time="0.024" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-5-False-CBMonthEnd]" time="0.034" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-5-False-CBMonthBegin]" time="0.038" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-5-False-BMonthBegin]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-5-False-BMonthEnd]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-5-False-BusinessHour]" time="0.026" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-5-False-BYearBegin]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-5-False-BYearEnd]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-5-False-BQuarterBegin]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-5-False-cls_and_kwargs26]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-5-False-cls_and_kwargs27]" time="0.091" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-5-False-cls_and_kwargs28]" time="0.046" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-5-False-cls_and_kwargs29]" time="0.036" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-5-False-Easter]" time="0.032" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-5-False-cls_and_kwargs31]" time="0.055" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-s-5-False-cls_and_kwargs32]" time="0.046" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-0-True-YearBegin]" time="0.021" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-0-True-cls_and_kwargs1]" time="0.018" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-0-True-YearEnd]" time="0.029" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-0-True-cls_and_kwargs3]" time="0.041" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-0-True-MonthBegin]" time="0.032" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-0-True-MonthEnd]" time="0.027" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-0-True-SemiMonthEnd]" time="0.024" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-0-True-SemiMonthBegin]" time="0.025" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-0-True-Week0]" time="0.026" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-0-True-cls_and_kwargs9]" time="0.032" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-0-True-Week1]" time="0.022" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-0-True-cls_and_kwargs11]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-0-True-BusinessDay]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-0-True-BDay]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-0-True-QuarterEnd]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-0-True-QuarterBegin]" time="0.021" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-0-True-CustomBusinessDay]" time="0.032" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-0-True-CDay]" time="0.032" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-0-True-CBMonthEnd]" time="0.057" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-0-True-CBMonthBegin]" time="0.057" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-0-True-BMonthBegin]" time="0.024" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-0-True-BMonthEnd]" time="0.027" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-0-True-BusinessHour]" time="0.044" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-0-True-BYearBegin]" time="0.024" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-0-True-BYearEnd]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-0-True-BQuarterBegin]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-0-True-cls_and_kwargs26]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-0-True-cls_and_kwargs27]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-0-True-cls_and_kwargs28]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-0-True-cls_and_kwargs29]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-0-True-Easter]" time="0.027" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-0-True-cls_and_kwargs31]" time="0.037" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-0-True-cls_and_kwargs32]" time="0.031" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-0-False-YearBegin]" time="0.020" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-0-False-cls_and_kwargs1]" time="0.021" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-0-False-YearEnd]" time="0.021" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-0-False-cls_and_kwargs3]" time="0.022" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-0-False-MonthBegin]" time="0.028" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-0-False-MonthEnd]" time="0.029" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-0-False-SemiMonthEnd]" time="0.029" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-0-False-SemiMonthBegin]" time="0.033" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-0-False-Week0]" time="0.019" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-0-False-cls_and_kwargs9]" time="0.025" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-0-False-Week1]" time="0.020" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-0-False-cls_and_kwargs11]" time="0.029" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-0-False-BusinessDay]" time="0.031" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-0-False-BDay]" time="0.030" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-0-False-QuarterEnd]" time="0.048" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-0-False-QuarterBegin]" time="0.022" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-0-False-CustomBusinessDay]" time="0.057" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-0-False-CDay]" time="0.046" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-0-False-CBMonthEnd]" time="0.056" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-0-False-CBMonthBegin]" time="0.076" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-0-False-BMonthBegin]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-0-False-BMonthEnd]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-0-False-BusinessHour]" time="0.030" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-0-False-BYearBegin]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-0-False-BYearEnd]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-0-False-BQuarterBegin]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-0-False-cls_and_kwargs26]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-0-False-cls_and_kwargs27]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-0-False-cls_and_kwargs28]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-0-False-cls_and_kwargs29]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-0-False-Easter]" time="0.019" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-0-False-cls_and_kwargs31]" time="0.021" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-0-False-cls_and_kwargs32]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-5-True-YearBegin]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-5-True-cls_and_kwargs1]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-5-True-YearEnd]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-5-True-cls_and_kwargs3]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-5-True-MonthBegin]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-5-True-MonthEnd]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-5-True-SemiMonthEnd]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-5-True-SemiMonthBegin]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-5-True-Week0]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-5-True-cls_and_kwargs9]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-5-True-Week1]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-5-True-cls_and_kwargs11]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-5-True-BusinessDay]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-5-True-BDay]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-5-True-QuarterEnd]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-5-True-QuarterBegin]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-5-True-CustomBusinessDay]" time="0.032" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-5-True-CDay]" time="0.027" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-5-True-CBMonthEnd]" time="0.028" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-5-True-CBMonthBegin]" time="0.028" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-5-True-BMonthBegin]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-5-True-BMonthEnd]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-5-True-BusinessHour]" time="0.025" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-5-True-BYearBegin]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-5-True-BYearEnd]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-5-True-BQuarterBegin]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-5-True-cls_and_kwargs26]" time="0.025" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-5-True-cls_and_kwargs27]" time="0.071" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-5-True-cls_and_kwargs28]" time="0.033" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-5-True-cls_and_kwargs29]" time="0.030" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-5-True-Easter]" time="0.021" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-5-True-cls_and_kwargs31]" time="0.028" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-5-True-cls_and_kwargs32]" time="0.025" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-5-False-YearBegin]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-5-False-cls_and_kwargs1]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-5-False-YearEnd]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-5-False-cls_and_kwargs3]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-5-False-MonthBegin]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-5-False-MonthEnd]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-5-False-SemiMonthEnd]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-5-False-SemiMonthBegin]" time="0.018" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-5-False-Week0]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-5-False-cls_and_kwargs9]" time="0.019" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-5-False-Week1]" time="0.018" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-5-False-cls_and_kwargs11]" time="0.020" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-5-False-BusinessDay]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-5-False-BDay]" time="0.019" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-5-False-QuarterEnd]" time="0.019" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-5-False-QuarterBegin]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-5-False-CustomBusinessDay]" time="0.030" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-5-False-CDay]" time="0.046" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-5-False-CBMonthEnd]" time="0.069" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-5-False-CBMonthBegin]" time="0.064" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-5-False-BMonthBegin]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-5-False-BMonthEnd]" time="0.031" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-5-False-BusinessHour]" time="0.048" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-5-False-BYearBegin]" time="0.022" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-5-False-BYearEnd]" time="0.018" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-5-False-BQuarterBegin]" time="0.020" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-5-False-cls_and_kwargs26]" time="0.033" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-5-False-cls_and_kwargs27]" time="0.075" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-5-False-cls_and_kwargs28]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-5-False-cls_and_kwargs29]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-5-False-Easter]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-5-False-cls_and_kwargs31]" time="0.020" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ms-5-False-cls_and_kwargs32]" time="0.022" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-0-True-YearBegin]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-0-True-cls_and_kwargs1]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-0-True-YearEnd]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-0-True-cls_and_kwargs3]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-0-True-MonthBegin]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-0-True-MonthEnd]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-0-True-SemiMonthEnd]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-0-True-SemiMonthBegin]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-0-True-Week0]" time="0.020" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-0-True-cls_and_kwargs9]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-0-True-Week1]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-0-True-cls_and_kwargs11]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-0-True-BusinessDay]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-0-True-BDay]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-0-True-QuarterEnd]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-0-True-QuarterBegin]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-0-True-CustomBusinessDay]" time="0.018" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-0-True-CDay]" time="0.019" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-0-True-CBMonthEnd]" time="0.027" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-0-True-CBMonthBegin]" time="0.029" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-0-True-BMonthBegin]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-0-True-BMonthEnd]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-0-True-BusinessHour]" time="0.036" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-0-True-BYearBegin]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-0-True-BYearEnd]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-0-True-BQuarterBegin]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-0-True-cls_and_kwargs26]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-0-True-cls_and_kwargs27]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-0-True-cls_and_kwargs28]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-0-True-cls_and_kwargs29]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-0-True-Easter]" time="0.028" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-0-True-cls_and_kwargs31]" time="0.025" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-0-True-cls_and_kwargs32]" time="0.024" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-0-False-YearBegin]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-0-False-cls_and_kwargs1]" time="0.022" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-0-False-YearEnd]" time="0.021" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-0-False-cls_and_kwargs3]" time="0.019" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-0-False-MonthBegin]" time="0.024" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-0-False-MonthEnd]" time="0.026" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-0-False-SemiMonthEnd]" time="0.024" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-0-False-SemiMonthBegin]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-0-False-Week0]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-0-False-cls_and_kwargs9]" time="0.025" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-0-False-Week1]" time="0.028" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-0-False-cls_and_kwargs11]" time="0.022" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-0-False-BusinessDay]" time="0.021" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-0-False-BDay]" time="0.024" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-0-False-QuarterEnd]" time="0.019" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-0-False-QuarterBegin]" time="0.019" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-0-False-CustomBusinessDay]" time="0.028" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-0-False-CDay]" time="0.033" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-0-False-CBMonthEnd]" time="0.050" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-0-False-CBMonthBegin]" time="0.042" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-0-False-BMonthBegin]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-0-False-BMonthEnd]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-0-False-BusinessHour]" time="0.026" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-0-False-BYearBegin]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-0-False-BYearEnd]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-0-False-BQuarterBegin]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-0-False-cls_and_kwargs26]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-0-False-cls_and_kwargs27]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-0-False-cls_and_kwargs28]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-0-False-cls_and_kwargs29]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-0-False-Easter]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-0-False-cls_and_kwargs31]" time="0.019" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-0-False-cls_and_kwargs32]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-5-True-YearBegin]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-5-True-cls_and_kwargs1]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-5-True-YearEnd]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-5-True-cls_and_kwargs3]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-5-True-MonthBegin]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-5-True-MonthEnd]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-5-True-SemiMonthEnd]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-5-True-SemiMonthBegin]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-5-True-Week0]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-5-True-cls_and_kwargs9]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-5-True-Week1]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-5-True-cls_and_kwargs11]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-5-True-BusinessDay]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-5-True-BDay]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-5-True-QuarterEnd]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-5-True-QuarterBegin]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-5-True-CustomBusinessDay]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-5-True-CDay]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-5-True-CBMonthEnd]" time="0.027" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-5-True-CBMonthBegin]" time="0.029" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-5-True-BMonthBegin]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-5-True-BMonthEnd]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-5-True-BusinessHour]" time="0.022" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-5-True-BYearBegin]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-5-True-BYearEnd]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-5-True-BQuarterBegin]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-5-True-cls_and_kwargs26]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-5-True-cls_and_kwargs27]" time="0.045" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-5-True-cls_and_kwargs28]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-5-True-cls_and_kwargs29]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-5-True-Easter]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-5-True-cls_and_kwargs31]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-5-True-cls_and_kwargs32]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-5-False-YearBegin]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-5-False-cls_and_kwargs1]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-5-False-YearEnd]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-5-False-cls_and_kwargs3]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-5-False-MonthBegin]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-5-False-MonthEnd]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-5-False-SemiMonthEnd]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-5-False-SemiMonthBegin]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-5-False-Week0]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-5-False-cls_and_kwargs9]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-5-False-Week1]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-5-False-cls_and_kwargs11]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-5-False-BusinessDay]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-5-False-BDay]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-5-False-QuarterEnd]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-5-False-QuarterBegin]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-5-False-CustomBusinessDay]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-5-False-CDay]" time="0.019" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-5-False-CBMonthEnd]" time="0.034" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-5-False-CBMonthBegin]" time="0.046" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-5-False-BMonthBegin]" time="0.019" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-5-False-BMonthEnd]" time="0.021" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-5-False-BusinessHour]" time="0.041" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-5-False-BYearBegin]" time="0.018" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-5-False-BYearEnd]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-5-False-BQuarterBegin]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-5-False-cls_and_kwargs26]" time="0.021" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-5-False-cls_and_kwargs27]" time="0.068" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-5-False-cls_and_kwargs28]" time="0.023" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-5-False-cls_and_kwargs29]" time="0.021" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-5-False-Easter]" time="0.021" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-5-False-cls_and_kwargs31]" time="0.019" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-us-5-False-cls_and_kwargs32]" time="0.023" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-0-True-YearBegin]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-0-True-cls_and_kwargs1]" time="0.019" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-0-True-YearEnd]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-0-True-cls_and_kwargs3]" time="0.020" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-0-True-MonthBegin]" time="0.019" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-0-True-MonthEnd]" time="0.021" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-0-True-SemiMonthEnd]" time="0.025" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-0-True-SemiMonthBegin]" time="0.034" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-0-True-Week0]" time="0.023" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-0-True-cls_and_kwargs9]" time="0.021" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-0-True-Week1]" time="0.025" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-0-True-cls_and_kwargs11]" time="0.022" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-0-True-BusinessDay]" time="0.018" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-0-True-BDay]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-0-True-QuarterEnd]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-0-True-QuarterBegin]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-0-True-CustomBusinessDay]" time="0.018" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-0-True-CDay]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-0-True-CBMonthEnd]" time="0.028" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-0-True-CBMonthBegin]" time="0.039" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-0-True-BMonthBegin]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-0-True-BMonthEnd]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-0-True-BusinessHour]" time="0.039" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-0-True-BYearBegin]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-0-True-BYearEnd]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-0-True-BQuarterBegin]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-0-True-cls_and_kwargs26]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-0-True-cls_and_kwargs27]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-0-True-cls_and_kwargs28]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-0-True-cls_and_kwargs29]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-0-True-Easter]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-0-True-cls_and_kwargs31]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-0-True-cls_and_kwargs32]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-0-False-YearBegin]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-0-False-cls_and_kwargs1]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-0-False-YearEnd]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-0-False-cls_and_kwargs3]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-0-False-MonthBegin]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-0-False-MonthEnd]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-0-False-SemiMonthEnd]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-0-False-SemiMonthBegin]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-0-False-Week0]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-0-False-cls_and_kwargs9]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-0-False-Week1]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-0-False-cls_and_kwargs11]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-0-False-BusinessDay]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-0-False-BDay]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-0-False-QuarterEnd]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-0-False-QuarterBegin]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-0-False-CustomBusinessDay]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-0-False-CDay]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-0-False-CBMonthEnd]" time="0.022" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-0-False-CBMonthBegin]" time="0.030" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-0-False-BMonthBegin]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-0-False-BMonthEnd]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-0-False-BusinessHour]" time="0.022" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-0-False-BYearBegin]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-0-False-BYearEnd]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-0-False-BQuarterBegin]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-0-False-cls_and_kwargs26]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-0-False-cls_and_kwargs27]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-0-False-cls_and_kwargs28]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-0-False-cls_and_kwargs29]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-0-False-Easter]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-0-False-cls_and_kwargs31]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-0-False-cls_and_kwargs32]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-5-True-YearBegin]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-5-True-cls_and_kwargs1]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-5-True-YearEnd]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-5-True-cls_and_kwargs3]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-5-True-MonthBegin]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-5-True-MonthEnd]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-5-True-SemiMonthEnd]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-5-True-SemiMonthBegin]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-5-True-Week0]" time="0.018" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-5-True-cls_and_kwargs9]" time="0.023" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-5-True-Week1]" time="0.023" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-5-True-cls_and_kwargs11]" time="0.022" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-5-True-BusinessDay]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-5-True-BDay]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-5-True-QuarterEnd]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-5-True-QuarterBegin]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-5-True-CustomBusinessDay]" time="0.036" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-5-True-CDay]" time="0.064" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-5-True-CBMonthEnd]" time="0.043" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-5-True-CBMonthBegin]" time="0.046" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-5-True-BMonthBegin]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-5-True-BMonthEnd]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-5-True-BusinessHour]" time="0.035" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-5-True-BYearBegin]" time="0.021" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-5-True-BYearEnd]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-5-True-BQuarterBegin]" time="0.019" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-5-True-cls_and_kwargs26]" time="0.023" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-5-True-cls_and_kwargs27]" time="0.059" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-5-True-cls_and_kwargs28]" time="0.028" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-5-True-cls_and_kwargs29]" time="0.023" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-5-True-Easter]" time="0.025" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-5-True-cls_and_kwargs31]" time="0.026" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-5-True-cls_and_kwargs32]" time="0.026" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-5-False-YearBegin]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-5-False-cls_and_kwargs1]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-5-False-YearEnd]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-5-False-cls_and_kwargs3]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-5-False-MonthBegin]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-5-False-MonthEnd]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-5-False-SemiMonthEnd]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-5-False-SemiMonthBegin]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-5-False-Week0]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-5-False-cls_and_kwargs9]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-5-False-Week1]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-5-False-cls_and_kwargs11]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-5-False-BusinessDay]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-5-False-BDay]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-5-False-QuarterEnd]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-5-False-QuarterBegin]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-5-False-CustomBusinessDay]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-5-False-CDay]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-5-False-CBMonthEnd]" time="0.025" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-5-False-CBMonthBegin]" time="0.026" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-5-False-BMonthBegin]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-5-False-BMonthEnd]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-5-False-BusinessHour]" time="0.025" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-5-False-BYearBegin]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-5-False-BYearEnd]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-5-False-BQuarterBegin]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-5-False-cls_and_kwargs26]" time="0.043" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-5-False-cls_and_kwargs27]" time="0.107" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-5-False-cls_and_kwargs28]" time="0.026" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-5-False-cls_and_kwargs29]" time="0.025" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-5-False-Easter]" time="0.026" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-5-False-cls_and_kwargs31]" time="0.026" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-None-ns-5-False-cls_and_kwargs32]" time="0.018" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-0-True-YearBegin]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-0-True-cls_and_kwargs1]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-0-True-YearEnd]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-0-True-cls_and_kwargs3]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-0-True-MonthBegin]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-0-True-MonthEnd]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-0-True-SemiMonthEnd]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-0-True-SemiMonthBegin]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-0-True-Week0]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-0-True-cls_and_kwargs9]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-0-True-Week1]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-0-True-cls_and_kwargs11]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-0-True-BusinessDay]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-0-True-BDay]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-0-True-QuarterEnd]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-0-True-QuarterBegin]" time="0.019" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-0-True-CustomBusinessDay]" time="0.031" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-0-True-CDay]" time="0.032" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-0-True-CBMonthEnd]" time="0.048" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-0-True-CBMonthBegin]" time="0.049" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-0-True-BMonthBegin]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-0-True-BMonthEnd]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-0-True-BusinessHour]" time="0.026" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-0-True-BYearBegin]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-0-True-BYearEnd]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-0-True-BQuarterBegin]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-0-True-cls_and_kwargs26]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-0-True-cls_and_kwargs27]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-0-True-cls_and_kwargs28]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-0-True-cls_and_kwargs29]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-0-True-Easter]" time="0.024" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-0-True-cls_and_kwargs31]" time="0.027" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-0-True-cls_and_kwargs32]" time="0.026" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-0-False-YearBegin]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-0-False-cls_and_kwargs1]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-0-False-YearEnd]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-0-False-cls_and_kwargs3]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-0-False-MonthBegin]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-0-False-MonthEnd]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-0-False-SemiMonthEnd]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-0-False-SemiMonthBegin]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-0-False-Week0]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-0-False-cls_and_kwargs9]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-0-False-Week1]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-0-False-cls_and_kwargs11]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-0-False-BusinessDay]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-0-False-BDay]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-0-False-QuarterEnd]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-0-False-QuarterBegin]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-0-False-CustomBusinessDay]" time="0.024" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-0-False-CDay]" time="0.026" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-0-False-CBMonthEnd]" time="0.064" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-0-False-CBMonthBegin]" time="0.051" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-0-False-BMonthBegin]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-0-False-BMonthEnd]" time="0.021" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-0-False-BusinessHour]" time="0.041" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-0-False-BYearBegin]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-0-False-BYearEnd]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-0-False-BQuarterBegin]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-0-False-cls_and_kwargs26]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-0-False-cls_and_kwargs27]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-0-False-cls_and_kwargs28]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-0-False-cls_and_kwargs29]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-0-False-Easter]" time="0.031" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-0-False-cls_and_kwargs31]" time="0.034" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-0-False-cls_and_kwargs32]" time="0.041" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-5-True-YearBegin]" time="0.019" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-5-True-cls_and_kwargs1]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-5-True-YearEnd]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-5-True-cls_and_kwargs3]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-5-True-MonthBegin]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-5-True-MonthEnd]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-5-True-SemiMonthEnd]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-5-True-SemiMonthBegin]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-5-True-Week0]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-5-True-cls_and_kwargs9]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-5-True-Week1]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-5-True-cls_and_kwargs11]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-5-True-BusinessDay]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-5-True-BDay]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-5-True-QuarterEnd]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-5-True-QuarterBegin]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-5-True-CustomBusinessDay]" time="0.029" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-5-True-CDay]" time="0.027" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-5-True-CBMonthEnd]" time="0.041" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-5-True-CBMonthBegin]" time="0.060" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-5-True-BMonthBegin]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-5-True-BMonthEnd]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-5-True-BusinessHour]" time="0.032" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-5-True-BYearBegin]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-5-True-BYearEnd]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-5-True-BQuarterBegin]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-5-True-cls_and_kwargs26]" time="0.025" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-5-True-cls_and_kwargs27]" time="0.063" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-5-True-cls_and_kwargs28]" time="0.025" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-5-True-cls_and_kwargs29]" time="0.024" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-5-True-Easter]" time="0.025" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-5-True-cls_and_kwargs31]" time="0.029" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-5-True-cls_and_kwargs32]" time="0.028" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-5-False-YearBegin]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-5-False-cls_and_kwargs1]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-5-False-YearEnd]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-5-False-cls_and_kwargs3]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-5-False-MonthBegin]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-5-False-MonthEnd]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-5-False-SemiMonthEnd]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-5-False-SemiMonthBegin]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-5-False-Week0]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-5-False-cls_and_kwargs9]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-5-False-Week1]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-5-False-cls_and_kwargs11]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-5-False-BusinessDay]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-5-False-BDay]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-5-False-QuarterEnd]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-5-False-QuarterBegin]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-5-False-CustomBusinessDay]" time="0.021" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-5-False-CDay]" time="0.022" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-5-False-CBMonthEnd]" time="0.032" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-5-False-CBMonthBegin]" time="0.039" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-5-False-BMonthBegin]" time="0.025" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-5-False-BMonthEnd]" time="0.019" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-5-False-BusinessHour]" time="0.033" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-5-False-BYearBegin]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-5-False-BYearEnd]" time="0.018" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-5-False-BQuarterBegin]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-5-False-cls_and_kwargs26]" time="0.024" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-5-False-cls_and_kwargs27]" time="0.060" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-5-False-cls_and_kwargs28]" time="0.036" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-5-False-cls_and_kwargs29]" time="0.030" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-5-False-Easter]" time="0.023" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-5-False-cls_and_kwargs31]" time="0.023" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-s-5-False-cls_and_kwargs32]" time="0.023" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-0-True-YearBegin]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-0-True-cls_and_kwargs1]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-0-True-YearEnd]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-0-True-cls_and_kwargs3]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-0-True-MonthBegin]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-0-True-MonthEnd]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-0-True-SemiMonthEnd]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-0-True-SemiMonthBegin]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-0-True-Week0]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-0-True-cls_and_kwargs9]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-0-True-Week1]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-0-True-cls_and_kwargs11]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-0-True-BusinessDay]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-0-True-BDay]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-0-True-QuarterEnd]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-0-True-QuarterBegin]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-0-True-CustomBusinessDay]" time="0.025" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-0-True-CDay]" time="0.026" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-0-True-CBMonthEnd]" time="0.040" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-0-True-CBMonthBegin]" time="0.055" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-0-True-BMonthBegin]" time="0.019" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-0-True-BMonthEnd]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-0-True-BusinessHour]" time="0.027" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-0-True-BYearBegin]" time="0.021" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-0-True-BYearEnd]" time="0.019" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-0-True-BQuarterBegin]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-0-True-cls_and_kwargs26]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-0-True-cls_and_kwargs27]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-0-True-cls_and_kwargs28]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-0-True-cls_and_kwargs29]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-0-True-Easter]" time="0.025" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-0-True-cls_and_kwargs31]" time="0.035" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-0-True-cls_and_kwargs32]" time="0.029" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-0-False-YearBegin]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-0-False-cls_and_kwargs1]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-0-False-YearEnd]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-0-False-cls_and_kwargs3]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-0-False-MonthBegin]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-0-False-MonthEnd]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-0-False-SemiMonthEnd]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-0-False-SemiMonthBegin]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-0-False-Week0]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-0-False-cls_and_kwargs9]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-0-False-Week1]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-0-False-cls_and_kwargs11]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-0-False-BusinessDay]" time="0.019" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-0-False-BDay]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-0-False-QuarterEnd]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-0-False-QuarterBegin]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-0-False-CustomBusinessDay]" time="0.021" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-0-False-CDay]" time="0.021" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-0-False-CBMonthEnd]" time="0.030" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-0-False-CBMonthBegin]" time="0.033" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-0-False-BMonthBegin]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-0-False-BMonthEnd]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-0-False-BusinessHour]" time="0.026" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-0-False-BYearBegin]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-0-False-BYearEnd]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-0-False-BQuarterBegin]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-0-False-cls_and_kwargs26]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-0-False-cls_and_kwargs27]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-0-False-cls_and_kwargs28]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-0-False-cls_and_kwargs29]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-0-False-Easter]" time="0.042" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-0-False-cls_and_kwargs31]" time="0.042" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-0-False-cls_and_kwargs32]" time="0.055" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-5-True-YearBegin]" time="0.033" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-5-True-cls_and_kwargs1]" time="0.019" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-5-True-YearEnd]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-5-True-cls_and_kwargs3]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-5-True-MonthBegin]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-5-True-MonthEnd]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-5-True-SemiMonthEnd]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-5-True-SemiMonthBegin]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-5-True-Week0]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-5-True-cls_and_kwargs9]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-5-True-Week1]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-5-True-cls_and_kwargs11]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-5-True-BusinessDay]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-5-True-BDay]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-5-True-QuarterEnd]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-5-True-QuarterBegin]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-5-True-CustomBusinessDay]" time="0.025" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-5-True-CDay]" time="0.025" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-5-True-CBMonthEnd]" time="0.034" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-5-True-CBMonthBegin]" time="0.035" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-5-True-BMonthBegin]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-5-True-BMonthEnd]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-5-True-BusinessHour]" time="0.024" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-5-True-BYearBegin]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-5-True-BYearEnd]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-5-True-BQuarterBegin]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-5-True-cls_and_kwargs26]" time="0.022" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-5-True-cls_and_kwargs27]" time="0.052" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-5-True-cls_and_kwargs28]" time="0.026" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-5-True-cls_and_kwargs29]" time="0.031" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-5-True-Easter]" time="0.029" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-5-True-cls_and_kwargs31]" time="0.054" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-5-True-cls_and_kwargs32]" time="0.058" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-5-False-YearBegin]" time="0.031" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-5-False-cls_and_kwargs1]" time="0.035" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-5-False-YearEnd]" time="0.038" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-5-False-cls_and_kwargs3]" time="0.027" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-5-False-MonthBegin]" time="0.032" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-5-False-MonthEnd]" time="0.037" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-5-False-SemiMonthEnd]" time="0.031" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-5-False-SemiMonthBegin]" time="0.029" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-5-False-Week0]" time="0.021" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-5-False-cls_and_kwargs9]" time="0.024" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-5-False-Week1]" time="0.031" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-5-False-cls_and_kwargs11]" time="0.031" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-5-False-BusinessDay]" time="0.026" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-5-False-BDay]" time="0.032" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-5-False-QuarterEnd]" time="0.020" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-5-False-QuarterBegin]" time="0.018" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-5-False-CustomBusinessDay]" time="0.037" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-5-False-CDay]" time="0.036" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-5-False-CBMonthEnd]" time="0.065" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-5-False-CBMonthBegin]" time="0.066" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-5-False-BMonthBegin]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-5-False-BMonthEnd]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-5-False-BusinessHour]" time="0.041" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-5-False-BYearBegin]" time="0.022" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-5-False-BYearEnd]" time="0.027" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-5-False-BQuarterBegin]" time="0.025" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-5-False-cls_and_kwargs26]" time="0.029" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-5-False-cls_and_kwargs27]" time="0.075" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-5-False-cls_and_kwargs28]" time="0.024" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-5-False-cls_and_kwargs29]" time="0.024" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-5-False-Easter]" time="0.026" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-5-False-cls_and_kwargs31]" time="0.028" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ms-5-False-cls_and_kwargs32]" time="0.023" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-0-True-YearBegin]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-0-True-cls_and_kwargs1]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-0-True-YearEnd]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-0-True-cls_and_kwargs3]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-0-True-MonthBegin]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-0-True-MonthEnd]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-0-True-SemiMonthEnd]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-0-True-SemiMonthBegin]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-0-True-Week0]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-0-True-cls_and_kwargs9]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-0-True-Week1]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-0-True-cls_and_kwargs11]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-0-True-BusinessDay]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-0-True-BDay]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-0-True-QuarterEnd]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-0-True-QuarterBegin]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-0-True-CustomBusinessDay]" time="0.026" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-0-True-CDay]" time="0.025" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-0-True-CBMonthEnd]" time="0.046" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-0-True-CBMonthBegin]" time="0.055" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-0-True-BMonthBegin]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-0-True-BMonthEnd]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-0-True-BusinessHour]" time="0.029" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-0-True-BYearBegin]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-0-True-BYearEnd]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-0-True-BQuarterBegin]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-0-True-cls_and_kwargs26]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-0-True-cls_and_kwargs27]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-0-True-cls_and_kwargs28]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-0-True-cls_and_kwargs29]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-0-True-Easter]" time="0.026" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-0-True-cls_and_kwargs31]" time="0.029" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-0-True-cls_and_kwargs32]" time="0.026" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-0-False-YearBegin]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-0-False-cls_and_kwargs1]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-0-False-YearEnd]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-0-False-cls_and_kwargs3]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-0-False-MonthBegin]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-0-False-MonthEnd]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-0-False-SemiMonthEnd]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-0-False-SemiMonthBegin]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-0-False-Week0]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-0-False-cls_and_kwargs9]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-0-False-Week1]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-0-False-cls_and_kwargs11]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-0-False-BusinessDay]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-0-False-BDay]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-0-False-QuarterEnd]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-0-False-QuarterBegin]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-0-False-CustomBusinessDay]" time="0.039" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-0-False-CDay]" time="0.058" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-0-False-CBMonthEnd]" time="0.052" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-0-False-CBMonthBegin]" time="0.045" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-0-False-BMonthBegin]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-0-False-BMonthEnd]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-0-False-BusinessHour]" time="0.031" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-0-False-BYearBegin]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-0-False-BYearEnd]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-0-False-BQuarterBegin]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-0-False-cls_and_kwargs26]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-0-False-cls_and_kwargs27]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-0-False-cls_and_kwargs28]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-0-False-cls_and_kwargs29]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-0-False-Easter]" time="0.020" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-0-False-cls_and_kwargs31]" time="0.019" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-0-False-cls_and_kwargs32]" time="0.018" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-5-True-YearBegin]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-5-True-cls_and_kwargs1]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-5-True-YearEnd]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-5-True-cls_and_kwargs3]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-5-True-MonthBegin]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-5-True-MonthEnd]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-5-True-SemiMonthEnd]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-5-True-SemiMonthBegin]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-5-True-Week0]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-5-True-cls_and_kwargs9]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-5-True-Week1]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-5-True-cls_and_kwargs11]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-5-True-BusinessDay]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-5-True-BDay]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-5-True-QuarterEnd]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-5-True-QuarterBegin]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-5-True-CustomBusinessDay]" time="0.023" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-5-True-CDay]" time="0.026" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-5-True-CBMonthEnd]" time="0.219" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-5-True-CBMonthBegin]" time="0.088" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-5-True-BMonthBegin]" time="0.073" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-5-True-BMonthEnd]" time="0.052" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-5-True-BusinessHour]" time="0.053" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-5-True-BYearBegin]" time="0.044" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-5-True-BYearEnd]" time="0.023" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-5-True-BQuarterBegin]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-5-True-cls_and_kwargs26]" time="0.028" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-5-True-cls_and_kwargs27]" time="0.062" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-5-True-cls_and_kwargs28]" time="0.026" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-5-True-cls_and_kwargs29]" time="0.028" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-5-True-Easter]" time="0.026" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-5-True-cls_and_kwargs31]" time="0.032" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-5-True-cls_and_kwargs32]" time="0.033" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-5-False-YearBegin]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-5-False-cls_and_kwargs1]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-5-False-YearEnd]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-5-False-cls_and_kwargs3]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-5-False-MonthBegin]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-5-False-MonthEnd]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-5-False-SemiMonthEnd]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-5-False-SemiMonthBegin]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-5-False-Week0]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-5-False-cls_and_kwargs9]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-5-False-Week1]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-5-False-cls_and_kwargs11]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-5-False-BusinessDay]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-5-False-BDay]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-5-False-QuarterEnd]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-5-False-QuarterBegin]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-5-False-CustomBusinessDay]" time="0.023" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-5-False-CDay]" time="0.026" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-5-False-CBMonthEnd]" time="0.032" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-5-False-CBMonthBegin]" time="0.034" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-5-False-BMonthBegin]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-5-False-BMonthEnd]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-5-False-BusinessHour]" time="0.029" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-5-False-BYearBegin]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-5-False-BYearEnd]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-5-False-BQuarterBegin]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-5-False-cls_and_kwargs26]" time="0.018" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-5-False-cls_and_kwargs27]" time="0.046" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-5-False-cls_and_kwargs28]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-5-False-cls_and_kwargs29]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-5-False-Easter]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-5-False-cls_and_kwargs31]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-us-5-False-cls_and_kwargs32]" time="0.018" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-0-True-YearBegin]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-0-True-cls_and_kwargs1]" time="0.020" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-0-True-YearEnd]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-0-True-cls_and_kwargs3]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-0-True-MonthBegin]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-0-True-MonthEnd]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-0-True-SemiMonthEnd]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-0-True-SemiMonthBegin]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-0-True-Week0]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-0-True-cls_and_kwargs9]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-0-True-Week1]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-0-True-cls_and_kwargs11]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-0-True-BusinessDay]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-0-True-BDay]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-0-True-QuarterEnd]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-0-True-QuarterBegin]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-0-True-CustomBusinessDay]" time="0.020" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-0-True-CDay]" time="0.021" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-0-True-CBMonthEnd]" time="0.029" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-0-True-CBMonthBegin]" time="0.033" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-0-True-BMonthBegin]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-0-True-BMonthEnd]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-0-True-BusinessHour]" time="0.021" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-0-True-BYearBegin]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-0-True-BYearEnd]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-0-True-BQuarterBegin]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-0-True-cls_and_kwargs26]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-0-True-cls_and_kwargs27]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-0-True-cls_and_kwargs28]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-0-True-cls_and_kwargs29]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-0-True-Easter]" time="0.018" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-0-True-cls_and_kwargs31]" time="0.021" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-0-True-cls_and_kwargs32]" time="0.021" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-0-False-YearBegin]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-0-False-cls_and_kwargs1]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-0-False-YearEnd]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-0-False-cls_and_kwargs3]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-0-False-MonthBegin]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-0-False-MonthEnd]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-0-False-SemiMonthEnd]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-0-False-SemiMonthBegin]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-0-False-Week0]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-0-False-cls_and_kwargs9]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-0-False-Week1]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-0-False-cls_and_kwargs11]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-0-False-BusinessDay]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-0-False-BDay]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-0-False-QuarterEnd]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-0-False-QuarterBegin]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-0-False-CustomBusinessDay]" time="0.019" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-0-False-CDay]" time="0.020" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-0-False-CBMonthEnd]" time="0.028" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-0-False-CBMonthBegin]" time="0.039" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-0-False-BMonthBegin]" time="0.018" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-0-False-BMonthEnd]" time="0.020" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-0-False-BusinessHour]" time="0.043" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-0-False-BYearBegin]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-0-False-BYearEnd]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-0-False-BQuarterBegin]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-0-False-cls_and_kwargs26]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-0-False-cls_and_kwargs27]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-0-False-cls_and_kwargs28]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-0-False-cls_and_kwargs29]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-0-False-Easter]" time="0.017" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-0-False-cls_and_kwargs31]" time="0.020" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-0-False-cls_and_kwargs32]" time="0.020" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-5-True-YearBegin]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-5-True-cls_and_kwargs1]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-5-True-YearEnd]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-5-True-cls_and_kwargs3]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-5-True-MonthBegin]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-5-True-MonthEnd]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-5-True-SemiMonthEnd]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-5-True-SemiMonthBegin]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-5-True-Week0]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-5-True-cls_and_kwargs9]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-5-True-Week1]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-5-True-cls_and_kwargs11]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-5-True-BusinessDay]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-5-True-BDay]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-5-True-QuarterEnd]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-5-True-QuarterBegin]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-5-True-CustomBusinessDay]" time="0.023" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-5-True-CDay]" time="0.032" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-5-True-CBMonthEnd]" time="0.038" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-5-True-CBMonthBegin]" time="0.044" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-5-True-BMonthBegin]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-5-True-BMonthEnd]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-5-True-BusinessHour]" time="0.025" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-5-True-BYearBegin]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-5-True-BYearEnd]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-5-True-BQuarterBegin]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-5-True-cls_and_kwargs26]" time="0.019" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-5-True-cls_and_kwargs27]" time="0.058" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-5-True-cls_and_kwargs28]" time="0.026" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-5-True-cls_and_kwargs29]" time="0.027" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-5-True-Easter]" time="0.024" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-5-True-cls_and_kwargs31]" time="0.031" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-5-True-cls_and_kwargs32]" time="0.029" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-5-False-YearBegin]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-5-False-cls_and_kwargs1]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-5-False-YearEnd]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-5-False-cls_and_kwargs3]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-5-False-MonthBegin]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-5-False-MonthEnd]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-5-False-SemiMonthEnd]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-5-False-SemiMonthBegin]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-5-False-Week0]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-5-False-cls_and_kwargs9]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-5-False-Week1]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-5-False-cls_and_kwargs11]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-5-False-BusinessDay]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-5-False-BDay]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-5-False-QuarterEnd]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-5-False-QuarterBegin]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-5-False-CustomBusinessDay]" time="0.021" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-5-False-CDay]" time="0.024" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-5-False-CBMonthEnd]" time="0.056" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-5-False-CBMonthBegin]" time="0.042" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-5-False-BMonthBegin]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-5-False-BMonthEnd]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-5-False-BusinessHour]" time="0.023" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-5-False-BYearBegin]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-5-False-BYearEnd]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-5-False-BQuarterBegin]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-5-False-cls_and_kwargs26]" time="0.016" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-5-False-cls_and_kwargs27]" time="0.049" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-5-False-cls_and_kwargs28]" time="0.018" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-5-False-cls_and_kwargs29]" time="0.029" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-5-False-Easter]" time="0.050" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-5-False-cls_and_kwargs31]" time="0.054" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[DataFrame-US/Central-ns-5-False-cls_and_kwargs32]" time="0.028" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-0-True-YearBegin]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-0-True-cls_and_kwargs1]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-0-True-YearEnd]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-0-True-cls_and_kwargs3]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-0-True-MonthBegin]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-0-True-MonthEnd]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-0-True-SemiMonthEnd]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-0-True-SemiMonthBegin]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-0-True-Week0]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-0-True-cls_and_kwargs9]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-0-True-Week1]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-0-True-cls_and_kwargs11]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-0-True-BusinessDay]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-0-True-BDay]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-0-True-QuarterEnd]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-0-True-QuarterBegin]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-0-True-CustomBusinessDay]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-0-True-CDay]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-0-True-CBMonthEnd]" time="0.015" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-0-True-CBMonthBegin]" time="0.019" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-0-True-BMonthBegin]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-0-True-BMonthEnd]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-0-True-BusinessHour]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-0-True-BYearBegin]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-0-True-BYearEnd]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-0-True-BQuarterBegin]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-0-True-cls_and_kwargs26]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-0-True-cls_and_kwargs27]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-0-True-cls_and_kwargs28]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-0-True-cls_and_kwargs29]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-0-True-Easter]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-0-True-cls_and_kwargs31]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-0-True-cls_and_kwargs32]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-0-False-YearBegin]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-0-False-cls_and_kwargs1]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-0-False-YearEnd]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-0-False-cls_and_kwargs3]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-0-False-MonthBegin]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-0-False-MonthEnd]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-0-False-SemiMonthEnd]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-0-False-SemiMonthBegin]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-0-False-Week0]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-0-False-cls_and_kwargs9]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-0-False-Week1]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-0-False-cls_and_kwargs11]" time="0.010" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-0-False-BusinessDay]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-0-False-BDay]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-0-False-QuarterEnd]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-0-False-QuarterBegin]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-0-False-CustomBusinessDay]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-0-False-CDay]" time="0.013" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-0-False-CBMonthEnd]" time="0.026" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-0-False-CBMonthBegin]" time="0.021" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-0-False-BMonthBegin]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-0-False-BMonthEnd]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-0-False-BusinessHour]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-0-False-BYearBegin]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-0-False-BYearEnd]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-0-False-BQuarterBegin]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-0-False-cls_and_kwargs26]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-0-False-cls_and_kwargs27]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-0-False-cls_and_kwargs28]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-0-False-cls_and_kwargs29]" time="0.001" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-0-False-Easter]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-0-False-cls_and_kwargs31]" time="0.011" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-0-False-cls_and_kwargs32]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-5-True-YearBegin]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-5-True-cls_and_kwargs1]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-5-True-YearEnd]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-5-True-cls_and_kwargs3]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-5-True-MonthBegin]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-5-True-MonthEnd]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-5-True-SemiMonthEnd]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-5-True-SemiMonthBegin]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-5-True-Week0]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-5-True-cls_and_kwargs9]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-5-True-Week1]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-5-True-cls_and_kwargs11]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-5-True-BusinessDay]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-5-True-BDay]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-5-True-QuarterEnd]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-5-True-QuarterBegin]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-5-True-CustomBusinessDay]" time="0.009" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-5-True-CDay]" time="0.008" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-5-True-CBMonthEnd]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-5-True-CBMonthBegin]" time="0.014" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-5-True-BMonthBegin]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-5-True-BMonthEnd]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-5-True-BusinessHour]" time="0.012" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-5-True-BYearBegin]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-5-True-BYearEnd]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-5-True-BQuarterBegin]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-5-True-cls_and_kwargs26]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-5-True-cls_and_kwargs27]" time="0.035" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-5-True-cls_and_kwargs28]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-5-True-cls_and_kwargs29]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-5-True-Easter]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-5-True-cls_and_kwargs31]" time="0.006" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-5-True-cls_and_kwargs32]" time="0.007" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-5-False-YearBegin]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-5-False-cls_and_kwargs1]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-5-False-YearEnd]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-5-False-cls_and_kwargs3]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-5-False-MonthBegin]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-5-False-MonthEnd]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-5-False-SemiMonthEnd]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-5-False-SemiMonthBegin]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-5-False-Week0]" time="0.002" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-5-False-cls_and_kwargs9]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-5-False-Week1]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-5-False-cls_and_kwargs11]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-5-False-BusinessDay]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-5-False-BDay]" time="0.004" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-5-False-QuarterEnd]" time="0.005" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-5-False-QuarterBegin]" time="0.003" /><testcase classname="tests.arithmetic.test_datetime64.TestDatetime64DateOffsetArithmetic" name="test_dt64arr_add_sub_DateOffsets[array-None-s-5-False-CustomBusinessDay]" time="0.006" /><testcase time="0.001" /></testsuite></testsuites>